(function(f){if(typeof exports==="object"&&typeof module!=="undefined"){module.exports=f()}else if(typeof define==="function"&&define.amd){define([],f)}else{var g;if(typeof window!=="undefined"){g=window}else if(typeof global!=="undefined"){g=global}else if(typeof self!=="undefined"){g=self}else{g=this}g.HeroCalc = f()}})(function(){var define,module,exports;return (function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require=="function"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error("Cannot find module '"+o+"'");throw f.code="MODULE_NOT_FOUND",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require=="function"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({1:[function(require,module,exports){
"use strict";var ko=require("./herocalc_knockout"),abilityData=require("./herocalc_abilitydata"),AbilityModel=function(e,i){var t=this;t.hero=i,t.abilityData=abilityData,t.hasScepter=ko.observable(!1),t.isShapeShiftActive=ko.observable(!1),t.abilities=e,t._abilities=t.abilities();for(var a=0;a<t.abilities().length;a++)t._abilities[a].level=ko.observable(0),t._abilities[a].isActive=ko.observable(!1),t._abilities[a].isDetail=ko.observable(!1),t._abilities[a].baseDamage=ko.observable(0),t._abilities[a].baseDamageReductionPct=ko.observable(0),t._abilities[a].baseDamageMultiplier=ko.observable(0),t._abilities[a].bash=ko.observable(0),t._abilities[a].bashBonusDamage=ko.observable(0),t._abilities[a].bonusDamage=ko.observable(0),t._abilities[a].bonusDamageOrb=ko.observable(0),t._abilities[a].bonusDamagePct=ko.observable(0),t._abilities[a].bonusDamagePrecisionAura=ko.observable(0),t._abilities[a].bonusDamageReduction=ko.observable(0),t._abilities[a].bonusHealth=ko.observable(0),t._abilities[a].bonusStrength=ko.observable(0),t._abilities[a].bonusStrength2=ko.observable(0),t._abilities[a].bonusAgility=ko.observable(0),t._abilities[a].bonusAgility2=ko.observable(0),t._abilities[a].bonusInt=ko.observable(0),t._abilities[a].bonusAllStatsReduction=ko.observable(0),t._abilities[a].damageAmplification=ko.observable(0),t._abilities[a].damageReduction=ko.observable(0),t._abilities[a].evasion=ko.observable(0),t._abilities[a].magicResist=ko.observable(0),t._abilities[a].manaregen=ko.observable(0),t._abilities[a].manaregenreduction=ko.observable(0),t._abilities[a].missChance=ko.observable(0),t._abilities[a].movementSpeedFlat=ko.observable(0),t._abilities[a].movementSpeedPct=ko.observable(0),t._abilities[a].movementSpeedPctReduction=ko.observable(0),t._abilities[a].turnRateReduction=ko.observable(0),t._abilities[a].attackrange=ko.observable(0),t._abilities[a].attackspeed=ko.observable(0),t._abilities[a].attackspeedreduction=ko.observable(0),t._abilities[a].armor=ko.observable(0),t._abilities[a].armorReduction=ko.observable(0),t._abilities[a].healthregen=ko.observable(0),t._abilities[a].lifesteal=ko.observable(0),t._abilities[a].visionnight=ko.observable(0),t._abilities[a].visionday=ko.observable(0);t.abilityControlData={},t.abilitySettingsData=function(e,i,a){return void 0==t.abilityControlData[e]?t.processAbility(e,i,a,t.abilityData[e]):t.abilityControlData[e]},t.processAbility=function(e,i,a,l){var s={};s.data=[];for(var r,n=[],b=0;b<l.length;b++)switch(l[b].controlType){case"input":r=ko.observable(0).extend({numeric:2}),r.controlValueType=l[b].controlValueType,n.push(r),s.data.push({labelName:l[b].label.toUpperCase()+":",controlVal:r,controlType:l[b].controlType,display:l[b].display});break;case"checkbox":r=ko.observable(!1),r.controlValueType=l[b].controlValueType,n.push(r),s.data.push({labelName:l[b].label.toUpperCase()+"?",controlVal:r,controlType:l[b].controlType,display:l[b].display});break;case"radio":r=ko.observable(l[b].controlOptions[0].value),r.controlValueType=l[b].controlValueType,n.push(r),s.data.push({labelName:l[b].label.toUpperCase()+"?",controlVal:r,controlType:l[b].controlType,display:l[b].display,controlOptions:l[b].controlOptions});break;case"method":case"text":if(void 0==l[b].controls){if(l[b].noLevel)var o=function(i){return{fn:ko.computed(function(){var a=t.abilities().find(function(i){return i.name==e});return t.getAbilityAttributeValue(a.attributes,i,0)})}};else var o=function(i){return{fn:ko.computed(function(){var a=t.abilities().find(function(i){return i.name==e});return t.getAbilityAttributeValue(a.attributes,i,a.level())})}};var u=o(l[b].attributeName),_=t.getComputedFunction(r,u.fn,l[b].fn,i,a,t,l[b].returnProperty,void 0,e);if(l[b].ignoreTooltip)var m=l[b].label||l[b].attributeName;else var m=t.getAbilityAttributeTooltip(t.abilities()[a].attributes,l[b].attributeName)||l[b].label||l[b].attributeName;s.data.push({labelName:m.toUpperCase(),controlVal:_,controlType:l[b].controlType,display:l[b].display,clean:u.fn})}else{if(l[b].noLevel)var o=function(e){return{fn:ko.computed(function(){return t.getAbilityAttributeValue(t.abilities()[a].attributes,e,0)})}};else var o=function(e){return{fn:ko.computed(function(){return t.getAbilityAttributeValue(t.abilities()[a].attributes,e,t.abilities()[a].level())})}};var u=o(l[b].attributeName),_=t.getComputedFunction(n,u.fn,l[b].fn,i,a,t,l[b].returnProperty,l[b].controls,e);if(l[b].ignoreTooltip)var m=l[b].label||l[b].attributeName;else var m=t.getAbilityAttributeTooltip(t.abilities()[a].attributes,l[b].attributeName)||l[b].label||l[b].attributeName;s.data.push({labelName:m.toUpperCase(),controlVal:_,controlType:l[b].controlType,display:l[b].display,clean:u.fn})}"method"==l[b].controlType&&n.push(_)}return t.abilityControlData[e]=s,s},t.getComputedFunction=function(e,i,t,a,l,s,r,n,b){var o=s.abilities().find(function(e){return e.name==b});return ko.pureComputed(function(){var b;if(void 0==n)b=void 0==e?e:"boolean"==typeof e()?e():void 0==e.controlValueType?parseFloat(e()):"string"==e.controlValueType?e():parseFloat(e());else{for(var u=[],_=0;_<n.length;_++)switch(typeof e[n[_]]()){case"boolean":case"object":u.push(e[n[_]]());break;default:u.push(parseFloat(e[n[_]]()))}b=u}var m=t.call(this,b,i(),a,l,s,o);return void 0!=r&&o[r](m),m},this)},t.getAbilityLevelByAbilityName=function(e){for(var i=0;i<t.abilities().length;i++)if(t._abilities[i].name==e)return t._abilities[i].level();return-1},t.getAbilityByName=function(e){for(var i=0;i<t.abilities().length;i++)if(t._abilities[i].name==e)return t._abilities[i]},t.getAbilityPropertyValue=function(e,i){return parseFloat(e[i]()[e.level()-1])},t.getAttributeBonusLevel=function(){for(var e=0;e<t.abilities().length;e++)if("attribute_bonus"==t._abilities[e].name)return t._abilities[e].level();return 0},t.getAllStatsReduction=ko.computed(function(){for(var e=0,i=0;i<t.abilities().length;i++){var a=t._abilities[i];if(a.level()>0&&(a.isActive()||a.behavior.indexOf("DOTA_ABILITY_BEHAVIOR_PASSIVE")!=-1))if(a.name in t.abilityData)void 0!=a.bonusAllStatsReduction&&(e+=a.bonusAllStatsReduction());else for(var l=0;l<t._abilities[i].attributes.length;l++){t._abilities[i].attributes[l]}}return e}),t.getStrengthReduction=ko.computed(function(){for(var e=0,i=0;i<t.abilities().length;i++){var a=t._abilities[i];if(a.level()>0&&(a.isActive()||a.behavior.indexOf("DOTA_ABILITY_BEHAVIOR_PASSIVE")!=-1))if(a.name in t.abilityData)void 0!=a.bonusStrength&&"undying_decay"==a.name&&(e-=a.bonusStrength());else for(var l=0;l<t._abilities[i].attributes.length;l++){t._abilities[i].attributes[l]}}return e}),t.getStrength=ko.computed(function(){for(var e=0,i=0;i<t.abilities().length;i++){var a=t._abilities[i];if(a.level()>0)if(a.name in t.abilityData)void 0!=a.bonusStrength&&(a.isActive()||a.behavior.indexOf("DOTA_ABILITY_BEHAVIOR_PASSIVE")!=-1||"invoker_quas"==a.name)&&(e+=a.bonusStrength()),void 0!=a.bonusStrength2&&(a.isActive()||a.behavior.indexOf("DOTA_ABILITY_BEHAVIOR_PASSIVE")!=-1)&&(e+=a.bonusStrength2());else if(a.isActive()||a.behavior.indexOf("DOTA_ABILITY_BEHAVIOR_PASSIVE")!=-1)for(var l=0;l<t._abilities[i].attributes.length;l++){t._abilities[i].attributes[l]}}return e}),t.getAgility=ko.computed(function(){for(var e=0,i=0;i<t.abilities().length;i++){var a=t._abilities[i];if(a.level()>0)if(a.name in t.abilityData)void 0!=a.bonusAgility&&(a.isActive()||a.behavior.indexOf("DOTA_ABILITY_BEHAVIOR_PASSIVE")!=-1||"invoker_wex"==a.name)&&(e+=a.bonusAgility()),void 0!=a.bonusAgility2&&(a.isActive()||a.behavior.indexOf("DOTA_ABILITY_BEHAVIOR_PASSIVE")!=-1)&&(e+=a.bonusAgility2());else if(a.isActive()||a.behavior.indexOf("DOTA_ABILITY_BEHAVIOR_PASSIVE")!=-1)for(var l=0;l<t._abilities[i].attributes.length;l++){var s=t._abilities[i].attributes[l];switch(s.name){case"marksmanship_agility_bonus":e+=t.getAbilityAttributeValue(t._abilities[i].attributes,s.name,a.level())}}}return e}),t.getIntelligence=ko.computed(function(){for(var e=0,i=0;i<t.abilities().length;i++){var a=t._abilities[i];if(a.level()>0)if(a.name in t.abilityData)void 0!=a.bonusInt&&(a.isActive()||a.behavior.indexOf("DOTA_ABILITY_BEHAVIOR_PASSIVE")!=-1||"invoker_exort"==a.name)&&(e+=a.bonusInt());else if(a.isActive()||a.behavior.indexOf("DOTA_ABILITY_BEHAVIOR_PASSIVE")!=-1)for(var l=0;l<t._abilities[i].attributes.length;l++){var s=t._abilities[i].attributes[l];s.name}}return e}),t.getArmor=ko.computed(function(){for(var e=0,i=0;i<t.abilities().length;i++){var a=t._abilities[i];if(a.level()>0&&(a.isActive()||a.behavior.indexOf("DOTA_ABILITY_BEHAVIOR_PASSIVE")!=-1))if(a.name in t.abilityData)void 0!=a.armor&&(e+=a.armor());else for(var l=0;l<t._abilities[i].attributes.length;l++){var s=t._abilities[i].attributes[l];switch(s.name){case"bonus_armor":"templar_assassin_meld"!=a.name&&(e+=t.getAbilityAttributeValue(t._abilities[i].attributes,s.name,a.level()));break;case"warcry_armor":e+=t.getAbilityAttributeValue(t._abilities[i].attributes,s.name,a.level());break;case"armor_bonus":"lich_frost_armor"!=a.name&&"ogre_magi_frost_armor"!=a.name||(e+=t.getAbilityAttributeValue(t._abilities[i].attributes,s.name,a.level()))}}}return e}),t.getArmorBaseReduction=ko.computed(function(){for(var e=1,i=0;i<t.abilities().length;i++){var a=t._abilities[i];if(a.level()>0&&(a.isActive()||a.behavior.indexOf("DOTA_ABILITY_BEHAVIOR_PASSIVE")!=-1))switch(a.name){case"elder_titan_natural_order":e*=1-t.getAbilityAttributeValue(t._abilities[i].attributes,"armor_reduction_pct",a.level())/100}}return e}),t.getArmorReduction=ko.computed(function(){for(var e=0,i=0;i<t.abilities().length;i++){var a=t._abilities[i];if(a.level()>0&&(a.isActive()||a.behavior.indexOf("DOTA_ABILITY_BEHAVIOR_PASSIVE")!=-1))if(a.name in t.abilityData)void 0!=a.armorReduction&&(e+=a.armorReduction());else switch(a.name){case"templar_assassin_meld":e+=t.getAbilityAttributeValue(t._abilities[i].attributes,"bonus_armor",a.level());break;case"tidehunter_gush":e+=t.getAbilityAttributeValue(t._abilities[i].attributes,"armor_bonus",a.level());break;case"naga_siren_rip_tide":case"slardar_amplify_damage":case"vengefulspirit_wave_of_terror":e+=t.getAbilityAttributeValue(t._abilities[i].attributes,"armor_reduction",a.level());break;case"nevermore_dark_lord":e+=t.getAbilityAttributeValue(t._abilities[i].attributes,"presence_armor_reduction",a.level())}}return e}),t.getHealth=ko.computed(function(){for(var e=0,i=0;i<t.abilities().length;i++){var a=t._abilities[i];if(a.level()>0&&(a.isActive()||a.behavior.indexOf("DOTA_ABILITY_BEHAVIOR_PASSIVE")!=-1))if(a.name in t.abilityData)void 0!=a.bonusHealth&&(e+=a.bonusHealth());else for(var l=0;l<t._abilities[i].attributes.length;l++){var s=t._abilities[i].attributes[l];switch(s.name){case"bonus_hp":e+=t.getAbilityAttributeValue(t._abilities[i].attributes,s.name,a.level());break;case"true_form_hp_bonus":t.isTrueFormActive()&&(e+=t.getAbilityAttributeValue(t._abilities[i].attributes,s.name,a.level()))}}}return e}),t.isTrueFormActive=function(){for(var e=0;e<t.abilities().length;e++){var i=t._abilities[e];if(i.isActive()&&"lone_druid_true_form"==i.name)return!0}return!1},t.getHealthRegen=ko.computed(function(){for(var e=0,i=0;i<t.abilities().length;i++){var a=t._abilities[i];if(a.level()>0&&(a.isActive()||a.behavior.indexOf("DOTA_ABILITY_BEHAVIOR_PASSIVE")!=-1))if(a.name in t.abilityData)void 0!=a.healthregen&&(e+=a.healthregen());else for(var l=0;l<t._abilities[i].attributes.length;l++){var s=t._abilities[i].attributes[l];switch(s.name){case"bonus_health_regen":case"heath_regen":case"health_regen":e+=t.getAbilityAttributeValue(t._abilities[i].attributes,s.name,a.level());break;case"hp_regen":e+=t.getAbilityAttributeValue(t._abilities[i].attributes,s.name,a.level())}}}return e}),t.getMana=ko.computed(function(){for(var e=0,i=0;i<t.abilities().length;i++){var a=t._abilities[i];if(a.level()>0&&(a.isActive()||a.behavior.indexOf("DOTA_ABILITY_BEHAVIOR_PASSIVE")!=-1))for(var l=0;l<t._abilities[i].attributes.length;l++){var s=t._abilities[i].attributes[l];switch(s.name){case"bonus_mana":e+=t.getAbilityAttributeValue(t._abilities[i].attributes,s.name,a.level())}}}return e}),t.getManaRegen=ko.computed(function(){for(var e=0,i=0;i<t.abilities().length;i++){var a=t._abilities[i];if(a.level()>0&&(a.isActive()||a.behavior.indexOf("DOTA_ABILITY_BEHAVIOR_PASSIVE")!=-1))if(a.name in t.abilityData)void 0!=a.manaregen&&(e+=a.manaregen());else for(var l=0;l<t._abilities[i].attributes.length;l++){var s=t._abilities[i].attributes[l];switch(s.name){case"bonus_mana_regen":e+=t.getAbilityAttributeValue(t._abilities[i].attributes,s.name,a.level())}}}return e}),t.getManaRegenArcaneAura=ko.computed(function(){for(var e=0,i=0;i<t.abilities().length;i++){var a=t._abilities[i];if(a.level()>0&&(a.isActive()||a.behavior.indexOf("DOTA_ABILITY_BEHAVIOR_PASSIVE")!=-1))for(var l=0;l<t._abilities[i].attributes.length;l++){var s=t._abilities[i].attributes[l];switch(s.name){case"mana_regen":"crystal_maiden_brilliance_aura"==a.name&&(e+=t.getAbilityAttributeValue(t._abilities[i].attributes,s.name,a.level()))}}}return e}),t.getManaRegenReduction=ko.computed(function(){for(var e=0,i=0;i<t.abilities().length;i++){var a=t._abilities[i];a.level()>0&&(a.isActive()||a.behavior.indexOf("DOTA_ABILITY_BEHAVIOR_PASSIVE")!=-1)&&void 0!=a.manaregenreduction&&(e+=a.manaregenreduction())}return e}),t.getAttackRange=ko.computed(function(){for(var e=0,i=0;i<t.abilities().length;i++){var a=t._abilities[i];if(a.level()>0)if(a.name in t.abilityData)void 0!=a.attackrange&&(a.isActive()||a.behavior.indexOf("DOTA_ABILITY_BEHAVIOR_PASSIVE")!=-1)&&(e+=a.attackrange());else if(a.isActive()||a.behavior.indexOf("DOTA_ABILITY_BEHAVIOR_PASSIVE")!=-1){for(var l=0;l<t._abilities[i].attributes.length;l++){var s=t._abilities[i].attributes[l];switch(s.name){case"attack_range_bonus":case"bonus_attack_range":e+=t.getAbilityAttributeValue(t._abilities[i].attributes,s.name,a.level());break;case"bonus_range":"terrorblade_metamorphosis"==a.name&&(e+=t.getAbilityAttributeValue(t._abilities[i].attributes,s.name,a.level())),"troll_warlord_berserkers_rage"==a.name&&(e-=t.getAbilityAttributeValue(t._abilities[i].attributes,s.name,a.level()));break;case"bonus_range_scepter":"tiny_grow"==a.name&&t.hasScepter()&&(e+=t.getAbilityAttributeValue(t._abilities[i].attributes,s.name,a.level()));break;case"bonus_attack_range_scepter":"enchantress_impetus"==a.name&&t.hasScepter()&&(e+=t.getAbilityAttributeValue(t._abilities[i].attributes,s.name,a.level()))}}"lone_druid_true_form"==a.name&&(e-=422)}else if("enchantress_impetus"==a.name&&t.hasScepter())for(var l=0;l<t._abilities[i].attributes.length;l++){var s=t._abilities[i].attributes[l];switch(s.name){case"bonus_attack_range_scepter":e+=t.getAbilityAttributeValue(t._abilities[i].attributes,s.name,a.level())}}}return e}),t.getAttackSpeed=ko.computed(function(){for(var e=0,i=0;i<t.abilities().length;i++){var a=t._abilities[i];if(a.level()>0&&(a.isActive()||a.behavior.indexOf("DOTA_ABILITY_BEHAVIOR_PASSIVE")!=-1))if(a.name in t.abilityData)void 0!=a.attackspeed&&(e+=a.attackspeed());else for(var l=0;l<t._abilities[i].attributes.length;l++){var s=t._abilities[i].attributes[l];switch(s.name){case"attack_speed":case"attackspeed_bonus":case"leap_speedbonus_as":case"attack_speed_bonus":e+=t.getAbilityAttributeValue(t._abilities[i].attributes,s.name,a.level());break;case"attack_speed_bonus_pct":"clinkz_strafe"!=a.name&&"ursa_overpower"!=a.name||(e+=t.getAbilityAttributeValue(t._abilities[i].attributes,s.name,a.level()));break;case"speed_bonus":"axe_culling_blade"!=a.name&&"necronomicon_archer_aoe"!=a.name||(e+=t.getAbilityAttributeValue(t._abilities[i].attributes,s.name,a.level()));break;case"attack_speed_pct":"ancient_apparition_chilling_touch"==a.name&&(e+=t.getAbilityAttributeValue(t._abilities[i].attributes,s.name,a.level()));break;case"bonus_attack_speed":"beastmaster_inner_beast"!=a.name&&"lycan_feral_impulse"!=a.name&&"lone_druid_rabid"!=a.name&&"tiny_grow"!=a.name&&"phantom_assassin_phantom_strike"!=a.name&&"windrunner_focusfire"!=a.name&&"ogre_magi_bloodlust"!=a.name&&"centaur_khan_endurance_aura"!=a.name||(e+=t.getAbilityAttributeValue(t._abilities[i].attributes,s.name,a.level()))}}}return e}),t.getAttackSpeedReduction=ko.computed(function(){for(var e=0,i=0;i<t.abilities().length;i++){var a=t._abilities[i];if(a.level()>0&&(a.isActive()||a.behavior.indexOf("DOTA_ABILITY_BEHAVIOR_PASSIVE")!=-1))if(a.name in t.abilityData)void 0!=a.attackspeedreduction&&(e+=a.attackspeedreduction());else{for(var l=0;l<t._abilities[i].attributes.length;l++){var s=t._abilities[i].attributes[l];switch(s.name){case"attackspeed_slow":case"slow_attack_speed":case"slow_attack_speed_pct":case"overload_attack_slow":e+=t.getAbilityAttributeValue(t._abilities[i].attributes,s.name,a.level());break;case"speed_bonus":"omniknight_degen_aura"==a.name&&(e+=t.getAbilityAttributeValue(t._abilities[i].attributes,s.name,a.level()));break;case"attack_slow":"crystal_maiden_freezing_field"!=a.name||t.hasScepter()?"tusk_frozen_sigil"==a.name&&(e-=t.getAbilityAttributeValue(t._abilities[i].attributes,s.name,a.level())):e+=t.getAbilityAttributeValue(t._abilities[i].attributes,s.name,a.level());break;case"attack_slow_scepter":"crystal_maiden_freezing_field"==a.name&&t.hasScepter()&&(e+=t.getAbilityAttributeValue(t._abilities[i].attributes,s.name,a.level()));break;case"attack_speed_pct":"faceless_void_time_walk"==a.name&&(e+=t.getAbilityAttributeValue(t._abilities[i].attributes,s.name,a.level()));break;case"bonus_attackspeed":"bounty_hunter_jinada"==a.name&&(e+=t.getAbilityAttributeValue(t._abilities[i].attributes,s.name,a.level()));break;case"attack_speed_slow":"brewmaster_thunder_clap"==a.name&&(e-=t.getAbilityAttributeValue(t._abilities[i].attributes,s.name,a.level()));break;case"slow":"medusa_stone_gaze"==a.name&&(e-=t.getAbilityAttributeValue(t._abilities[i].attributes,s.name,a.level()));break;case"attackspeed_bonus":e-=t.getAbilityAttributeValue(t._abilities[i].attributes,s.name,a.level());break;case"attack_slow_tooltip":"abaddon_frostmourne"==a.name&&(e-=t.getAbilityAttributeValue(t._abilities[i].attributes,s.name,a.level()))}}"enraged_wildkin_tornado"==a.name&&(e-=15)}}return e}),t.getBash=ko.computed(function(){for(var e=1,i=0;i<t.abilities().length;i++){var a=t._abilities[i];if(a.level()>0&&(a.isActive()||a.behavior.indexOf("DOTA_ABILITY_BEHAVIOR_PASSIVE")!=-1))if(a.name in t.abilityData)void 0!=a.bash&&(e*=1-a.bash()/100);else for(var l=0;l<t._abilities[i].attributes.length;l++){var s=t._abilities[i].attributes[l];switch(s.name){case"chance":case"proc_chance":e*=1-t.getAbilityAttributeValue(t._abilities[i].attributes,s.name,a.level())/100}}}return e}),t.getBaseDamage=ko.computed(function(){for(var e=0,i=1,a={},l=0;l<t.abilities().length;l++){var s=t._abilities[l];if(s.level()>0&&(s.isActive()||s.behavior.indexOf("DOTA_ABILITY_BEHAVIOR_PASSIVE")!=-1))if(s.name in t.abilityData)void 0!=s.baseDamageMultiplier&&(i+=s.baseDamageMultiplier()/100),void 0!=s.baseDamage&&(e+=s.baseDamage(),a[s.name]={damage:s.baseDamage(),damageType:"physical",displayname:s.displayname});else for(var r=0;r<t._abilities[l].attributes.length;r++){var n=t._abilities[l].attributes[r];switch(n.name){case"bonus_damage":"tiny_grow"!=s.name&&"terrorblade_metamorphosis"!=s.name||(e+=t.getAbilityAttributeValue(t._abilities[l].attributes,n.name,s.level()),a[s.name]={damage:t.getAbilityAttributeValue(t._abilities[l].attributes,n.name,s.level()),damageType:"physical",displayname:s.displayname})}}}return{sources:a,total:e,multiplier:i}}),t.getSelfBaseDamageReductionPct=ko.computed(function(){for(var e=1,i=0;i<t.abilities().length;i++){var a=t._abilities[i];if(a.level()>0&&(a.isActive()||a.behavior.indexOf("DOTA_ABILITY_BEHAVIOR_PASSIVE")!=-1)&&!(a.name in t.abilityData))for(var l=0;l<t._abilities[i].attributes.length;l++){var s=t._abilities[i].attributes[l];switch(s.name){case"damage_modifier":e*=1+t.getAbilityAttributeValue(t._abilities[i].attributes,s.name,a.level())/100;break;case"focusfire_damage_reduction":t.hasScepter()||(e*=1+t.getAbilityAttributeValue(t._abilities[i].attributes,s.name,a.level())/100);break;case"focusfire_damage_reduction_scepter":t.hasScepter()&&(e*=1+t.getAbilityAttributeValue(t._abilities[i].attributes,s.name,a.level())/100)}}}return e}),t.getBaseDamageReductionPct=ko.computed(function(){for(var e=1,i=0;i<t.abilities().length;i++){var a=t._abilities[i];if(a.level()>0&&(a.isActive()||a.behavior.indexOf("DOTA_ABILITY_BEHAVIOR_PASSIVE")!=-1))if(a.name in t.abilityData)void 0!=a.baseDamageReductionPct&&(e*=1+a.baseDamageReductionPct()/100);else for(var l=0;l<t._abilities[i].attributes.length;l++){var s=t._abilities[i].attributes[l];switch(s.name){case"bonus_damage_pct":"vengefulspirit_command_aura"==a.name&&(e*=1-t.getAbilityAttributeValue(t._abilities[i].attributes,s.name,a.level())/100)}}}return e}),t.getBAT=ko.computed(function(){for(var e=0,i=0;i<t.abilities().length;i++){var a=t._abilities[i];if(a.level()>0&&(a.isActive()||a.behavior.indexOf("DOTA_ABILITY_BEHAVIOR_PASSIVE")!=-1)&&!(a.name in t.abilityData))for(var l=0;l<t._abilities[i].attributes.length;l++){var s=t._abilities[i].attributes[l];switch(s.name){case"base_attack_time":e+=t.getAbilityAttributeValue(t._abilities[i].attributes,s.name,a.level())}}}return e}),t.getBonusDamage=ko.computed(function(){for(var e=0,i={},a=0;a<t.abilities().length;a++){var l=t._abilities[a];if(l.level()>0&&(l.isActive()||l.behavior.indexOf("DOTA_ABILITY_BEHAVIOR_PASSIVE")!=-1))if(l.name in t.abilityData)void 0!=l.bonusDamage&&0!=l.bonusDamage()&&(e+=l.bonusDamage(),i[l.name]={damage:l.bonusDamage(),damageType:"spectre_desolate"==l.name?"pure":"physical",displayname:l.displayname});else{for(var s=0;s<t._abilities[a].attributes.length;s++){var r=t._abilities[a].attributes[s];switch(r.name){case"bonus_damage":"broodmother_insatiable_hunger"!=l.name&&"luna_lunar_blessing"!=l.name&&"templar_assassin_refraction"!=l.name&&"templar_assassin_meld"!=l.name&&"troll_warlord_berserkers_rage"!=l.name&&"lone_druid_true_form_battle_cry"!=l.name||(e+=t.getAbilityAttributeValue(t._abilities[a].attributes,r.name,l.level()),i[l.name]={damage:t.getAbilityAttributeValue(t._abilities[a].attributes,r.name,l.level()),damageType:"physical",displayname:l.displayname});break;case"hero_bonus_damage":e+=t.getAbilityAttributeValue(t._abilities[a].attributes,r.name,l.level()),i[l.name]={damage:t.getAbilityAttributeValue(t._abilities[a].attributes,r.name,l.level()),damageType:"physical",displayname:l.displayname}}}"storm_spirit_overload"==l.name&&(e+=t.getAbilityPropertyValue(l,"damage"),i[l.name]={damage:t.getAbilityPropertyValue(l,"damage"),damageType:"magic",displayname:l.displayname})}}return{sources:i,total:e}}),t.getBonusDamagePercent=ko.computed(function(){for(var e=0,i={},a=0;a<t.abilities().length;a++){var l=t._abilities[a];if(l.level()>0&&(l.isActive()||l.behavior.indexOf("DOTA_ABILITY_BEHAVIOR_PASSIVE")!=-1)&&!(l.name in t.abilityData))for(var s=0;s<t._abilities[a].attributes.length;s++){var r=t._abilities[a].attributes[s];switch(r.name){case"damage_increase_pct":"bloodseeker_bloodrage"==l.name&&(e+=t.getAbilityAttributeValue(t._abilities[a].attributes,r.name,l.level())/100,i[l.name]={damage:t.getAbilityAttributeValue(t._abilities[a].attributes,r.name,l.level())/100,damageType:"physical",displayname:l.displayname});break;case"bonus_damage_pct":"magnataur_empower"!=l.name&&"vengefulspirit_command_aura"!=l.name&&"alpha_wolf_command_aura"!=l.name||(e+=t.getAbilityAttributeValue(t._abilities[a].attributes,r.name,l.level())/100,i[l.name]={damage:t.getAbilityAttributeValue(t._abilities[a].attributes,r.name,l.level())/100,damageType:"physical",displayname:l.displayname});break;case"gods_strength_damage":"sven_gods_strength"==l.name&&void 0!=t.hero&&"sven"==t.hero.heroId()&&(e+=t.getAbilityAttributeValue(t._abilities[a].attributes,r.name,l.level())/100,i[l.name]={damage:t.getAbilityAttributeValue(t._abilities[a].attributes,r.name,l.level())/100,damageType:"physical",displayname:l.displayname});break;case"gods_strength_damage_scepter":"sven_gods_strength"==l.name&&void 0==t.hero&&(e+=t.getAbilityAttributeValue(t._abilities[a].attributes,r.name,l.level())/100,i[l.name]={damage:t.getAbilityAttributeValue(t._abilities[a].attributes,r.name,l.level())/100,damageType:"physical",displayname:l.displayname})}}}return{sources:i,total:e}}),t.getBonusDamageBackstab=ko.computed(function(){for(var e=0,i=0,a=[],l=0;l<t.abilities().length;l++){var s=t._abilities[l];if("riki_backstab"==s.name&&s.level()>0&&(s.isActive()||s.behavior.indexOf("DOTA_ABILITY_BEHAVIOR_PASSIVE")!=-1))for(var r=0;r<t._abilities[l].attributes.length;r++){var n=t._abilities[l].attributes[r];switch(n.name){case"damage_multiplier":e+=t.getAbilityAttributeValue(t._abilities[l].attributes,n.name,s.level()),a.push({damage:t.getAbilityAttributeValue(t._abilities[l].attributes,n.name,s.level()),damageType:"physical",displayname:s.displayname})}}}return{sources:a,total:[e,i]}}),t.getBonusDamagePrecisionAura=ko.computed(function(){for(var e=0,i=0,a=[],l=0;l<t.abilities().length;l++){var s=t._abilities[l];if("drow_ranger_trueshot"==s.name&&s.level()>0&&(s.isActive()||s.behavior.indexOf("DOTA_ABILITY_BEHAVIOR_PASSIVE")!=-1)){for(var r=0;r<t._abilities[l].attributes.length;r++){var n=t._abilities[l].attributes[r];switch(n.name){case"trueshot_ranged_damage":e+=t.getAbilityAttributeValue(t._abilities[l].attributes,n.name,s.level())/100,a.push({damage:t.getAbilityAttributeValue(t._abilities[l].attributes,n.name,s.level())/100,damageType:"physical",displayname:s.displayname})}}void 0!=s.bonusDamagePrecisionAura&&(i+=s.bonusDamagePrecisionAura(),a.push({damage:s.bonusDamagePrecisionAura(),damageType:"physical",displayname:s.displayname}))}}return{sources:a,total:[e,i]}}),t.getBonusDamageReduction=ko.computed(function(){for(var e=0,i=0;i<t.abilities().length;i++){var a=t._abilities[i];if(a.level()>0&&(a.isActive()||a.behavior.indexOf("DOTA_ABILITY_BEHAVIOR_PASSIVE")!=-1))if(a.name in t.abilityData)void 0!=a.bonusDamageReduction&&(e+=a.bonusDamageReduction());else for(var l=0;l<t._abilities[i].attributes.length;l++){var s=t._abilities[i].attributes[l];switch(s.name){case"enfeeble_attack_reduction":e+=t.getAbilityAttributeValue(t._abilities[i].attributes,s.name,a.level())}}}return e}),t.getBonusDamageReductionPct=ko.computed(function(){for(var e=1,i=0;i<t.abilities().length;i++){var a=t._abilities[i];if(a.level()>0&&(a.isActive()||a.behavior.indexOf("DOTA_ABILITY_BEHAVIOR_PASSIVE")!=-1)&&!(a.name in t.abilityData))for(var l=0;l<t._abilities[i].attributes.length;l++){var s=t._abilities[i].attributes[l];switch(s.name){case"damage_modifier":e*=1+t.getAbilityAttributeValue(t._abilities[i].attributes,s.name,a.level())/100;break;case"focusfire_damage_reduction":t.hasScepter()||(e*=1+t.getAbilityAttributeValue(t._abilities[i].attributes,s.name,a.level())/100);break;case"focusfire_damage_reduction_scepter":t.hasScepter()&&(e*=1+t.getAbilityAttributeValue(t._abilities[i].attributes,s.name,a.level())/100)}}}return e}),t.getDamageAmplification=ko.computed(function(){for(var e=1,i=0;i<t.abilities().length;i++){var a=t._abilities[i];a.level()>0&&(a.isActive()||a.behavior.indexOf("DOTA_ABILITY_BEHAVIOR_PASSIVE")!=-1)&&void 0!=a.damageAmplification&&(e*=1+a.damageAmplification()/100)}return e}),t.getDamageReduction=ko.computed(function(){for(var e=1,i=0;i<t.abilities().length;i++){var a=t._abilities[i];if(a.level()>0&&(a.isActive()||a.behavior.indexOf("DOTA_ABILITY_BEHAVIOR_PASSIVE")!=-1))if(a.name in t.abilityData)void 0!=a.damageReduction&&(e*=1+a.damageReduction()/100);else{for(var l=0;l<t._abilities[i].attributes.length;l++){var s=t._abilities[i].attributes[l];switch(s.name){case"damage_increase_pct":"bloodseeker_bloodrage"==a.name&&(e*=1+t.getAbilityAttributeValue(t._abilities[i].attributes,s.name,a.level())/100)}}"kunkka_ghostship"==a.name&&(e*=.5)}}return e}),t.getCritSource=ko.computed(function(){for(var e={},i=0;i<t.abilities().length;i++){var a=t._abilities[i];if(a.level()>0&&(a.isActive()||a.behavior.indexOf("DOTA_ABILITY_BEHAVIOR_PASSIVE")!=-1)&&!(a.name in t.abilityData))switch(a.name){case"phantom_assassin_coup_de_grace":void 0==e[a.name]?e[a.name]={chance:t.getAbilityAttributeValue(t._abilities[i].attributes,"crit_chance",a.level())/100,multiplier:t.getAbilityAttributeValue(t._abilities[i].attributes,"crit_bonus",a.level())/100,count:1,displayname:a.displayname}:e[a.name].count+=1;break;case"brewmaster_drunken_brawler":void 0==e[a.name]?e[a.name]={chance:t.getAbilityAttributeValue(t._abilities[i].attributes,"crit_chance",a.level())/100,multiplier:t.getAbilityAttributeValue(t._abilities[i].attributes,"crit_multiplier",a.level())/100,count:1,displayname:a.displayname}:e[a.name].count+=1;break;case"chaos_knight_chaos_strike":case"lycan_shapeshift":void 0==e[a.name]?e[a.name]={chance:t.getAbilityAttributeValue(t._abilities[i].attributes,"crit_chance",a.level())/100,multiplier:t.getAbilityAttributeValue(t._abilities[i].attributes,"crit_multiplier",a.level())/100,count:1,displayname:a.displayname}:e[a.name].count+=1;break;case"skeleton_king_mortal_strike":void 0==e[a.name]?e[a.name]={chance:t.getAbilityAttributeValue(t._abilities[i].attributes,"crit_chance",a.level())/100,multiplier:t.getAbilityAttributeValue(t._abilities[i].attributes,"crit_mult",a.level())/100,count:1,displayname:a.displayname}:e[a.name].count+=1;break;case"juggernaut_blade_dance":void 0==e[a.name]?e[a.name]={chance:t.getAbilityAttributeValue(t._abilities[i].attributes,"blade_dance_crit_chance",a.level())/100,multiplier:t.getAbilityAttributeValue(t._abilities[i].attributes,"blade_dance_crit_mult",a.level())/100,count:1,displayname:a.displayname}:e[a.name].count+=1;break;case"alpha_wolf_critical_strike":case"giant_wolf_critical_strike":void 0==e[a.name]?e[a.name]={chance:t.getAbilityAttributeValue(t._abilities[i].attributes,"crit_chance",a.level())/100,multiplier:t.getAbilityAttributeValue(t._abilities[i].attributes,"crit_mult",a.level())/100,count:1,displayname:a.displayname}:e[a.name].count+=1}}return e}),t.getCleaveSource=ko.computed(function(){for(var e={},i=0;i<t.abilities().length;i++){var a=t._abilities[i];if(a.level()>0&&(a.isActive()||a.behavior.indexOf("DOTA_ABILITY_BEHAVIOR_PASSIVE")!=-1)&&!(a.name in t.abilityData))switch(a.name){case"magnataur_empower":void 0==e[a.name]?e[a.name]={radius:t.getAbilityAttributeValue(t._abilities[i].attributes,"cleave_radius",a.level()),magnitude:t.getAbilityAttributeValue(t._abilities[i].attributes,"cleave_damage_pct",a.level())/100,count:1,displayname:a.displayname}:e[a.name].count+=1;break;case"sven_great_cleave":void 0==e[a.name]?e[a.name]={radius:t.getAbilityAttributeValue(t._abilities[i].attributes,"great_cleave_radius",a.level()),magnitude:t.getAbilityAttributeValue(t._abilities[i].attributes,"great_cleave_damage",a.level())/100,count:1,displayname:a.displayname}:e[a.name].count+=1;break;case"kunkka_tidebringer":void 0==e[a.name]?e[a.name]={radius:t.getAbilityAttributeValue(t._abilities[i].attributes,"radius",a.level()),magnitude:1,count:1,displayname:a.displayname}:e[a.name].count+=1;break;case"tiny_grow":t.hasScepter()&&(void 0==e[a.name]?e[a.name]={radius:t.getAbilityAttributeValue(t._abilities[i].attributes,"bonus_cleave_radius_scepter",a.level()),magnitude:t.getAbilityAttributeValue(t._abilities[i].attributes,"bonus_cleave_damage_scepter",a.level())/100,count:1,displayname:a.displayname}:e[a.name].count+=1)}}return e}),t.getCritChance=ko.computed(function(){for(var e=1,i=0;i<t.abilities().length;i++){var a=t._abilities[i];if(a.level()>0&&(a.isActive()||a.behavior.indexOf("DOTA_ABILITY_BEHAVIOR_PASSIVE")!=-1)&&!(a.name in t.abilityData))for(var l=0;l<t._abilities[i].attributes.length;l++){var s=t._abilities[i].attributes[l];switch(s.name){case"crit_chance":e*=1-t.getAbilityAttributeValue(t._abilities[i].attributes,s.name,a.level())/100}}}return e}),t.getEvasion=ko.computed(function(){for(var e=1,i=0;i<t.abilities().length;i++){var a=t._abilities[i];if(a.level()>0&&(a.isActive()||a.behavior.indexOf("DOTA_ABILITY_BEHAVIOR_PASSIVE")!=-1)&&!(a.name in t.abilityData))for(var l=0;l<t._abilities[i].attributes.length;l++){
var s=t._abilities[i].attributes[l];switch(s.name){case"bonus_evasion":case"dodge_chance":e*=1-t.getAbilityAttributeValue(t._abilities[i].attributes,s.name,a.level())/100}}}return e}),t.getEvasionBacktrack=ko.computed(function(){for(var e=1,i=0;i<t.abilities().length;i++){var a=t._abilities[i];if(a.level()>0&&(a.isActive()||a.behavior.indexOf("DOTA_ABILITY_BEHAVIOR_PASSIVE")!=-1)&&!(a.name in t.abilityData))for(var l=0;l<t._abilities[i].attributes.length;l++){var s=t._abilities[i].attributes[l];switch(s.name){case"dodge_chance_pct":e*=1-t.getAbilityAttributeValue(t._abilities[i].attributes,s.name,a.level())/100}}}return e}),t.getMissChance=ko.computed(function(){for(var e=1,i=0;i<t.abilities().length;i++){var a=t._abilities[i];if(a.level()>0&&(a.isActive()||a.behavior.indexOf("DOTA_ABILITY_BEHAVIOR_PASSIVE")!=-1))if(a.name in t.abilityData)void 0!=a.missChance&&(e*=1-a.missChance()/100);else for(var l=0;l<t._abilities[i].attributes.length;l++){var s=t._abilities[i].attributes[l];switch(s.name){case"miss_chance":case"miss_rate":e*=1-t.getAbilityAttributeValue(t._abilities[i].attributes,s.name,a.level())/100}}}return e}),t.getLifesteal=ko.computed(function(){for(var e=0,i=0;i<t.abilities().length;i++){var a=t._abilities[i];if(a.level()>0&&(a.isActive()||a.behavior.indexOf("DOTA_ABILITY_BEHAVIOR_PASSIVE")!=-1))if(a.name in t.abilityData)void 0!=a.lifesteal&&(e+=a.lifesteal());else for(var l=0;l<t._abilities[i].attributes.length;l++){var s=t._abilities[i].attributes[l];switch(s.name){case"vampiric_aura":case"lifesteal_pct":e+=t.getAbilityAttributeValue(t._abilities[i].attributes,s.name,a.level())}}}return e}),t.getMagicResist=ko.computed(function(){for(var e=1,i=0;i<t.abilities().length;i++){var a=t._abilities[i];if(a.level()>0&&(a.isActive()||a.behavior.indexOf("DOTA_ABILITY_BEHAVIOR_PASSIVE")!=-1))if(a.name in t.abilityData)void 0!=a.magicResist&&(e*=1-a.magicResist()/100);else for(var l=0;l<t._abilities[i].attributes.length;l++){var s=t._abilities[i].attributes[l];switch(s.name){case"spell_shield_resistance":e*=1-t.getAbilityAttributeValue(t._abilities[i].attributes,s.name,a.level())/100;break;case"magic_resistance_pct":"phantom_lancer_phantom_edge"==a.name&&(e*=1-t.getAbilityAttributeValue(t._abilities[i].attributes,s.name,a.level())/100);break;case"magic_damage_reduction_pct":"rubick_null_field"==a.name&&(e*=1-t.getAbilityAttributeValue(t._abilities[i].attributes,s.name,a.level())/100)}}}return e}),t.getMagicResistReduction=ko.computed(function(){for(var e=1,i=0;i<t.abilities().length;i++){var a=t._abilities[i];if(a.level()>0&&(a.isActive()||a.behavior.indexOf("DOTA_ABILITY_BEHAVIOR_PASSIVE")!=-1)&&!(a.name in t.abilityData))for(var l=0;l<t._abilities[i].attributes.length;l++){var s=t._abilities[i].attributes[l];switch(s.name){case"spell_resist_pct":case"bonus_spell_damage_pct":case"resist_debuff":e*=1-t.getAbilityAttributeValue(t._abilities[i].attributes,s.name,a.level())/100;break;case"magic_resistance_pct":e*=1-t.getAbilityAttributeValue(t._abilities[i].attributes,s.name,a.level())/100}}}return e}),t.getMovementSpeedFlat=ko.computed(function(){for(var e=0,i=0;i<t.abilities().length;i++){var a=t._abilities[i];if(a.level()>0&&(a.isActive()||a.behavior.indexOf("DOTA_ABILITY_BEHAVIOR_PASSIVE")!=-1))if(a.name in t.abilityData)void 0!=a.movementSpeedFlat&&(e+=a.movementSpeedFlat());else for(var l=0;l<t._abilities[i].attributes.length;l++){var s=t._abilities[i].attributes[l];switch(s.name){case"bonus_movespeed":"alchemist_chemical_rage"==a.name&&(e+=t.getAbilityAttributeValue(t._abilities[i].attributes,s.name,a.level()));break;case"bonus_movement_speed":"tiny_grow"==a.name&&(e+=t.getAbilityAttributeValue(t._abilities[i].attributes,s.name,a.level()));break;case"bonus_move_speed":"troll_warlord_berserkers_rage"==a.name&&(e+=t.getAbilityAttributeValue(t._abilities[i].attributes,s.name,a.level()));break;case"speed_loss":e-=t.getAbilityAttributeValue(t._abilities[i].attributes,s.name,a.level())}}}return e}),t.getMovementSpeedPercent=ko.computed(function(){for(var e=0,i=0;i<t.abilities().length;i++){var a=t._abilities[i];if(a.level()>0&&(a.isActive()||a.behavior.indexOf("DOTA_ABILITY_BEHAVIOR_PASSIVE")!=-1))if(a.name in t.abilityData)void 0!=a.movementSpeedPct&&(e+=a.movementSpeedPct()/100);else for(var l=0;l<t._abilities[i].attributes.length;l++){var s=t._abilities[i].attributes[l];switch(s.name){case"move_speed_pct":case"bonus_move_speed_pct":case"leap_speedbonus":case"warcry_movespeed":case"move_speed_bonus_pct":case"movespeed_bonus_pct":e+=t.getAbilityAttributeValue(t._abilities[i].attributes,s.name,a.level())/100;break;case"bonus_movespeed":"broodmother_spin_web"!=a.name&&"spectre_spectral_dagger"!=a.name||(e+=t.getAbilityAttributeValue(t._abilities[i].attributes,s.name,a.level())/100);break;case"speed_bonus":"axe_culling_blade"!=a.name&&"necronomicon_archer_aoe"!=a.name||(e+=t.getAbilityAttributeValue(t._abilities[i].attributes,s.name,a.level())/100);break;case"movement_speed":"nyx_assassin_vendetta"==a.name&&(e+=t.getAbilityAttributeValue(t._abilities[i].attributes,s.name,a.level())/100);break;case"bonus_movespeed_pct":"spirit_breaker_empowering_haste"==a.name&&(e+=t.getAbilityAttributeValue(t._abilities[i].attributes,s.name,a.level())/100);break;case"bonus_movement_speed":"ogre_magi_bloodlust"!=a.name&&"death_prophet_witchcraft"!=a.name&&"kobold_taskmaster_speed_aura"!=a.name||(e+=t.getAbilityAttributeValue(t._abilities[i].attributes,s.name,a.level())/100);break;case"movement_speed_pct":"razor_unstable_current"!=a.name&&"phantom_lancer_doppelwalk"!=a.name||(e+=t.getAbilityAttributeValue(t._abilities[i].attributes,s.name,a.level())/100);break;case"bonus_move_speed":"treant_natures_guise"!=a.name&&"lone_druid_rabid"!=a.name||(e+=t.getAbilityAttributeValue(t._abilities[i].attributes,s.name,a.level())/100);break;case"movespeed":"wisp_tether"==a.name&&(e+=t.getAbilityAttributeValue(t._abilities[i].attributes,s.name,a.level())/100);break;case"movespeed_bonus":"kunkka_ghostship"!=a.name&&"visage_grave_chill"!=a.name||(e+=t.getAbilityAttributeValue(t._abilities[i].attributes,s.name,a.level())/100)}}}return e}),t.getMovementSpeedPercentReduction=ko.computed(function(){for(var e=0,i=0;i<t.abilities().length;i++){var a=t._abilities[i];if(a.level()>0&&(a.isActive()||a.behavior.indexOf("DOTA_ABILITY_BEHAVIOR_PASSIVE")!=-1))if(a.name in t.abilityData)void 0!=a.movementSpeedPctReduction&&(e+=a.movementSpeedPctReduction()/100);else{for(var l=0;l<t._abilities[i].attributes.length;l++){var s=t._abilities[i].attributes[l];switch(s.name){case"movespeed_slow":"crystal_maiden_freezing_field"!=a.name||t.hasScepter()||(e+=t.getAbilityAttributeValue(t._abilities[i].attributes,s.name,a.level())/100);break;case"movespeed_slow_scepter":"crystal_maiden_freezing_field"==a.name&&t.hasScepter()&&(e+=t.getAbilityAttributeValue(t._abilities[i].attributes,s.name,a.level())/100);break;case"slow_pct":e-=t.getAbilityAttributeValue(t._abilities[i].attributes,s.name,a.level())/100;break;case"movespeed_slow":"crystal_maiden_freezing_field"!=a.name&&(e+=t.getAbilityAttributeValue(t._abilities[i].attributes,s.name,a.level())/100);break;case"slow_movement_speed":case"slow_movement_speed_pct":case"frost_arrows_movement_speed":case"blast_slow":case"crush_extra_slow":case"overload_move_slow":case"enemy_movespeed_bonus_pct":e+=t.getAbilityAttributeValue(t._abilities[i].attributes,s.name,a.level())/100;break;case"move_slow":"phantom_assassin_stifling_dagger"==a.name?e+=t.getAbilityAttributeValue(t._abilities[i].attributes,s.name,a.level())/100:"tusk_frozen_sigil"==a.name&&(e-=t.getAbilityAttributeValue(t._abilities[i].attributes,s.name,a.level())/100);break;case"slow":"medusa_stone_gaze"==a.name?e-=t.getAbilityAttributeValue(t._abilities[i].attributes,s.name,a.level())/100:e+=t.getAbilityAttributeValue(t._abilities[i].attributes,s.name,a.level())/100;break;case"bonus_movespeed":"broodmother_incapacitating_bite"==a.name||"bounty_hunter_jinada"==a.name||"winter_wyvern_arctic_burn"==a.name||"winter_wyvern_splinter_blast"==a.name?e+=t.getAbilityAttributeValue(t._abilities[i].attributes,s.name,a.level())/100:"spectre_spectral_dagger"==a.name&&(e-=t.getAbilityAttributeValue(t._abilities[i].attributes,s.name,a.level())/100);break;case"speed_bonus":"omniknight_degen_aura"==a.name&&(e+=t.getAbilityAttributeValue(t._abilities[i].attributes,s.name,a.level())/100);break;case"movement_speed":"tidehunter_gush"==a.name&&(e+=t.getAbilityAttributeValue(t._abilities[i].attributes,s.name,a.level())/100);break;case"bonus_movement_speed":"pugna_decrepify"!=a.name&&"chen_penitence"!=a.name||(e+=t.getAbilityAttributeValue(t._abilities[i].attributes,s.name,a.level())/100);break;case"movement_speed_pct":"ancient_apparition_ice_vortex"==a.name||"phantom_lancer_spirit_lance"==a.name||"faceless_void_time_walk"==a.name?e+=t.getAbilityAttributeValue(t._abilities[i].attributes,s.name,a.level())/100:"skywrath_mage_concussive_shot"==a.name&&(e-=t.getAbilityAttributeValue(t._abilities[i].attributes,s.name,a.level())/100);break;case"slow_amount":"razor_unstable_current"==a.name&&(e+=t.getAbilityAttributeValue(t._abilities[i].attributes,s.name,a.level())/100);break;case"movement_slow":"brewmaster_drunken_haze"==a.name||"brewmaster_thunder_clap"==a.name?e-=t.getAbilityAttributeValue(t._abilities[i].attributes,s.name,a.level())/100:"ursa_earthshock"!=a.name&&"treant_leech_seed"!=a.name||(e+=t.getAbilityAttributeValue(t._abilities[i].attributes,s.name,a.level())/100);break;case"movespeed":"skeleton_king_reincarnation"==a.name&&(e+=t.getAbilityAttributeValue(t._abilities[i].attributes,s.name,a.level())/100);break;case"movespeed_bonus":"kunkka_torrent"==a.name?e+=t.getAbilityAttributeValue(t._abilities[i].attributes,s.name,a.level())/100:"visage_grave_chill"==a.name&&(e-=t.getAbilityAttributeValue(t._abilities[i].attributes,s.name,a.level())/100)}}"satyr_trickster_purge"==a.name?e-=.8:"enraged_wildkin_tornado"==a.name&&(e-=.15)}}return e}),t.getTurnRateReduction=ko.computed(function(){for(var e=0,i=0;i<t.abilities().length;i++){var a=t._abilities[i];if(a.level()>0&&(a.isActive()||a.behavior.indexOf("DOTA_ABILITY_BEHAVIOR_PASSIVE")!=-1))if(a.name in t.abilityData)void 0!=a.turnRateReduction&&(e+=a.turnRateReduction()/100);else for(var l=0;l<t._abilities[i].attributes.length;l++){var s=t._abilities[i].attributes[l];switch(s.name){case"slow":"medusa_stone_gaze"==a.name&&(e-=t.getAbilityAttributeValue(t._abilities[i].attributes,s.name,a.level())/100)}}}return e}),t.getVisionRangeNight=ko.computed(function(){for(var e=0,i=0;i<t.abilities().length;i++){var a=t._abilities[i];if(a.level()>0&&(a.isActive()||a.behavior.indexOf("DOTA_ABILITY_BEHAVIOR_PASSIVE")!=-1))if(a.name in t.abilityData)void 0!=a.visionnight&&(e+=a.visionnight());else for(var l=0;l<t._abilities[i].attributes.length;l++){var s=t._abilities[i].attributes[l];switch(s.name){case"night_vision_bonus":case"bonus_night_vision":e+=t.getAbilityAttributeValue(t._abilities[i].attributes,s.name,a.level())}}}return e}),t.getVisionRangePctReduction=ko.computed(function(){for(var e=0,i=0;i<t.abilities().length;i++){var a=t._abilities[i];if(a.level()>0&&(a.isActive()||a.behavior.indexOf("DOTA_ABILITY_BEHAVIOR_PASSIVE")!=-1)&&!(a.name in t.abilityData))for(var l=0;l<t._abilities[i].attributes.length;l++){var s=t._abilities[i].attributes[l];switch(s.name){case"blind_percentage":e+=t.getAbilityAttributeValue(t._abilities[i].attributes,s.name,a.level())/100}}}return e}),t.setEvasion=ko.computed(function(){for(var e=0,i=0;i<t.abilities().length;i++){var a=t._abilities[i];if(a.level()>0&&(a.isActive()||a.behavior.indexOf("DOTA_ABILITY_BEHAVIOR_PASSIVE")!=-1)&&"windrunner_windrun"==a.name)return 1}return e}),t.setMovementSpeed=ko.computed(function(){for(var e=522,i=100,a=0,l=0;l<t.abilities().length;l++){var s=t._abilities[l];if(s.level()>0&&(s.isActive()||s.behavior.indexOf("DOTA_ABILITY_BEHAVIOR_PASSIVE")!=-1)){if("spirit_breaker_charge_of_darkness"==s.name)return t.getAbilityAttributeValue(s.attributes,"movement_speed",s.level());if("dark_seer_surge"==s.name)return e;if("centaur_stampede"==s.name)return e;if("lycan_shapeshift"==s.name)return e;if("lion_voodoo"==s.name||"shadow_shaman_voodoo"==s.name)return i}}return a}),t.getBashSource=function(e){for(var i={},a=0;a<t.abilities().length;a++){var l=t._abilities[a];if(l.level()>0&&(l.isActive()||l.behavior.indexOf("DOTA_ABILITY_BEHAVIOR_PASSIVE")!=-1))if(l.name in t.abilityData)void 0!=l.bashBonusDamage&&(void 0==i[l.name]&&"faceless_void_time_lock"==l.name&&(i[l.name]={chance:l.bash()/100,damage:l.bashBonusDamage(),count:1,damageType:"magic",displayname:l.displayname}),void 0==i[l.name]&&"spirit_breaker_greater_bash"==l.name&&(i[l.name]={chance:l.bash()/100,damage:l.bashBonusDamage()/100,count:1,damageType:"magic",displayname:l.displayname}));else for(var s=0;s<t._abilities[a].attributes.length;s++){var r=t._abilities[a].attributes[s];switch(r.name){case"proc_chance":void 0==i[l.name]&&"sniper_headshot"==l.name&&(i[l.name]={chance:t.getAbilityAttributeValue(l.attributes,r.name,l.level())/100,damage:t.getAbilityPropertyValue(l,"damage"),count:1,damageType:"physical",displayname:l.displayname});break;case"chance":void 0==i[l.name]&&"slardar_bash"==l.name&&(i[l.name]={chance:t.getAbilityAttributeValue(l.attributes,r.name,l.level())/100,damage:t.getAbilityAttributeValue(l.attributes,"bonus_damage",l.level()),count:1,damageType:"physical",displayname:l.displayname})}}}return i},t.getOrbSource=function(){for(var e={},i=0;i<t.abilities().length;i++){var a=t._abilities[i];if(a.level()>0&&(a.isActive()||a.behavior.indexOf("DOTA_ABILITY_BEHAVIOR_PASSIVE")!=-1))if(a.name in t.abilityData)void 0!=a.bonusDamageOrb&&void 0==e[a.name]&&"obsidian_destroyer_arcane_orb"==a.name&&(e[a.name]={damage:a.bonusDamageOrb(),damageType:"pure",displayname:a.displayname});else for(var l=0;l<t._abilities[i].attributes.length;l++){var s=t._abilities[i].attributes[l];switch(s.name){case"mana_per_hit":void 0==e[a.name]&&"antimage_mana_break"==a.name&&(e[a.name]={damage:t.getAbilityAttributeValue(a.attributes,s.name,a.level())*t.getAbilityAttributeValue(a.attributes,"damage_per_burn",a.level()),damageType:"physical",displayname:a.displayname});break;case"damage_bonus":void 0==e[a.name]&&"clinkz_searing_arrows"==a.name&&(e[a.name]={damage:t.getAbilityAttributeValue(a.attributes,s.name,a.level()),damageType:"physical",displayname:a.displayname});case"intellect_damage_pct":void 0==e[a.name]&&"silencer_glaives_of_wisdom"==a.name&&(e[a.name]={damage:t.getAbilityAttributeValue(a.attributes,s.name,a.level())/100*t.hero.totalInt(),damageType:"pure",displayname:a.displayname})}}}return e},t.toggleAbility=function(e,i,a){t.abilities()[e()].behavior.indexOf("DOTA_ABILITY_BEHAVIOR_PASSIVE")<0&&(t.abilities()[e()].isActive()?t.abilities()[e()].isActive(!1):t.abilities()[e()].isActive(!0),"lycan_shapeshift"==t.abilities()[e()].name&&t.isShapeShiftActive(t.abilities()[e()].isActive()))}.bind(this),t.toggleAbilityDetail=function(e,i,a){t.abilities()[e()].isDetail()?t.abilities()[e()].isDetail(!1):t.abilities()[e()].isDetail(!0)}.bind(this),t.getAbility=function(e){return t.abilities().find(function(i){return i.name==e})}};AbilityModel.prototype.levelUpAbility=function(e,i,t,a){var l=this;if(l.abilities()[e()].level()<a.getAbilityLevelMax(i)&&a.availableSkillPoints()>0){switch(l.abilities()[e()].abilitytype){case"DOTA_ABILITY_TYPE_ULTIMATE":"invoker"==a.heroId()?(0==l.abilities()[e()].level()&&parseInt(a.selectedHeroLevel())>=2||1==l.abilities()[e()].level()&&parseInt(a.selectedHeroLevel())>=7||2==l.abilities()[e()].level()&&parseInt(a.selectedHeroLevel())>=11||3==l.abilities()[e()].level()&&parseInt(a.selectedHeroLevel())>=17)&&(l.abilities()[e()].level(l.abilities()[e()].level()+1),a.skillPointHistory.push(e())):"meepo"==a.heroId()?7*l.abilities()[e()].level()+3<=parseInt(a.selectedHeroLevel())&&(l.abilities()[e()].level(l.abilities()[e()].level()+1),a.skillPointHistory.push(e())):5*(l.abilities()[e()].level()+1)+1<=parseInt(a.selectedHeroLevel())&&(l.abilities()[e()].level(l.abilities()[e()].level()+1),a.skillPointHistory.push(e()));break;default:2*l.abilities()[e()].level()+1<=parseInt(a.selectedHeroLevel())&&(l.abilities()[e()].level(l.abilities()[e()].level()+1),a.skillPointHistory.push(e()))}switch(l.abilities()[e()].name){case"beastmaster_call_of_the_wild":case"chen_test_of_faith":case"morphling_morph_agi":case"shadow_demon_shadow_poison":l.abilities()[e()+1].level(l.abilities()[e()].level());break;case"morphling_morph_str":l.abilities()[e()-1].level(l.abilities()[e()].level());break;case"keeper_of_the_light_spirit_form":l.abilities()[e()-1].level(l.abilities()[e()].level()),l.abilities()[e()-2].level(l.abilities()[e()].level());break;case"nevermore_shadowraze1":l.abilities()[e()+1].level(l.abilities()[e()].level()),l.abilities()[e()+2].level(l.abilities()[e()].level());break;case"nevermore_shadowraze2":l.abilities()[e()-1].level(l.abilities()[e()].level()),l.abilities()[e()+1].level(l.abilities()[e()].level());break;case"nevermore_shadowraze3":l.abilities()[e()-1].level(l.abilities()[e()].level()),l.abilities()[e()-2].level(l.abilities()[e()].level());break;case"ember_spirit_fire_remnant":l.abilities()[e()-1].level(l.abilities()[e()].level());break;case"lone_druid_true_form":l.abilities()[e()-1].level(l.abilities()[e()].level())}}},AbilityModel.prototype.levelDownAbility=function(e,i,t,a){var l=ko.utils.unwrapObservable(e),s=this;if(s.abilities()[l].level()>0)switch(s.abilities()[l].level(s.abilities()[l].level()-1),a.skillPointHistory.splice(a.skillPointHistory().lastIndexOf(l),1),s.abilities()[l].name){case"beastmaster_call_of_the_wild":case"chen_test_of_faith":case"morphling_morph_agi":case"shadow_demon_shadow_poison":s.abilities()[l+1].level(s.abilities()[l].level());break;case"morphling_morph_str":s.abilities()[l-1].level(s.abilities()[l].level());break;case"keeper_of_the_light_spirit_form":s.abilities()[l-1].level(s.abilities()[l].level()),s.abilities()[l-2].level(s.abilities()[l].level());break;case"nevermore_shadowraze1":s.abilities()[l+1].level(s.abilities()[l].level()),s.abilities()[l+2].level(s.abilities()[l].level());break;case"nevermore_shadowraze2":s.abilities()[l-1].level(s.abilities()[l].level()),s.abilities()[l+1].level(s.abilities()[l].level());break;case"nevermore_shadowraze3":s.abilities()[l-1].level(s.abilities()[l].level()),s.abilities()[l-2].level(s.abilities()[l].level());break;case"ember_spirit_fire_remnant":s.abilities()[l-1].level(s.abilities()[l].level());break;case"lone_druid_true_form":s.abilities()[l-1].level(s.abilities()[l].level())}},AbilityModel.prototype.getAbilityAttributeValue=function(e,i,t){for(var a=0;a<e.length;a++)if(e[a].name==i)return 0==t?parseFloat(e[a].value[0]):t>e[a].value.length?parseFloat(e[a].value[0]):parseFloat(e[a].value[t-1])},AbilityModel.prototype.getAbilityAttributeTooltip=function(e,i){for(var t=0;t<e.length;t++)if(e[t].name==i){if(e[t].hasOwnProperty("tooltip")){var a=e[t].tooltip.replace(/\\n/g,"");return a}return""}return""},module.exports=AbilityModel;
},{"./herocalc_abilitydata":18,"./herocalc_knockout":19}],2:[function(require,module,exports){
"use strict";var ko=require("./herocalc_knockout"),AbilityModel=require("./AbilityModel"),InventoryViewModel=require("./inventory/InventoryViewModel"),findWhere=require("./util/findWhere"),buffOptionsArray=require("./buffs/buffOptionsArray"),debuffOptionsArray=require("./buffs/debuffOptionsArray"),BuffViewModel=function(e){var i=this;return AbilityModel.call(this,ko.observableArray([])),i.availableBuffs=ko.observableArray(buffOptionsArray),i.availableDebuffs=ko.observableArray(debuffOptionsArray),i.selectedBuff=ko.observable(i.availableBuffs()[0]),i.buffs=ko.observableArray([]),i.itemBuffs=new InventoryViewModel,i.addBuff=function(e,a){if(void 0==findWhere(i.buffs(),{name:i.selectedBuff().buffName})){var l=JSON.parse(JSON.stringify(i.selectedBuff().abilityData));switch(l.level=ko.observable(0),l.isActive=ko.observable(!1),l.isDetail=ko.observable(!1),l.baseDamage=ko.observable(0),l.bash=ko.observable(0),l.bashBonusDamage=ko.observable(0),l.bonusDamage=ko.observable(0),l.bonusDamageOrb=ko.observable(0),l.bonusDamagePct=ko.observable(0),l.bonusDamagePrecisionAura=ko.observable(0),l.bonusDamageReduction=ko.observable(0),l.bonusHealth=ko.observable(0),l.bonusStrength=ko.observable(0),l.bonusStrength2=ko.observable(0),l.bonusAgility=ko.observable(0),l.bonusAgility2=ko.observable(0),l.bonusInt=ko.observable(0),l.bonusAllStatsReduction=ko.observable(0),l.damageAmplification=ko.observable(0),l.damageReduction=ko.observable(0),l.evasion=ko.observable(0),l.magicResist=ko.observable(0),l.manaregen=ko.observable(0),l.manaregenreduction=ko.observable(0),l.missChance=ko.observable(0),l.movementSpeedFlat=ko.observable(0),l.movementSpeedPct=ko.observable(0),l.movementSpeedPctReduction=ko.observable(0),l.turnRateReduction=ko.observable(0),l.attackrange=ko.observable(0),l.attackspeed=ko.observable(0),l.attackspeedreduction=ko.observable(0),l.armor=ko.observable(0),l.armorReduction=ko.observable(0),l.healthregen=ko.observable(0),l.lifesteal=ko.observable(0),l.visionnight=ko.observable(0),l.visionday=ko.observable(0),l.name){case"invoker_cold_snap":case"invoker_ghost_walk":case"invoker_tornado":case"invoker_emp":case"invoker_alacrity":case"invoker_chaos_meteor":case"invoker_sun_strike":case"invoker_forge_spirit":case"invoker_ice_wall":case"invoker_deafening_blast":l.level(1)}i.abilities.push(l),i.buffs.push({name:i.selectedBuff().buffName,hero:i.selectedBuff().hero,data:l})}},i.removeBuff=function(e,a,l){if(void 0!=findWhere(i.buffs(),{name:l})){if(i.buffs.remove(findWhere(i.buffs(),{name:l})),void 0!=i.abilityControlData[l]){for(var s=0;s<i.abilityControlData[l].data.length;s++)void 0!=i.abilityControlData[l].data[s].controlVal.dispose&&i.abilityControlData[l].data[s].controlVal.dispose(),void 0!=i.abilityControlData[l].data[s].clean&&i.abilityControlData[l].data[s].clean.dispose();i.abilityControlData[l]=void 0}for(var s=0;s<i.abilities().length;s++)if(i.abilities()[s].name==l){i.abilities()[s].level(0),i.abilities.remove(i.abilities()[s]);break}}},i.toggleBuff=function(e,a,l){i.buffs()[e()].data.behavior.indexOf("DOTA_ABILITY_BEHAVIOR_PASSIVE")<0&&(i.buffs()[e()].data.isActive()?(i.buffs()[e()].data.isActive(!1),i.abilities()[e()].isActive(!1)):(i.buffs()[e()].data.isActive(!0),i.abilities()[e()].isActive(!0)))}.bind(this),i.toggleBuffDetail=function(e,a,l){i.buffs()[e()].data.isDetail()?i.buffs()[e()].data.isDetail(!1):i.buffs()[e()].data.isDetail(!0)}.bind(this),i.levelUpAbility=function(e,a,l,s){if(i.abilities()[e()].level()<s.getAbilityLevelMax(a)){switch(i.abilities()[e()].abilitytype){case"DOTA_ABILITY_TYPE_ULTIMATE":i.abilities()[e()].level(i.abilities()[e()].level()+1);break;default:i.abilities()[e()].level(i.abilities()[e()].level()+1)}switch(i.abilities()[e()].name){case"beastmaster_call_of_the_wild":case"chen_test_of_faith":case"morphling_morph_agi":case"shadow_demon_shadow_poison":i.abilities()[e()+1].level(i.abilities()[e()].level());break;case"morphling_morph_str":i.abilities()[e()-1].level(i.abilities()[e()].level());break;case"keeper_of_the_light_spirit_form":i.abilities()[e()-1].level(i.abilities()[e()].level()),i.abilities()[e()-2].level(i.abilities()[e()].level());case"nevermore_shadowraze1":i.abilities()[e()+1].level(i.abilities()[e()].level()),i.abilities()[e()+2].level(i.abilities()[e()].level());break;case"nevermore_shadowraze2":i.abilities()[e()-1].level(i.abilities()[e()].level()),i.abilities()[e()+1].level(i.abilities()[e()].level());break;case"nevermore_shadowraze3":i.abilities()[e()-1].level(i.abilities()[e()].level()),i.abilities()[e()-2].level(i.abilities()[e()].level())}}},i.levelDownAbility=function(e,a,l,s){if(i.abilities()[e()].level()>0)switch(i.abilities()[e()].level(i.abilities()[e()].level()-1),i.abilities()[e()].name){case"beastmaster_call_of_the_wild":case"chen_test_of_faith":case"morphling_morph_agi":case"shadow_demon_shadow_poison":i.abilities()[e()+1].level(i.abilities()[e()].level());break;case"morphling_morph_str":i.abilities()[e()-1].level(i.abilities()[e()].level());break;case"keeper_of_the_light_spirit_form":i.abilities()[e()-1].level(i.abilities()[e()].level()),i.abilities()[e()-2].level(i.abilities()[e()].level());case"nevermore_shadowraze1":i.abilities()[e()+1].level(i.abilities()[e()].level()),i.abilities()[e()+2].level(i.abilities()[e()].level());break;case"nevermore_shadowraze2":i.abilities()[e()-1].level(i.abilities()[e()].level()),i.abilities()[e()+1].level(i.abilities()[e()].level());break;case"nevermore_shadowraze3":i.abilities()[e()-1].level(i.abilities()[e()].level()),i.abilities()[e()-2].level(i.abilities()[e()].level());break;case"ember_spirit_fire_remnant":i.abilities()[e()-1].level(i.abilities()[e()].level());break;case"lone_druid_true_form":i.abilities()[e()-1].level(i.abilities()[e()].level())}},i};BuffViewModel.prototype=Object.create(AbilityModel.prototype),BuffViewModel.prototype.constructor=BuffViewModel,module.exports=BuffViewModel;
},{"./AbilityModel":1,"./buffs/buffOptionsArray":4,"./buffs/debuffOptionsArray":5,"./herocalc_knockout":19,"./inventory/InventoryViewModel":22,"./util/findWhere":33}],3:[function(require,module,exports){
var findWhere=require("../util/findWhere"),heroData=require("../data/main").heroData,unitData=require("../data/main").unitData,BuffModel=function(a,i){this.buffName=i,void 0==heroData["npc_dota_hero_"+a]?(this.hero=a,this.abilityData=findWhere(unitData[a].abilities,{name:i}),this.buffDisplayName=unitData[a].displayname+" - "+this.abilityData.displayname):(this.hero="npc_dota_hero_"+a,this.abilityData=findWhere(heroData["npc_dota_hero_"+a].abilities,{name:i}),this.buffDisplayName=heroData["npc_dota_hero_"+a].displayname+" - "+this.abilityData.displayname,"sven_gods_strength"==i&&(this.buffDisplayName+=" (Aura for allies)"))};module.exports=BuffModel;
},{"../data/main":6,"../util/findWhere":33}],4:[function(require,module,exports){
var BuffModel=require("./BuffModel"),buffOptionsArray=[new BuffModel("abaddon","abaddon_frostmourne"),new BuffModel("axe","axe_culling_blade"),new BuffModel("beastmaster","beastmaster_inner_beast"),new BuffModel("bloodseeker","bloodseeker_bloodrage"),new BuffModel("bounty_hunter","bounty_hunter_track"),new BuffModel("centaur","centaur_stampede"),new BuffModel("crystal_maiden","crystal_maiden_brilliance_aura"),new BuffModel("dark_seer","dark_seer_surge"),new BuffModel("dazzle","dazzle_weave"),new BuffModel("drow_ranger","drow_ranger_trueshot"),new BuffModel("invoker","invoker_alacrity"),new BuffModel("wisp","wisp_tether"),new BuffModel("wisp","wisp_overcharge"),new BuffModel("kunkka","kunkka_ghostship"),new BuffModel("lich","lich_frost_armor"),new BuffModel("life_stealer","life_stealer_open_wounds"),new BuffModel("luna","luna_lunar_blessing"),new BuffModel("lycan","lycan_howl"),new BuffModel("magnataur","magnataur_empower"),new BuffModel("mirana","mirana_leap"),new BuffModel("ogre_magi","ogre_magi_bloodlust"),new BuffModel("omniknight","omniknight_guardian_angel"),new BuffModel("rubick","rubick_null_field"),new BuffModel("skeleton_king","skeleton_king_vampiric_aura"),new BuffModel("spirit_breaker","spirit_breaker_empowering_haste"),new BuffModel("sven","sven_warcry"),new BuffModel("sven","sven_gods_strength"),new BuffModel("treant","treant_living_armor"),new BuffModel("troll_warlord","troll_warlord_battle_trance"),new BuffModel("vengefulspirit","vengefulspirit_command_aura"),new BuffModel("npc_dota_neutral_alpha_wolf","alpha_wolf_critical_strike"),new BuffModel("npc_dota_neutral_alpha_wolf","alpha_wolf_command_aura"),new BuffModel("npc_dota_neutral_polar_furbolg_ursa_warrior","centaur_khan_endurance_aura"),new BuffModel("npc_dota_neutral_giant_wolf","giant_wolf_critical_strike"),new BuffModel("npc_dota_neutral_kobold_taskmaster","kobold_taskmaster_speed_aura"),new BuffModel("npc_dota_neutral_ogre_magi","ogre_magi_frost_armor"),new BuffModel("npc_dota_neutral_satyr_hellcaller","satyr_hellcaller_unholy_aura"),new BuffModel("npc_dota_neutral_enraged_wildkin","enraged_wildkin_toughness_aura"),new BuffModel("npc_dota_necronomicon_archer_1","necronomicon_archer_aoe")];module.exports=buffOptionsArray;
},{"./BuffModel":3}],5:[function(require,module,exports){
var BuffModel=require("./BuffModel"),debuffOptionsArray=[new BuffModel("abaddon","abaddon_frostmourne"),new BuffModel("alchemist","alchemist_acid_spray"),new BuffModel("ancient_apparition","ancient_apparition_ice_vortex"),new BuffModel("axe","axe_battle_hunger"),new BuffModel("bane","bane_enfeeble"),new BuffModel("batrider","batrider_sticky_napalm"),new BuffModel("beastmaster","beastmaster_primal_roar"),new BuffModel("bounty_hunter","bounty_hunter_jinada"),new BuffModel("brewmaster","brewmaster_thunder_clap"),new BuffModel("brewmaster","brewmaster_drunken_haze"),new BuffModel("bristleback","bristleback_viscous_nasal_goo"),new BuffModel("broodmother","broodmother_incapacitating_bite"),new BuffModel("centaur","centaur_stampede"),new BuffModel("chen","chen_penitence"),new BuffModel("crystal_maiden","crystal_maiden_crystal_nova"),new BuffModel("crystal_maiden","crystal_maiden_freezing_field"),new BuffModel("dazzle","dazzle_weave"),new BuffModel("drow_ranger","drow_ranger_frost_arrows"),new BuffModel("earth_spirit","earth_spirit_rolling_boulder"),new BuffModel("elder_titan","elder_titan_natural_order"),new BuffModel("elder_titan","elder_titan_earth_splitter"),new BuffModel("enchantress","enchantress_untouchable"),new BuffModel("enchantress","enchantress_enchant"),new BuffModel("faceless_void","faceless_void_time_walk"),new BuffModel("huskar","huskar_life_break"),new BuffModel("invoker","invoker_ghost_walk"),new BuffModel("invoker","invoker_ice_wall"),new BuffModel("wisp","wisp_tether"),new BuffModel("jakiro","jakiro_dual_breath"),new BuffModel("jakiro","jakiro_liquid_fire"),new BuffModel("keeper_of_the_light","keeper_of_the_light_blinding_light"),new BuffModel("kunkka","kunkka_torrent"),new BuffModel("lich","lich_frost_nova"),new BuffModel("lich","lich_frost_armor"),new BuffModel("lich","lich_chain_frost"),new BuffModel("life_stealer","life_stealer_open_wounds"),new BuffModel("lion","lion_voodoo"),new BuffModel("magnataur","magnataur_skewer"),new BuffModel("medusa","medusa_stone_gaze"),new BuffModel("meepo","meepo_geostrike"),new BuffModel("naga_siren","naga_siren_rip_tide"),new BuffModel("night_stalker","night_stalker_void"),new BuffModel("night_stalker","night_stalker_crippling_fear"),new BuffModel("night_stalker","night_stalker_darkness"),new BuffModel("ogre_magi","ogre_magi_ignite"),new BuffModel("omniknight","omniknight_degen_aura"),new BuffModel("phantom_assassin","phantom_assassin_stifling_dagger"),new BuffModel("phantom_lancer","phantom_lancer_spirit_lance"),new BuffModel("pudge","pudge_rot"),new BuffModel("pugna","pugna_decrepify"),new BuffModel("queenofpain","queenofpain_shadow_strike"),new BuffModel("riki","riki_smoke_screen"),new BuffModel("rubick","rubick_fade_bolt"),new BuffModel("sand_king","sandking_epicenter"),new BuffModel("nevermore","nevermore_dark_lord"),new BuffModel("shadow_shaman","shadow_shaman_voodoo"),new BuffModel("skeleton_king","skeleton_king_hellfire_blast"),new BuffModel("skeleton_king","skeleton_king_reincarnation"),new BuffModel("skywrath_mage","skywrath_mage_concussive_shot"),new BuffModel("skywrath_mage","skywrath_mage_ancient_seal"),new BuffModel("slardar","slardar_slithereen_crush"),new BuffModel("slardar","slardar_amplify_damage"),new BuffModel("slark","slark_essence_shift"),new BuffModel("sniper","sniper_shrapnel"),new BuffModel("spectre","spectre_spectral_dagger"),new BuffModel("storm_spirit","storm_spirit_overload"),new BuffModel("templar_assassin","templar_assassin_meld"),new BuffModel("tidehunter","tidehunter_gush"),new BuffModel("tinker","tinker_laser"),new BuffModel("treant","treant_leech_seed"),new BuffModel("tusk","tusk_frozen_sigil"),new BuffModel("undying","undying_flesh_golem"),new BuffModel("ursa","ursa_earthshock"),new BuffModel("vengefulspirit","vengefulspirit_wave_of_terror"),new BuffModel("vengefulspirit","vengefulspirit_command_aura"),new BuffModel("venomancer","venomancer_venomous_gale"),new BuffModel("venomancer","venomancer_poison_sting"),new BuffModel("viper","viper_poison_attack"),new BuffModel("viper","viper_corrosive_skin"),new BuffModel("viper","viper_viper_strike"),new BuffModel("visage","visage_grave_chill"),new BuffModel("warlock","warlock_upheaval"),new BuffModel("weaver","weaver_the_swarm"),new BuffModel("windrunner","windrunner_windrun"),new BuffModel("winter_wyvern","winter_wyvern_arctic_burn"),new BuffModel("winter_wyvern","winter_wyvern_splinter_blast"),new BuffModel("npc_dota_neutral_ghost","ghost_frost_attack"),new BuffModel("npc_dota_neutral_polar_furbolg_ursa_warrior","polar_furbolg_ursa_warrior_thunder_clap"),new BuffModel("npc_dota_neutral_ogre_magi","ogre_magi_frost_armor"),new BuffModel("npc_dota_neutral_satyr_trickster","satyr_trickster_purge"),new BuffModel("npc_dota_neutral_enraged_wildkin","enraged_wildkin_tornado")];module.exports=debuffOptionsArray;
},{"./BuffModel":3}],6:[function(require,module,exports){
var HeroCalcData={},getJSON=require("../util/getJSON"),resourceCounter=0,onResourceLoaded=function(e){resourceCounter--,0===resourceCounter&&e&&e()},init=function(e,a,o,i){resourceCounter=0,e&&resourceCounter++,a&&resourceCounter++,o&&resourceCounter++,HeroCalcData.heroData||e&&getJSON(e,function(e){HeroCalcData.heroData=e,e.npc_dota_hero_chen.abilities[2].behavior.push("DOTA_ABILITY_BEHAVIOR_NOT_LEARNABLE"),e.npc_dota_hero_nevermore.abilities[1].behavior.push("DOTA_ABILITY_BEHAVIOR_NOT_LEARNABLE"),e.npc_dota_hero_nevermore.abilities[2].behavior.push("DOTA_ABILITY_BEHAVIOR_NOT_LEARNABLE"),e.npc_dota_hero_morphling.abilities[3].behavior.push("DOTA_ABILITY_BEHAVIOR_NOT_LEARNABLE"),e.npc_dota_hero_ogre_magi.abilities[3].behavior.push("DOTA_ABILITY_BEHAVIOR_NOT_LEARNABLE"),e.npc_dota_hero_techies.abilities[4].behavior.push("DOTA_ABILITY_BEHAVIOR_NOT_LEARNABLE"),e.npc_dota_hero_beastmaster.abilities[2].behavior.push("DOTA_ABILITY_BEHAVIOR_NOT_LEARNABLE");var a=e.npc_dota_hero_lone_druid.abilities[3].behavior.indexOf("DOTA_ABILITY_BEHAVIOR_HIDDEN");e.npc_dota_hero_lone_druid.abilities[3].behavior.splice(a,1),a=e.npc_dota_hero_abaddon.abilities[2].behavior.indexOf("DOTA_ABILITY_BEHAVIOR_PASSIVE"),e.npc_dota_hero_abaddon.abilities[2].behavior.splice(a,1),a=e.npc_dota_hero_riki.abilities[2].behavior.indexOf("DOTA_ABILITY_BEHAVIOR_PASSIVE"),e.npc_dota_hero_riki.abilities[2].behavior.splice(a,1),onResourceLoaded(i)}),HeroCalcData.itemData||a&&getJSON(a,function(e){HeroCalcData.itemData=e,onResourceLoaded(i)}),HeroCalcData.unitData||o&&getJSON(o,function(e){HeroCalcData.unitData=e,onResourceLoaded(i)})};HeroCalcData.init=init,module.exports=HeroCalcData;
},{"../util/getJSON":34}],7:[function(require,module,exports){
"use strict";var HeroModel=require("./HeroModel"),CloneModel=function(e,o){var r=this;return HeroModel.call(this,e),r.parent=o,r};CloneModel.prototype=Object.create(HeroModel.prototype),CloneModel.prototype.constructor=CloneModel,module.exports=CloneModel;
},{"./HeroModel":10}],8:[function(require,module,exports){
var DamageTypeColor={physical:"#979aa2",pure:"goldenrod",magic:"#428bca",default:"#979aa2"};module.exports=DamageTypeColor;
},{}],9:[function(require,module,exports){
"use strict";var ko=require("../herocalc_knockout"),DamageTypeColor=require("./DamageTypeColor"),itemData=require("../data/main").itemData,extend=require("../util/extend"),HeroDamageMixin=function(e){e.critInfo=ko.pureComputed(function(){function a(e,a){return e.multiplier<a.multiplier?1:e.multiplier>a.multiplier?-1:0}var t=e.inventory.getCritSource();extend(t,e.ability().getCritSource()),extend(t,e.buffs.getCritSource());var r=[];for(var o in t){var n=t[o];n.name=o,r.push(n)}r.sort(a);for(var c=[],d=0,u=0;u<r.length;u++){for(var i=1,m=0;m<u;m++)for(var s=0;s<r[m].count;s++)i*=1-r[m].chance;for(var g=1,s=0;s<r[u].count;s++)g*=1-r[u].chance;i*=1-g,d+=i,r[u].count>1?c.push({name:r[u].displayname+" x"+r[u].count,chance:r[u].chance,multiplier:r[u].multiplier,count:r[u].count,totalChance:i}):c.push({name:r[u].displayname,chance:r[u].chance,multiplier:r[u].multiplier,count:r[u].count,totalChance:i})}return{sources:c,total:d}}),e.cleaveInfo=ko.pureComputed(function(){function a(e,a){return e.radius<a.radius?1:e.radius>a.radius?-1:0}var t=e.inventory.getCleaveSource();extend(t,e.ability().getCleaveSource()),extend(t,e.buffs.getCleaveSource());var r=[];for(var o in t){var n=t[o];n.name=o,r.push(n)}r.sort(a);for(var c={},d=0;d<r.length;d++){for(var u=0,i=0;i<r.length;i++)r[i].radius>=r[d].radius&&(u+=r[i].magnitude*r[i].count);c[r[d].radius]=u}var m=[];for(var o in c)m.push({radius:o,magnitude:c[o]});return m}),e.bashInfo=ko.pureComputed(function(){var a=e.heroData().attacktype,t=e.inventory.getBashSource(a);extend(t,e.ability().getBashSource());var r=[];for(var o in t){var n=t[o];n.name=o,r.push(n)}for(var c=[],d=0,u=0;u<r.length;u++){for(var i=1,m=0;m<u;m++)for(var s=0;s<r[m].count;s++)i*=1-r[m].chance;for(var g=1,s=0;s<r[u].count;s++)g*=1-r[u].chance;if(i*=1-g,d+=i,"spirit_breaker_greater_bash"===r[u].name)var l=r[u].damage*e.totalMovementSpeed();else var l=r[u].damage;r[u].count>1?c.push({name:r[u].displayname,chance:r[u].chance,damage:l,count:r[u].count,damageType:r[u].damageType,totalChance:i}):c.push({name:r[u].displayname,chance:r[u].chance,damage:l,count:r[u].count,damageType:r[u].damageType,totalChance:i})}return{sources:c,total:d}}),e.orbProcInfo=ko.pureComputed(function(){function a(e,a){return e.priority>a.priority?1:e.priority<a.priority?-1:e.damage<a.damage?1:e.damage>a.damage?-1:0}var t=(e.heroData().attacktype,e.inventory.getOrbProcSource()),r=[];for(var o in t){var n=t[o];n.name=o,r.push(n)}r.sort(a);for(var c=[],d=0,u=0;u<r.length;u++){for(var i=1,m=0;m<u;m++)for(var s=0;s<r[m].count;s++)i*=1-r[m].chance;for(var g=1,s=0;s<r[u].count;s++)g*=1-r[u].chance;i*=1-g,d+=i,r[u].count>1?c.push({name:r[u].displayname+" x"+r[u].count,chance:r[u].chance,damage:r[u].damage,count:r[u].count,damageType:r[u].damageType,totalChance:i}):c.push({name:r[u].displayname,chance:r[u].chance,damage:r[u].damage,count:r[u].count,damageType:r[u].damageType,totalChance:i})}return{sources:c,total:d}}),e.getReducedDamage=function(a,t){var r=a;switch(t){case"physical":r=a*(1-.06*e.enemy().totalArmorPhysical()/(1+.06*Math.abs(e.enemy().totalArmorPhysical())));break;case"magic":r=a*(1-e.enemy().totalMagicResistance()/100);break;case"pure":r=a;break;case"composite":r=a*(1-.06*e.enemy().totalArmorPhysical()/(1+.06*Math.abs(e.enemy().totalArmorPhysical()))),r*=1-e.enemy().totalMagicResistance()/100}return r*=e.ability().getDamageAmplification()*e.debuffs.getDamageAmplification(),r*=e.enemy().ability().getDamageReduction()*e.enemy().buffs.getDamageReduction()},e.damageTotalInfo=ko.pureComputed(function(){var a=[e.ability().getBonusDamage().sources,e.buffs.getBonusDamage().sources],t=[e.ability().getBonusDamagePercent().sources,e.buffs.getBonusDamagePercent().sources],r=e.inventory.getBonusDamage().sources,o=e.buffs.itemBuffs.getBonusDamagePercent(e.inventory.getBonusDamagePercent()).sources,n=e.critInfo(),c=e.ability().getOrbSource(),d=e.inventory.getOrbSource(),u=e.orbProcInfo(),i=e.bashInfo(),m=[];if(m.push({name:"Base Attack",cooldown:1}),"weaver"===e.heroId()){var s=e.ability().abilities().find(function(e){return"weaver_geminate_attack"===e.name});if(s&&s.level()>0){var g=s.cooldown[s.level()-1];m.push({name:s.displayname,cooldown:1/g})}}var l=e.inventory.items().find(function(e){return"echo_sabre"===e.item&&e.enabled()});if(l&&"DOTA_UNIT_CAP_MELEE_ATTACK"===e.heroData().attacktype){var p=itemData.item_echo_sabre;m.push({name:p.displayname,cooldown:1/p.cooldown})}var f=m.map(function(m){var s=(e.baseDamage()[0]+e.baseDamage()[1])/2,g=0,l=0,p=0,f={damage:0,damageReduced:0,cooldown:6,active:!1},y=({damage:0,damageReduced:0,cooldown:itemData.item_echo_sabre.cooldown[0],active:!1},{pure:0,physical:0,magic:0}),h=[],b=[];h.push({name:"Base Damage",damage:s,damageType:"physical",damageReduced:e.getReducedDamage(s,"physical"),enabled:ko.observable(!0)}),g+=s,l+=s,y.physical+=s;for(k in r){var v=r[k].damage*r[k].count*e.ability().getSelfBaseDamageReductionPct()*e.enemy().ability().getBaseDamageReductionPct()*e.debuffs.itemBuffs.getBaseDamageReductionPct();h.push({name:r[k].displayname+(r[k].count>1?" x"+r[k].count:""),damage:v,damageType:r[k].damageType,damageReduced:e.getReducedDamage(v,r[k].damageType),enabled:ko.observable(!0)}),g+=v,l+=v,y[r[k].damageType]+=v}for(k in o){var v=s*o[k].damage;h.push({name:o[k].displayname,damage:v,damageType:o[k].damageType,damageReduced:e.getReducedDamage(v,o[k].damageType),enabled:ko.observable(!0)}),g+=v,l+=v,y[o[k].damageType]+=v}for(var k=0;k<a.length;k++)for(w in a[k]){var v=a[k][w].damage;h.push({name:a[k][w].displayname,damage:v,damageType:a[k][w].damageType,damageReduced:e.getReducedDamage(v,a[k][w].damageType),enabled:ko.observable(!0)}),g+=v,l+=v,y[a[k][w].damageType]+=v}for(var k=0;k<t.length;k++)for(w in t[k]){var v=s*t[k][w].damage;h.push({name:t[k][w].displayname,damage:v,damageType:t[k][w].damageType,damageReduced:e.getReducedDamage(v,t[k][w].damageType),enabled:ko.observable(!0)}),g+=v,l+=v,y[t[k][w].damageType]+=v}if("DOTA_UNIT_CAP_RANGED_ATTACK"===e.heroData().attacktype){if("drow_ranger"===e.heroId())var R=e.ability().getBonusDamagePrecisionAura().sources,T=0;else var R=e.buffs.getBonusDamagePrecisionAura().sources,T=1;if(void 0!=R[T]){if("drow_ranger"===e.heroId())var v=R[T].damage*e.totalAgi();else var v=R[T].damage;h.push({name:R[T].displayname,damage:v,damageType:"physical",damageReduced:e.getReducedDamage(v,"physical"),enabled:ko.observable(!0)}),g+=v,l+=v,y.physical+=v}}if("riki"===e.heroId())var R=e.ability().getBonusDamageBackstab().sources,T=0;else var R=e.buffs.getBonusDamageBackstab().sources,T=1;if(void 0!=R[T]){if("riki"===e.heroId())var v=R[T].damage*e.totalAgi();else var v=R[T].damage;h.push({name:R[T].displayname,damage:v,damageType:"physical",damageReduced:e.getReducedDamage(v,"physical"),enabled:ko.observable(!0)}),g+=v,y.physical+=v}for(var k=0;k<i.sources.length;k++){var D=i.sources[k],v=i.sources[k].damage,C=e.attacksPerSecond();D.cooldown&&(C=Math.max(1/D.cooldown,C));for(var w=0;w<i.sources[k].count;w++)h.push({name:i.sources[k].name,damage:v,damageType:i.sources[k].damageType,damageReduced:e.getReducedDamage(v,i.sources[k].damageType),dps:v*C*i.sources[k].chance,dpsReduced:e.getReducedDamage(v,i.sources[k].damageType)*C*i.sources[k].chance,enabled:ko.observable(!0)}),g+=v,y[i.sources[k].damageType]+=v}for(var k=0;k<u.sources.length;k++){var v=u.sources[k].damage*(1-Math.pow(1-u.sources[k].chance,u.sources[k].count));h.push({name:u.sources[k].name,damage:v,damageType:u.sources[k].damageType,damageReduced:e.getReducedDamage(v,u.sources[k].damageType),enabled:ko.observable(!0)}),g+=v,y[u.sources[k].damageType]+=v}for(var A in c){var v=c[A].damage*(1-u.total);h.push({name:c[A].displayname,damage:v,damageType:c[A].damageType,damageReduced:e.getReducedDamage(v,c[A].damageType),enabled:ko.observable(!0)}),g+=v,y[c[A].damageType]+=v}if(0===Object.keys(c).length)for(var A in d){var v=d[A].damage*(1-u.total);h.push({name:d[A].displayname,damage:v,damageType:d[A].damageType,damageReduced:e.getReducedDamage(v,d[A].damageType),enabled:ko.observable(!0)}),g+=v,y[d[A].damageType]+=v}for(var k=0;k<n.sources.length;k++){var v=l*(n.sources[k].multiplier-1);b.push({name:n.sources[k].name+", "+n.sources[k].multiplier+"x, "+(100*n.sources[k].totalChance).toFixed(1)+"%",damage:v,damageType:"physical",damageReduced:e.getReducedDamage(v,"physical"),enabled:ko.observable(!0),chance:n.sources[k].totalChance}),p+=v}var P=e.getReducedDamage(y.pure,"pure")+e.getReducedDamage(y.physical,"physical")+e.getReducedDamage(y.magic,"magic"),S=e.getReducedDamage(p,"physical"),B={base:g*e.attacksPerSecond(),crit:p*e.attacksPerSecond(),geminateAttack:f.active?f.damage/f.cooldown:0,reduced:{base:P*e.attacksPerSecond(),crit:S*e.attacksPerSecond(),geminateAttack:f.active?e.getReducedDamage(f.damage,"physical")/f.cooldown:0}};b.forEach(function(a){a.dps||(a.dps=a.damage*(a.cooldown||e.attacksPerSecond())*a.chance),a.dpsReduced||(a.dpsReduced=a.damageReduced*(a.cooldown||e.attacksPerSecond())*a.chance)}),h.forEach(function(a){a.dps||(a.dps=a.damage*(a.cooldown||e.attacksPerSecond())),a.dpsReduced||(a.dpsReduced=a.damageReduced*(a.cooldown||e.attacksPerSecond()))});var _=b.reduce(function(e,a){return e+a.chance},0),x=ko.computed(function(){var e=b.find(function(e){return e.enabled()});return e?e.damage:0}),I=ko.computed(function(){var e=b.find(function(e){return e.enabled()});return e?e.damageReduced:0}),M=ko.computed(function(){return b.filter(function(e){return e.enabled()}).reduce(function(e,a){return e+a.dps},0)}),E=ko.computed(function(){return b.filter(function(e){return e.enabled()}).reduce(function(e,a){return e+a.dpsReduced},0)}),O=ko.computed(function(){return h.filter(function(e){return e.enabled()}).reduce(function(e,a){return e+a.damage},0)+x()}),q=ko.computed(function(){return h.filter(function(e){return e.enabled()}).reduce(function(e,a){return e+a.damageReduced},0)+I()}),G=ko.computed(function(){return(h.filter(function(e){return e.enabled()}).reduce(function(e,a){return e+a.dps},0)+M())*m.cooldown}),N=ko.computed(function(){return(h.filter(function(e){return e.enabled()}).reduce(function(e,a){return e+a.dpsReduced},0)+E())*m.cooldown}),H=[x,I,M,E],K=[O,q,G,N];return{name:m.name+" Subtotal",cooldown:m.cooldown,enabled:ko.observable(!0),visible:ko.observable(!0),totalCritChance:_,totalCritRow:H,totalRow:K,sources:h,sourcesCrit:b,total:g,totalCrit:p,totalGeminateAttack:g+f.damage,totalGeminateAttackReduced:P+f.damageReduced,geminateAttack:f,totalCritReduced:S,totalReduced:P,sumTotal:g+p,sumTotalReduced:P+S,dps:{base:B.base,crit:B.base+B.crit,geminateAttack:B.base+B.geminateAttack,total:B.base+B.crit+B.geminateAttack,reduced:{base:B.reduced.base,crit:B.reduced.base+B.reduced.crit,geminateAttack:B.reduced.base+B.reduced.geminateAttack,total:B.reduced.base+B.reduced.crit+B.reduced.geminateAttack}}}}),y=ko.computed(function(){return f.filter(function(e){return e.enabled()}).reduce(function(e,a){return e+a.totalRow[0]()},0)}),h=ko.computed(function(){return f.filter(function(e){return e.enabled()}).reduce(function(e,a){return e+a.totalRow[1]()},0)}),b=ko.computed(function(){return f.filter(function(e){return e.enabled()}).reduce(function(e,a){return e+a.totalRow[2]()},0)}),v=ko.computed(function(){return f.filter(function(e){return e.enabled()}).reduce(function(e,a){return e+a.totalRow[3]()},0)});return{attacks:f,totalRow:[y,h,b,v]}}),e.getDamageTypeColor=function(e){return DamageTypeColor[e]||DamageTypeColor.default}};module.exports=HeroDamageMixin;
},{"../data/main":6,"../herocalc_knockout":19,"../util/extend":32,"./DamageTypeColor":8}],10:[function(require,module,exports){
"use strict";var ko=require("../herocalc_knockout"),AbilityModel=require("../AbilityModel"),BuffViewModel=require("../BuffViewModel"),InventoryViewModel=require("../inventory/InventoryViewModel"),heroData=require("../data/main").heroData,diffProperties=require("./diffProperties"),HeroDamageMixin=require("./HeroDamageMixin"),totalExp=require("./totalExp"),nextLevelExp=require("./nextLevelExp"),HeroModel=function(e){var t=this;t.heroId=ko.observable(e),t.selectedHeroLevel=ko.observable(1),t.inventory=new InventoryViewModel(t),t.selectedInventory=ko.observable(-1),t.buffs=new BuffViewModel,t.buffs.hasScepter=t.inventory.hasScepter,t.debuffs=new BuffViewModel,t.heroData=ko.computed(function(){return heroData["npc_dota_hero_"+t.heroId()]}),t.heroCompare=ko.observable(t),t.enemy=ko.observable(t),t.unit=ko.observable(t),t.clone=ko.observable(t),t.skillPointHistory=ko.observableArray(),t.ability=ko.computed(function(){var e=new AbilityModel(ko.observableArray(JSON.parse(JSON.stringify(t.heroData().abilities))),t);switch(t.heroId()){case"earth_spirit":case"ogre_magi":e._abilities[3].level(1);break;case"invoker":for(var a=6;a<16;a++)e._abilities[a].level(1)}return t.skillPointHistory.removeAll(),e.hasScepter=t.inventory.hasScepter,e}),t.availableSkillPoints=ko.computed(function(){for(var e=t.selectedHeroLevel(),a=0;a<t.ability().abilities().length;a++)switch(t.ability().abilities()[a].abilitytype){case"DOTA_ABILITY_TYPE_ULTIMATE":if("invoker"===t.heroId())for(;1==t.ability().abilities()[a].level()&&parseInt(t.selectedHeroLevel())<2||2==t.ability().abilities()[a].level()&&parseInt(t.selectedHeroLevel())<7||3==t.ability().abilities()[a].level()&&parseInt(t.selectedHeroLevel())<11||4==t.ability().abilities()[a].level()&&parseInt(t.selectedHeroLevel())<17;)t.ability().levelDownAbility(a,null,null,t);else if("meepo"===t.heroId())for(;7*(t.ability().abilities()[a].level()-1)+3>parseInt(t.selectedHeroLevel());)t.ability().levelDownAbility(a,null,null,t);else for(;5*t.ability().abilities()[a].level()+1>parseInt(t.selectedHeroLevel());)t.ability().levelDownAbility(a,null,null,t);break;default:for(;2*t.ability().abilities()[a].level()-1>parseInt(t.selectedHeroLevel());)t.ability().levelDownAbility(a,null,null,t)}for(;t.skillPointHistory().length>e;)t.ability().levelDownAbility(t.skillPointHistory()[t.skillPointHistory().length-1],null,null,t);return e-t.skillPointHistory().length},this),t.primaryAttribute=ko.pureComputed(function(){var e=t.heroData().attributeprimary;return"DOTA_ATTRIBUTE_AGILITY"===e?"agi":"DOTA_ATTRIBUTE_INTELLECT"===e?"int":"DOTA_ATTRIBUTE_STRENGTH"===e?"str":""}),t.totalExp=ko.pureComputed(function(){return totalExp[t.selectedHeroLevel()-1]}),t.nextLevelExp=ko.pureComputed(function(){return nextLevelExp[t.selectedHeroLevel()-1]}),t.startingArmor=ko.pureComputed(function(){return(.14*t.heroData().attributebaseagility+t.heroData().armorphysical).toFixed(2)}),t.respawnTime=ko.pureComputed(function(){return 5+3.8*t.selectedHeroLevel()}),t.totalAttribute=function(e){return"agi"===e?parseFloat(t.totalAgi()):"int"===e?parseFloat(t.totalInt()):"str"===e?parseFloat(t.totalStr()):0},t.totalAgi=ko.pureComputed(function(){return(t.heroData().attributebaseagility+t.heroData().attributeagilitygain*(t.selectedHeroLevel()-1)+t.inventory.getAttributes("agi")+2*t.ability().getAttributeBonusLevel()+t.ability().getAgility()+t.enemy().ability().getAllStatsReduction()+t.debuffs.getAllStatsReduction()).toFixed(2)}),t.intStolen=ko.observable(0).extend({numeric:0}),t.totalInt=ko.pureComputed(function(){return(t.heroData().attributebaseintelligence+t.heroData().attributeintelligencegain*(t.selectedHeroLevel()-1)+t.inventory.getAttributes("int")+2*t.ability().getAttributeBonusLevel()+t.ability().getIntelligence()+t.enemy().ability().getAllStatsReduction()+t.debuffs.getAllStatsReduction()+t.intStolen()).toFixed(2)}),t.totalStr=ko.pureComputed(function(){return(t.heroData().attributebasestrength+t.heroData().attributestrengthgain*(t.selectedHeroLevel()-1)+t.inventory.getAttributes("str")+2*t.ability().getAttributeBonusLevel()+t.ability().getStrength()+t.enemy().ability().getStrengthReduction()+t.enemy().ability().getAllStatsReduction()+t.debuffs.getAllStatsReduction()).toFixed(2)}),t.health=ko.pureComputed(function(){return(t.heroData().statushealth+20*Math.floor(t.totalStr())+t.inventory.getHealth()+t.ability().getHealth()).toFixed(2)}),t.healthregen=ko.pureComputed(function(){var e=[t.inventory.getHealthRegenAura,t.buffs.itemBuffs.getHealthRegenAura].reduce(function(e,t){var a=t(e.excludeList);return a.value+=e.value,a},{value:0,excludeList:[]});return(t.heroData().statushealthregen+.03*t.totalStr()+t.inventory.getHealthRegen()+t.ability().getHealthRegen()+t.buffs.getHealthRegen()+e.value).toFixed(2)}),t.mana=ko.pureComputed(function(){return(t.heroData().statusmana+12*t.totalInt()+t.inventory.getMana()+t.ability().getMana()).toFixed(2)}),t.manaregen=ko.pureComputed(function(){return((t.heroData().statusmanaregen+.04*t.totalInt()+t.ability().getManaRegen())*(1+t.inventory.getManaRegenPercent())+("crystal_maiden"===t.heroId()?2*t.ability().getManaRegenArcaneAura():t.buffs.getManaRegenArcaneAura())+t.inventory.getManaRegenBloodstone()+t.inventory.getManaRegen()-t.enemy().ability().getManaRegenReduction()).toFixed(2)}),t.totalArmorPhysical=ko.pureComputed(function(){var e=[t.inventory.getArmorAura,t.buffs.itemBuffs.getArmorAura].reduce(function(e,t){var a=t(e.attributes);return a},{value:0,attributes:[]}),a=[t.enemy().inventory.getArmorReduction,t.debuffs.itemBuffs.getArmorReduction].reduce(function(e,t){var a=t(e.excludeList);return a.value+=e.value,a},{value:0,excludeList:[]});return(t.enemy().ability().getArmorBaseReduction()*t.debuffs.getArmorBaseReduction()*(t.heroData().armorphysical+.14*t.totalAgi())+t.inventory.getArmor()+t.ability().getArmor()+t.enemy().ability().getArmorReduction()+t.buffs.getArmor()+t.buffs.itemBuffs.getArmor()+t.debuffs.getArmorReduction()+e.value+a.value).toFixed(2)}),t.totalArmorPhysicalReduction=ko.pureComputed(function(){var e=t.totalArmorPhysical();return e>=0?(.06*t.totalArmorPhysical()/(1+.06*t.totalArmorPhysical())*100).toFixed(2):-(.06*-t.totalArmorPhysical()/(1+.06*-t.totalArmorPhysical())*100).toFixed(2)}),t.totalMovementSpeed=ko.pureComputed(function(){var e=100,a=t.ability().setMovementSpeed()>0?t.ability().setMovementSpeed():t.buffs.setMovementSpeed();if(a>0)return a;var i=[t.inventory.getMovementSpeedPercent,t.buffs.itemBuffs.getMovementSpeedPercent].reduce(function(e,t){var a=t(e.excludeList);return a.value+=e.value,a},{value:0,excludeList:[]}),n=[t.enemy().inventory.getMovementSpeedPercentReduction,t.debuffs.itemBuffs.getMovementSpeedPercentReduction].reduce(function(e,t){var a=t(e.excludeList);return a.value+=e.value,a},{value:0,excludeList:[]});return Math.max(t.enemy().inventory.isSheeped()||t.debuffs.itemBuffs.isSheeped()?140:(t.heroData().movementspeed+t.inventory.getMovementSpeedFlat()+t.ability().getMovementSpeedFlat())*(1+i.value+n.value+t.ability().getMovementSpeedPercent()+t.enemy().ability().getMovementSpeedPercentReduction()+t.buffs.getMovementSpeedPercent()+t.debuffs.getMovementSpeedPercentReduction()+t.unit().ability().getMovementSpeedPercent()),e).toFixed(2)}),t.totalTurnRate=ko.pureComputed(function(){return(t.heroData().movementturnrate*(1+t.enemy().ability().getTurnRateReduction()+t.debuffs.getTurnRateReduction())).toFixed(2)}),t.baseDamage=ko.pureComputed(function(){var e=t.totalAttribute(t.primaryAttribute()),a=t.ability().getBaseDamage(),i=t.heroData().attackdamagemin,n=t.heroData().attackdamagemax;return[Math.floor((i+e+a.total)*t.ability().getSelfBaseDamageReductionPct()*t.enemy().ability().getBaseDamageReductionPct()*t.debuffs.getBaseDamageReductionPct()*t.debuffs.itemBuffs.getBaseDamageReductionPct()*a.multiplier),Math.floor((n+e+a.total)*t.ability().getSelfBaseDamageReductionPct()*t.enemy().ability().getBaseDamageReductionPct()*t.debuffs.getBaseDamageReductionPct()*t.debuffs.itemBuffs.getBaseDamageReductionPct()*a.multiplier)]}),t.baseDamageAvg=ko.pureComputed(function(){return(t.baseDamage()[0]+t.baseDamage()[1])/2}),t.baseDamageMin=ko.pureComputed(function(){return t.baseDamage()[0]}),t.baseDamageMax=ko.pureComputed(function(){return t.baseDamage()[1]}),t.bonusDamage=ko.pureComputed(function(){return(t.inventory.getBonusDamage().total+t.ability().getBonusDamage().total+t.buffs.getBonusDamage().total+Math.floor((t.baseDamage()[0]+t.baseDamage()[1])/2*(t.buffs.itemBuffs.getBonusDamagePercent(t.inventory.getBonusDamagePercent()).total+t.ability().getBonusDamagePercent().total+t.buffs.getBonusDamagePercent().total))+Math.floor("DOTA_UNIT_CAP_RANGED_ATTACK"==t.heroData().attacktype?"drow_ranger"==t.heroId()?t.ability().getBonusDamagePrecisionAura().total[0]*t.totalAgi():t.buffs.getBonusDamagePrecisionAura().total[1]:0)+Math.floor("riki"==t.heroId()?t.ability().getBonusDamageBackstab().total[0]*t.totalAgi():0))*t.ability().getSelfBaseDamageReductionPct()*t.enemy().ability().getBaseDamageReductionPct()*t.debuffs.itemBuffs.getBaseDamageReductionPct()}),t.bonusDamageReduction=ko.pureComputed(function(){return Math.abs(t.enemy().ability().getBonusDamageReduction()+t.debuffs.getBonusDamageReduction())}),t.damageAvg=ko.pureComputed(function(){return(t.baseDamage()[0]+t.baseDamage()[1])/2+t.bonusDamage()}),t.damageMin=ko.pureComputed(function(){return t.baseDamage()[0]+t.bonusDamage()}),t.damageMax=ko.pureComputed(function(){return t.baseDamage()[1]+t.bonusDamage()}),t.damage=ko.pureComputed(function(){return[t.baseDamage()[0]+t.bonusDamage(),t.baseDamage()[1]+t.bonusDamage()]}),t.totalMagicResistanceProduct=ko.pureComputed(function(){return(1-t.heroData().magicalresistance/100)*t.inventory.getMagicResist()*t.ability().getMagicResist()*t.buffs.getMagicResist()*t.inventory.getMagicResistReductionSelf()*t.enemy().inventory.getMagicResistReduction()*t.enemy().ability().getMagicResistReduction()*t.debuffs.getMagicResistReduction()*t.debuffs.itemBuffs.getMagicResistReduction()}),t.totalMagicResistance=ko.pureComputed(function(){return(100*(1-t.totalMagicResistanceProduct())).toFixed(2)}),t.bat=ko.pureComputed(function(){var e=t.ability().getBAT();return e>0?e:t.heroData().attackrate}),t.ias=ko.pureComputed(function(){var e=[t.inventory.getAttackSpeed,t.buffs.itemBuffs.getAttackSpeed].reduce(function(e,t){var a=t(e.excludeList);return a.value+=e.value,a},{value:0,excludeList:[]}),a=[t.enemy().inventory.getAttackSpeedReduction,t.debuffs.itemBuffs.getAttackSpeedReduction].reduce(function(e,t){var a=t(e.excludeList);return a.value+=e.value,a},{value:0,excludeList:[]}),i=parseFloat(t.totalAgi())+e.value+a.value+t.ability().getAttackSpeed()+t.enemy().ability().getAttackSpeedReduction()+t.buffs.getAttackSpeed()+t.debuffs.getAttackSpeedReduction()+t.unit().ability().getAttackSpeed();return i<-80?-80:i>500?500:i.toFixed(2)}),t.attackTime=ko.pureComputed(function(){return(t.bat()/(1+t.ias()/100)).toFixed(2)}),t.attacksPerSecond=ko.pureComputed(function(){return((1+t.ias()/100)/t.bat()).toFixed(2)}),t.evasion=ko.pureComputed(function(){if(t.enemy().inventory.isSheeped()||t.debuffs.itemBuffs.isSheeped())return 0;var e=t.ability().setEvasion();return e?(100*e).toFixed(2):(100*(1-t.inventory.getEvasion()*t.ability().getEvasion()*t.ability().getEvasionBacktrack()*t.buffs.itemBuffs.getEvasion())).toFixed(2)}),t.ehpPhysical=ko.pureComputed(function(){var e=t.enemy().inventory.isSheeped()||t.debuffs.itemBuffs.isSheeped()?1:t.inventory.getEvasion()*t.ability().getEvasion()*t.buffs.itemBuffs.getEvasion();if(t.totalArmorPhysical()>=0)var a=t.health()*(1+.06*t.totalArmorPhysical());else var a=t.health()*(1-.06*t.totalArmorPhysical())/(1-.12*t.totalArmorPhysical());return a/=1-(1-e*t.ability().getEvasionBacktrack()),a/=1-parseFloat(t.enemy().missChance())/100,a*=t.inventory.activeItems().some(function(e){return"mask_of_madness"==e.item})?1/1.3:1,a*=1/t.ability().getDamageReduction(),a*=1/t.buffs.getDamageReduction(),a*=1/t.enemy().ability().getDamageAmplification(),a*=1/t.debuffs.getDamageAmplification(),a.toFixed(2)}),t.ehpMagical=ko.pureComputed(function(){var e=t.health()/t.totalMagicResistanceProduct();return e*=t.inventory.activeItems().some(function(e){return"mask_of_madness"==e.item})?1/1.3:1,e*=1/t.ability().getDamageReduction(),e*=1/t.buffs.getDamageReduction(),e*=1/t.ability().getEvasionBacktrack(),e*=1/t.enemy().ability().getDamageAmplification(),e*=1/t.debuffs.getDamageAmplification(),e.toFixed(2)}),t.bash=ko.pureComputed(function(){var e=t.heroData().attacktype;return(100*(1-t.inventory.getBash(e)*t.ability().getBash())).toFixed(2)}),t.critChance=ko.pureComputed(function(){return(100*(1-t.inventory.getCritChance()*t.ability().getCritChance())).toFixed(2)}),HeroDamageMixin(t),t.missChance=ko.pureComputed(function(){var e=[t.enemy().inventory.getMissChance,t.debuffs.itemBuffs.getMissChance].reduce(function(e,t){var a=t(e.excludeList);return a.value*=e.value,a},{value:1,excludeList:[]});return(100*(1-t.enemy().ability().getMissChance()*t.debuffs.getMissChance()*e.value)).toFixed(2)}),t.totalattackrange=ko.pureComputed(function(){var e=t.heroData().attacktype;return t.heroData().attackrange+t.ability().getAttackRange()+t.inventory.getAttackRange(e).value}),t.visionrangeday=ko.pureComputed(function(){return t.heroData().visiondaytimerange*(1+t.enemy().ability().getVisionRangePctReduction()+t.debuffs.getVisionRangePctReduction())}),t.visionrangenight=ko.pureComputed(function(){return(t.heroData().visionnighttimerange+t.inventory.getVisionRangeNight()+t.ability().getVisionRangeNight())*(1+t.enemy().ability().getVisionRangePctReduction()+t.debuffs.getVisionRangePctReduction())}),t.lifesteal=ko.pureComputed(function(){var e=t.inventory.getLifesteal()+t.ability().getLifesteal()+t.buffs.getLifesteal();if("DOTA_UNIT_CAP_MELEE_ATTACK"==t.heroData().attacktype){var a=[t.inventory.getLifestealAura,t.buffs.itemBuffs.getLifestealAura].reduce(function(e,t){var a=t(e.excludeList);return a.value+=e.value,a},{value:0,excludeList:[]});e+=a.value}return e.toFixed(2)}),t.diffProperties=diffProperties,t.diff={};for(var a=0;a<t.diffProperties.length;a++){var i=a;t.diff[t.diffProperties[i]]=t.getDiffFunction(t.diffProperties[i])}};HeroModel.prototype.getDiffFunction=function(e){var t=this;return ko.computed(function(){return"baseDamage"==e?[t[e]()[0]-t.heroCompare()[e]()[0],t[e]()[1]-t.heroCompare()[e]()[1]]:t[e]()-t.heroCompare()[e]()},this,{deferEvaluation:!0})},HeroModel.prototype.getAbilityLevelMax=function(e){return"DOTA_ABILITY_TYPE_ATTRIBUTES"===e.abilitytype?10:"invoker_quas"===e.name||"invoker_wex"===e.name||"invoker_exort"===e.name?7:"invoker_invoke"===e.name?4:"earth_spirit_stone_caller"===e.name||"ogre_magi_unrefined_fireblast"===e.name?1:"DOTA_ABILITY_TYPE_ULTIMATE"===e.abilitytype||"keeper_of_the_light_recall"===e.name||"keeper_of_the_light_blinding_light"===e.name||"ember_spirit_activate_fire_remnant"===e.name||"lone_druid_true_form_battle_cry"===e.name?3:"puck_ethereal_jaunt"===e.name||"shadow_demon_shadow_poison_release"===e.name||"templar_assassin_trap"===e.name||"spectre_reality"===e.name?0:"invoker_cold_snap"===e.name||"invoker_ghost_walk"===e.name||"invoker_tornado"===e.name||"invoker_emp"===e.name||"invoker_alacrity"===e.name||"invoker_chaos_meteor"===e.name||"invoker_sun_strike"===e.name||"invoker_forge_spirit"===e.name||"invoker_ice_wall"===e.name||"invoker_deafening_blast"===e.name?0:"techies_minefield_sign"===e.name||"techies_focused_detonate"===e.name?0:4},module.exports=HeroModel;
},{"../AbilityModel":1,"../BuffViewModel":2,"../data/main":6,"../herocalc_knockout":19,"../inventory/InventoryViewModel":22,"./HeroDamageMixin":9,"./diffProperties":14,"./nextLevelExp":16,"./totalExp":17}],11:[function(require,module,exports){
var HeroOption=function(o,e,i){this.heroName=o,this.heroDisplayName=e,this.hero=i};module.exports=HeroOption;
},{}],12:[function(require,module,exports){
"use strict";var HeroModel=require("./HeroModel"),heroData=require("../data/main").heroData,itemData=require("../data/main").itemData,illusionData=require("../illusion/illusionData"),findWhere=require("../util/findWhere"),IllusionModel=function(t,e,i){var a=this;return HeroModel.call(this,t),a.illusionAbilityLevel=ko.observable(i),a.parent=e,a.totalAgi=ko.computed(function(){return(a.heroData().attributebaseagility+a.heroData().attributeagilitygain*(a.selectedHeroLevel()-1)+a.inventory.getAttributes("agi")+2*a.ability().getAttributeBonusLevel()+a.ability().getAgility()+a.enemy().ability().getAllStatsReduction()+a.debuffs.getAllStatsReduction()).toFixed(2)}),a.intStolen=ko.observable(0).extend({numeric:0}),a.totalInt=ko.computed(function(){return(a.heroData().attributebaseintelligence+a.heroData().attributeintelligencegain*(a.selectedHeroLevel()-1)+a.inventory.getAttributes("int")+2*a.ability().getAttributeBonusLevel()+a.ability().getIntelligence()+a.enemy().ability().getAllStatsReduction()+a.debuffs.getAllStatsReduction()+a.intStolen()).toFixed(2)}),a.totalStr=ko.computed(function(){return(a.heroData().attributebasestrength+a.heroData().attributestrengthgain*(a.selectedHeroLevel()-1)+a.inventory.getAttributes("str")+2*a.ability().getAttributeBonusLevel()+a.ability().getStrength()+a.enemy().ability().getAllStatsReduction()+a.debuffs.getAllStatsReduction()).toFixed(2)}),a.getAbilityAttributeValue=function(t,e,i,a){if("item_manta"==e)var l=itemData[e];else var l=findWhere(heroData["npc_dota_hero_"+t].abilities,{name:e});var o=findWhere(l.attributes,{name:i});return 0==a?parseFloat(o.value[0]):a>o.length?parseFloat(o.value[0]):parseFloat(o.value[a-1])},a.getIncomingDamageMultiplier=function(t,e,i){return"item_manta"==t?"DOTA_UNIT_CAP_MELEE_ATTACK"==i?1+a.getAbilityAttributeValue(illusionData[a.illusionType()].hero,a.illusionType(),illusionData[t].incoming_damage_melee,a.illusionAbilityLevel())/100:1+a.getAbilityAttributeValue(illusionData[a.illusionType()].hero,a.illusionType(),illusionData[t].incoming_damage_ranged,a.illusionAbilityLevel())/100:1+a.getAbilityAttributeValue(illusionData[a.illusionType()].hero,a.illusionType(),illusionData[t].incoming_damage,a.illusionAbilityLevel())/100},a.getOutgoingDamageMultiplier=function(t,e,i){return"item_manta"==t?"DOTA_UNIT_CAP_MELEE_ATTACK"==i?1+a.getAbilityAttributeValue(illusionData[a.illusionType()].hero,a.illusionType(),illusionData[t].outgoing_damage_melee,a.illusionAbilityLevel())/100:1+a.getAbilityAttributeValue(illusionData[a.illusionType()].hero,a.illusionType(),illusionData[t].outgoing_damage_ranged,a.illusionAbilityLevel())/100:1+a.getAbilityAttributeValue(illusionData[a.illusionType()].hero,a.illusionType(),illusionData[t].outgoing_damage,a.illusionAbilityLevel())/100},a.baseDamage=ko.computed(function(){return[Math.floor(heroData["npc_dota_hero_"+a.heroId()].attackdamagemin+a.totalAttribute(a.primaryAttribute())+a.ability().getBaseDamage().total)*a.getOutgoingDamageMultiplier(a.illusionType(),!1,a.heroData().attacktype),Math.floor(heroData["npc_dota_hero_"+a.heroId()].attackdamagemax+a.totalAttribute(a.primaryAttribute())+a.ability().getBaseDamage().total)*a.getOutgoingDamageMultiplier(a.illusionType(),!1,a.heroData().attacktype)]}),a.damage=ko.computed(function(){return[a.baseDamage()[0],a.baseDamage()[1]]}),a.ehpPhysical=ko.computed(function(){var t=a.health()*(1+.06*a.totalArmorPhysical())/(1-(1-a.inventory.getEvasion()*a.ability().getEvasion()));return t*=a.inventory.activeItems().some(function(t){return"mask_of_madness"==t.item})?1/1.3:1,t*=1/a.getIncomingDamageMultiplier(a.illusionType(),!1,a.heroData().attacktype),t.toFixed(2)}),a.ehpMagical=ko.computed(function(){var t=a.health()/a.totalMagicResistanceProduct();return t*=1/a.getIncomingDamageMultiplier(a.illusionType(),!1,a.heroData().attacktype),t.toFixed(2)}),a.totalArmorPhysical=ko.computed(function(){return(a.enemy().ability().getArmorBaseReduction()*a.debuffs.getArmorBaseReduction()*(heroData["npc_dota_hero_"+a.heroId()].armorphysical+.14*a.totalAgi())+a.ability().getArmor()+a.enemy().ability().getArmorReduction()+a.buffs.getArmor()+a.debuffs.getArmorReduction()).toFixed(2)}),a.ias=ko.computed(function(){var t=parseFloat(a.totalAgi())+a.ability().getAttackSpeed()+a.enemy().ability().getAttackSpeedReduction()+a.buffs.getAttackSpeed()+a.debuffs.getAttackSpeedReduction()+a.unit().ability().getAttackSpeed();return t<-80?-80:t>400?400:t.toFixed(2)}),a};IllusionModel.prototype=Object.create(HeroModel.prototype),IllusionModel.prototype.constructor=IllusionModel,module.exports=IllusionModel;
},{"../data/main":6,"../illusion/illusionData":20,"../util/findWhere":33,"./HeroModel":10}],13:[function(require,module,exports){
"use strict";var ko=require("../herocalc_knockout"),AbilityModel=require("../AbilityModel"),HeroModel=require("./HeroModel"),unitData=require("../data/main").unitData,UnitModel=function(t,e){var i=this;return HeroModel.call(this,"abaddon"),i.parent=e,i.unitId=ko.observable(t),i.unitLevel=ko.observable(1),i.heroData=ko.computed(function(){return unitData[i.unitId()]}),i.getAbilityLevelMax=function(t){return"DOTA_ABILITY_TYPE_ATTRIBUTES"==t.abilitytype?10:"necronomicon_archer_mana_burn"==t.name||"necronomicon_archer_aoe"==t.name||"necronomicon_warrior_mana_burn"==t.name||"necronomicon_warrior_last_will"==t.name?3:"necronomicon_warrior_sight"==t.name?1:4},i.availableSkillPoints.dispose(),i.ability=ko.computed(function(){var t=new AbilityModel(ko.observableArray(JSON.parse(JSON.stringify(i.heroData().abilities))),i);switch(t.hasScepter=i.inventory.hasScepter,i.unitId()){case"npc_dota_necronomicon_archer_1":case"npc_dota_necronomicon_warrior_1":t.abilities()[0].level(1),t.abilities()[1].level(1);break;case"npc_dota_necronomicon_archer_2":case"npc_dota_necronomicon_warrior_2":t.abilities()[0].level(2),t.abilities()[1].level(2);break;case"npc_dota_necronomicon_archer_3":t.abilities()[0].level(3),t.abilities()[1].level(3);break;case"npc_dota_necronomicon_warrior_3":t.abilities()[0].level(3),t.abilities()[1].level(3),t.abilities()[2].level(1)}return t.levelUpAbility=function(e,i,a,n){var o=ko.utils.unwrapObservable(e);switch(t.abilities()[o].name){case"necronomicon_archer_mana_burn":case"necronomicon_archer_aoe":case"necronomicon_warrior_mana_burn":case"necronomicon_warrior_last_will":case"necronomicon_warrior_sight":break;default:t.abilities()[o].level()<n.getAbilityLevelMax(i)&&t.abilities()[o].level(t.abilities()[o].level()+1)}},t.levelDownAbility=function(e,i,a,n){var o=ko.utils.unwrapObservable(e);switch(t.abilities()[o].name){case"necronomicon_archer_mana_burn":case"necronomicon_archer_aoe":case"necronomicon_warrior_mana_burn":case"necronomicon_warrior_last_will":case"necronomicon_warrior_sight":break;default:t.abilities()[o].level()>0&&t.abilities()[o].level(t.abilities()[o].level()-1)}},t}),i.primaryAttribute=ko.computed(function(){var t=0;return"DOTA_ATTRIBUTE_AGILITY"==t?"agi":"DOTA_ATTRIBUTE_INTELLECT"==t?"int":"DOTA_ATTRIBUTE_STRENGTH"==t?"str":""}),i.totalAttribute=function(t){return"agi"==t?parseFloat(i.totalAgi()):"int"==t?parseFloat(i.totalInt()):"str"==t?parseFloat(i.totalStr()):0},i.totalAgi=ko.computed(function(){return(unitData[i.unitId()].attributebaseagility+unitData[i.unitId()].attributeagilitygain*(i.selectedHeroLevel()-1)+2*i.ability().getAttributeBonusLevel()+i.ability().getAgility()+i.enemy().ability().getAllStatsReduction()+i.debuffs.getAllStatsReduction()).toFixed(2)}),i.totalInt=ko.computed(function(){return(unitData[i.unitId()].attributebaseintelligence+unitData[i.unitId()].attributeintelligencegain*(i.selectedHeroLevel()-1)+2*i.ability().getAttributeBonusLevel()+i.ability().getIntelligence()+i.enemy().ability().getAllStatsReduction()+i.debuffs.getAllStatsReduction()).toFixed(2)}),i.totalStr=ko.computed(function(){return(unitData[i.unitId()].attributebasestrength+unitData[i.unitId()].attributestrengthgain*(i.selectedHeroLevel()-1)+2*i.ability().getAttributeBonusLevel()+i.ability().getStrength()+i.enemy().ability().getAllStatsReduction()+i.debuffs.getAllStatsReduction()).toFixed(2)}),i.baseDamage=ko.computed(function(){return[Math.floor(unitData[i.unitId()].attackdamagemin+i.totalAttribute(i.primaryAttribute())+i.ability().getBaseDamage().total),Math.floor(unitData[i.unitId()].attackdamagemax+i.totalAttribute(i.primaryAttribute())+i.ability().getBaseDamage().total)]}),i.totalMagicResistanceProduct=ko.computed(function(){return(1-unitData[i.unitId()].magicalresistance/100)*(1-i.inventory.getMagicResist()/100)*(1-i.ability().getMagicResist()/100)*(1-i.buffs.getMagicResist()/100)*i.enemy().inventory.getMagicResistReduction()*i.enemy().ability().getMagicResistReduction()*i.debuffs.getMagicResistReduction()}),i.totalMagicResistance=ko.computed(function(){return 1-i.totalMagicResistanceProduct()}),i.bat=ko.computed(function(){var t=i.ability().getBAT();return t>0?t:unitData[i.unitId()].attackrate}),i.attackTime=ko.computed(function(){return(i.bat()/(1+i.ias()/100)).toFixed(2)}),i.attacksPerSecond=ko.computed(function(){return(1+i.ias()/100)/i.bat()}),i.evasion=ko.computed(function(){var t=i.ability().setEvasion();return t?(100*t).toFixed(2)+"%":(100*(1-i.inventory.getEvasion()*i.ability().getEvasion())).toFixed(2)+"%"}),i.ehpPhysical=ko.computed(function(){return(i.health()*(1+.06*i.totalArmorPhysical())/(1-(1-i.inventory.getEvasion()*i.ability().getEvasion()))).toFixed(2)}),i.ehpMagical=ko.computed(function(){return(i.health()/i.totalMagicResistanceProduct()).toFixed(2)}),i.heroId(t),i.unitId.subscribe(function(t){i.heroId(t)}),i};UnitModel.prototype=Object.create(HeroModel.prototype),UnitModel.prototype.constructor=UnitModel,module.exports=UnitModel;
},{"../AbilityModel":1,"../data/main":6,"../herocalc_knockout":19,"./HeroModel":10}],14:[function(require,module,exports){
var diffProperties=["totalAgi","totalInt","totalStr","health","healthregen","mana","manaregen","totalArmorPhysical","totalArmorPhysicalReduction","totalMovementSpeed","totalTurnRate","baseDamage","bonusDamage","bonusDamageReduction","damage","totalMagicResistanceProduct","totalMagicResistance","bat","ias","attackTime","attacksPerSecond","evasion","ehpPhysical","ehpMagical","bash","critChance","missChance","totalattackrange","visionrangeday","visionrangenight","lifesteal"];module.exports=diffProperties;
},{}],15:[function(require,module,exports){
var heroData=require("../data/main").heroData,HeroOption=require("./HeroOption"),heroOptionsArray=[];for(var h in heroData)heroOptionsArray.push(new HeroOption(h.replace("npc_dota_hero_",""),heroData[h].displayname));module.exports=heroOptionsArray;
},{"../data/main":6,"./HeroOption":11}],16:[function(require,module,exports){
var nextLevelExp=[200,300,400,500,600,600,800,1e3,1e3,600,2200,800,1400,1500,1600,1700,1800,1900,2e3,2100,2200,2300,2400,2500,"&mdash;"];module.exports=nextLevelExp;
},{}],17:[function(require,module,exports){
var totalExp=[0,200,500,900,1400,2e3,2600,3400,4400,5400,6e3,8200,9e3,10400,11900,13500,15200,17e3,18900,20900,23e3,25200,27500,29900,32400];module.exports=totalExp;
},{}],18:[function(require,module,exports){
var abilityData={alchemist_acid_spray:[{label:"Duration",controlType:"input"},{attributeName:"damage",label:"Total Damage",controlType:"text",fn:function(t,e,r,a,n,o){return t*e}},{attributeName:"armor_reduction",label:"Total Damage",controlType:"text",fn:function(t,e,r,a,n,o){return-e},returnProperty:"armorReduction"}],alchemist_unstable_concoction:[{label:"Brew Time",controlType:"input"},{attributeName:"max_damage",label:"Total Damage",controlType:"text",fn:function(t,e,r,a,n,o){return t*e/5}},{attributeName:"max_stun",label:"Total Stun",controlType:"text",fn:function(t,e,r,a,n,o){return t*e/5}}],ancient_apparition_cold_feet:[{label:"Duration",controlType:"input"},{attributeName:"damage",label:"Total Damage",controlType:"text",fn:function(t,e,r,a,n,o){return t*e}},{attributeName:"stun_duration",label:"Total Stun",controlType:"text",fn:function(t,e,r,a,n,o){return e}}],ancient_apparition_ice_blast:[{label:"Duration",controlType:"input"},{attributeName:"dot_damage",label:"Total Damage",controlType:"text",fn:function(t,e,r,a,n,o){return n.getAbilityPropertyValue(o,"damage")+t*e}}],antimage_mana_void:[{label:"Enemy Missing Mana",controlType:"input"},{attributeName:"mana_void_damage_per_mana",label:"Total Damage",controlType:"text",fn:function(t,e,r,a,n,o){return t*e}}],axe_battle_hunger:[{label:"Battle Hungered Enemies",controlType:"input"},{attributeName:"speed_bonus",label:"Movement Speed Bonus",controlType:"text",noLevel:!0,fn:function(t,e,r,a,n,o){return t*e},returnProperty:"movementSpeedPct"},{attributeName:"slow",label:"Movement Speed Bonus",controlType:"text",noLevel:!0,fn:function(t,e,r,a,n,o){return e},returnProperty:"movementSpeedPctReduction"}],bane_nightmare:[{label:"Duration",controlType:"input"},{label:"DAMAGE:",controlType:"text",fn:function(t,e,r,a,n,o){return n.getAbilityPropertyValue(o,"damage")*t}}],bane_fiends_grip:[{label:"Duration",controlType:"input"},{label:"Enemy Max Mana",controlType:"input"},{attributeName:"fiend_grip_damage",label:"Total Damage",controlType:"text",controls:[0,1],fn:function(t,e,r,a,n,o){return r.inventory.hasScepter()?t[0]*n.getAbilityAttributeValue(o.attributes,"fiend_grip_damage_scepter",o.level()):t[0]*e}},{attributeName:"fiend_grip_mana_drain",label:"Total Mana Drain",controlType:"text",controls:[0,1],noLevel:!0,fn:function(t,e,r,a,n,o){return r.inventory.hasScepter()?t[0]*t[1]*n.getAbilityAttributeValue(o.attributes,"fiend_grip_mana_drain_scepter",o.level())/100:t[0]*t[1]*e/100}}],batrider_sticky_napalm:[{label:"Stacks",controlType:"input"},{attributeName:"damage",label:"Total Bonus Damage",controlType:"text",fn:function(t,e,r,a,n,o){return t*e},returnProperty:"bonusDamage"},{attributeName:"movement_speed_pct",label:"Enemy Movement Speed Slow",controlType:"text",fn:function(t,e,r,a,n,o){return t*e},returnProperty:"movementSpeedPctReduction"},{attributeName:"turn_rate_pct",label:"Enemy Turn Rate Slow",controlType:"text",fn:function(t,e,r,a,n,o){return e},returnProperty:"turnRateReduction"}],batrider_firefly:[{label:"Duration",controlType:"input"},{attributeName:"damage_per_second",label:"Total Damage",controlType:"text",fn:function(t,e,r,a,n,o){return t*e}}],bloodseeker_rupture:[{label:"Enemy Distance Traveled",controlType:"input"},{attributeName:"movement_damage_pct",label:"DAMAGE:",ignoreTooltip:!0,controlType:"text",fn:function(t,e,r,a,n,o){return n.getAbilityPropertyValue(o,"damage")+t*e/100}}],bristleback_viscous_nasal_goo:[{label:"Stacks",controlType:"input"},{attributeName:"armor_per_stack",label:"Enemy Armor Reduction",controlType:"text",fn:function(t,e,r,a,n,o){return-t*e},returnProperty:"armorReduction"},{attributeName:"move_slow_per_stack",label:"%SLOW:",ignoreTooltip:!0,controlType:"text",fn:function(t,e,r,a,n,o){return-(n.getAbilityAttributeValue(o.attributes,"base_move_slow",0)+t*e)},returnProperty:"movementSpeedPctReduction"}],bristleback_quill_spray:[{label:"Stacks",controlType:"input"},{attributeName:"quill_stack_damage",label:"DAMAGE",controlType:"text",fn:function(t,e,r,a,n,o){var l=n.getAbilityAttributeValue(o.attributes,"quill_base_damage",o.level())+t*e,i=n.getAbilityAttributeValue(o.attributes,"max_damage",0);return l>i&&(l=i),l}}],bristleback_bristleback:[{label:"Damage From",controlType:"radio",controlValueType:"string",controlOptions:[{text:"Back",value:"back"},{text:"Side",value:"side"}]},{attributeName:"back_damage_reduction",label:"%DAMAGE REDUCTION:",ignoreTooltip:!0,controlType:"text",fn:function(t,e,r,a,n,o){var o=n.abilities().find(function(t){return"bristleback_bristleback"==t.name});if("back"==t)var l=n.getAbilityAttributeValue(o.attributes,"back_damage_reduction",o.level());else var l=n.getAbilityAttributeValue(o.attributes,"side_damage_reduction",o.level());return-l},returnProperty:"damageReduction"}],bristleback_warpath:[{label:"Stacks",controlType:"input"},{attributeName:"damage_per_stack",label:"BONUS DAMAGE:",ignoreTooltip:!0,controlType:"text",fn:function(t,e,r,a,n,o){return t<1?0:n.getAbilityAttributeValue(o.attributes,"base_damage",o.level())+(t-1)*e}},{attributeName:"move_speed_per_stack",label:"%MOVEMENT:",ignoreTooltip:!0,controlType:"text",fn:function(t,e,r,a,n,o){return t<1?0:n.getAbilityAttributeValue(o.attributes,"base_move_speed",o.level())+(t-1)*e},returnProperty:"movementSpeedPct"}],centaur_return:[{label:"Strength",controlType:"input"},{attributeName:"strength_pct",label:"DAMAGE:",controlType:"text",fn:function(t,e,r,a,n,o){return n.getAbilityAttributeValue(o.attributes,"return_damage",o.level())+t*e/100}}],centaur_stampede:[{label:"Strength",controlType:"input"},{attributeName:"strength_damage",label:"DAMAGE:",ignoreTooltip:!0,controlType:"text",fn:function(t,e,r,a,n,o){return t*e}},{attributeName:"slow_movement_speed",label:"Enemy Movement Speed Slow",controlType:"text",fn:function(t,e,r,a,n,o){return-e},returnProperty:"movementSpeedPctReduction"}],clinkz_death_pact:[{label:"Consumed Unit HP",controlType:"input"},{attributeName:"damage_gain_pct",label:"BASE DAMAGE GAIN:",ignoreTooltip:!0,controlType:"text",fn:function(t,e,r,a,n,o){return t*e/100},returnProperty:"baseDamage"},{attributeName:"health_gain_pct",label:"HEALTH GAIN:",ignoreTooltip:!0,controlType:"text",fn:function(t,e,r,a,n,o){return t*e/100},returnProperty:"bonusHealth"}],crystal_maiden_frostbite:[{label:"Duration",controlType:"input"},{label:"DAMAGE:",controlType:"text",fn:function(t,e,r,a,n,o){return n.getAbilityPropertyValue(o,"damage")*t}}],dark_seer_ion_shell:[{label:"Duration",controlType:"input"},{attributeName:"damage_per_second",label:"Total Damage",controlType:"text",fn:function(t,e,r,a,n,o){return t*e}}],dazzle_shadow_wave:[{label:"Targets",controlType:"input"},{label:"DAMAGE:",controlType:"text",fn:function(t,e,r,a,n,o){return n.getAbilityPropertyValue(o,"damage")*t}}],dazzle_weave:[{label:"Duration",controlType:"input"},{attributeName:"armor_per_second",label:"ARMOR",ignoreTooltip:!0,controlType:"text",fn:function(t,e,r,a,n,o){return t*e},returnProperty:"armor"},{attributeName:"armor_per_second",label:"ARMOR REDUCTION:",ignoreTooltip:!0,controlType:"text",fn:function(t,e,r,a,n,o){return-t*e},returnProperty:"armorReduction"}],death_prophet_exorcism:[{label:"Damage Dealt",controlType:"input"},{attributeName:"heal_percent",label:"Total Armor",controlType:"text",fn:function(t,e,r,a,n,o){return t*e/100}}],disruptor_static_storm:[{label:"Duration",controlType:"input"},{label:"DAMAGE:",controlType:"text",fn:function(t,e,r,a,n,o){var l=.25*(130+40*o.level())*.05,i=4*t*(4*t+1)/2;return l*i}}],doom_bringer_scorched_earth:[{label:"Duration",controlType:"input"},{attributeName:"damage_per_second",label:"Total Damage",controlType:"text",fn:function(t,e,r,a,n,o){return t*e}},{attributeName:"bonus_movement_speed_pct",label:"Total Damage",controlType:"text",fn:function(t,e,r,a,n,o){return e},returnProperty:"movementSpeedPct"},{attributeName:"damage_per_second",label:"HP REGEN:",ignoreTooltip:!0,controlType:"text",fn:function(t,e,r,a,n,o){return e},returnProperty:"healthregen"}],doom_bringer_doom:[{label:"Duration",controlType:"input"},{attributeName:"damage",label:"Total Damage",controlType:"text",fn:function(t,e,r,a,n,o){return r.inventory.hasScepter()?t*n.getAbilityAttributeValue(o.attributes,"damage_scepter",o.level()):t*e}}],dragon_knight_elder_dragon_form:[{label:"Duration",controlType:"input"},{attributeName:"bonus_attack_range",label:"Total Damage",controlType:"text",fn:function(t,e,r,a,n,o){return e},returnProperty:"attackrange"},{attributeName:"bonus_movement_speed",label:"Total Damage",controlType:"text",fn:function(t,e,r,a,n,o){return e},returnProperty:"movementSpeedFlat"}],drow_ranger_trueshot:[{label:"Drow's Agility",controlType:"input",display:"buff"},{attributeName:"trueshot_ranged_damage",label:"DAMAGE BONUS:",ignoreTooltip:!0,controlType:"text",display:"buff",fn:function(t,e,r,a,n,o){return t*e/100},returnProperty:"bonusDamagePrecisionAura"}],earth_spirit_rolling_boulder:[{label:"Using Stone",controlType:"checkbox"},{attributeName:"move_slow",label:"Total Damage",controlType:"text",fn:function(t,e,r,a,n,o){return t?-e:0},returnProperty:"movementSpeedPctReduction"}],earthshaker_enchant_totem:[{label:"Activated",controlType:"checkbox"},{attributeName:"totem_damage_percentage",label:"DAMAGE",controlType:"text",fn:function(t,e,r,a,n,o){return t?e:0},returnProperty:"baseDamageMultiplier"}],earthshaker_echo_slam:[{label:"Enemies in Range",controlType:"input"},{attributeName:"echo_slam_echo_damage",label:"Total Damage",controlType:"text",fn:function(t,e,r,a,n,o){return t*e}}],elder_titan_ancestral_spirit:[{label:"HEROES PASSED THROUGH",controlType:"input"},{label:"CREEPS PASSED THROUGH",controlType:"input"},{attributeName:"damage_creeps",label:"DAMAGE:",ignoreTooltip:!0,controlType:"text",controls:[0,1],fn:function(t,e,r,a,n,o){return t[0]*n.getAbilityAttributeValue(o.attributes,"damage_heroes",o.level())+t[1]*e},returnProperty:"bonusDamage"},{attributeName:"move_pct_creeps",label:"%BONUS SPEED:",ignoreTooltip:!0,controlType:"text",controls:[0,1],fn:function(t,e,r,a,n,o){return t[0]*n.getAbilityAttributeValue(o.attributes,"move_pct_heroes",o.level())+t[1]*e},returnProperty:"movementSpeedPct"}],elder_titan_earth_splitter:[{label:"Enemy Max Health",controlType:"input"},{attributeName:"damage_pct",label:"Total Damage",controlType:"text",fn:function(t,e,r,a,n,o){return t*e/100}},{attributeName:"slow_pct",label:"Total Damage",controlType:"text",fn:function(t,e,r,a,n,o){return-e},returnProperty:"movementSpeedPctReduction"}],enchantress_natures_attendants:[{label:"Duration",controlType:"input"},{attributeName:"heal",label:"HEAL:",ignoreTooltip:!0,controlType:"text",fn:function(t,e,r,a,n,o){return n.getAbilityAttributeValue(o.attributes,"wisp_count",o.level())*t*e}}],enigma_malefice:[{label:"Hits",controlType:"input"},{attributeName:"damage",label:"DAMAGE:",ignoreTooltip:!0,controlType:"text",fn:function(t,e,r,a,n,o){return t*e}},{attributeName:"stun_duration",label:"Total Damage",controlType:"text",fn:function(t,e,r,a,n,o){return t*e}}],enigma_midnight_pulse:[{label:"Duration",controlType:"input"},{label:"Enemy Max Health",controlType:"input"},{attributeName:"damage_percent",label:"DAMAGE:",ignoreTooltip:!0,controlType:"text",controls:[0,1],fn:function(t,e,r,a,n,o){return t[0]*t[1]*e/100}}],enigma_black_hole:[{label:"Duration",controlType:"input"},{attributeName:"far_damage",label:"Total Damage",controlType:"text",fn:function(t,e,r,a,n,o){return t*e}},{attributeName:"near_damage",label:"Total Damage",controlType:"text",fn:function(t,e,r,a,n,o){return t*e}}],faceless_void_time_lock:[{label:"In Chronosphere",controlType:"checkbox"},{attributeName:"bonus_damage",label:"%MOVESPEED AS DAMAGE",controlType:"text",fn:function(t,e,r,a,n,o){return t?2*e:e},returnProperty:"bashBonusDamage"},{attributeName:"duration",label:"Total Damage",controlType:"text",fn:function(t,e,r,a,n,o){return e}},{attributeName:"chance_pct",label:"Total Damage",controlType:"text",fn:function(t,e,r,a,n,o){return e},returnProperty:"bash"}],gyrocopter_rocket_barrage:[{label:"Rockets",controlType:"input"},{attributeName:"rockets_per_second",label:"Total Damage",controlType:"text",fn:function(t,e,r,a,n,o){return e}},{label:"DAMAGE:",controlType:"text",fn:function(t,e,r,a,n,o){return n.getAbilityPropertyValue(o,"damage")*t}}],huskar_burning_spear:[{label:"Stacks",controlType:"input"},{attributeName:"health_cost",label:"Total Damage",controlType:"text",fn:function(t,e,r,a,n,o){return t*e}},{label:"DAMAGE:",controlType:"text",fn:function(t,e,r,a,n,o){return n.getAbilityPropertyValue(o,"damage")*t}}],huskar_berserkers_blood:[{label:"%HP",controlType:"input"},{attributeName:"hp_threshold_max",label:"Health at given %HP:",ignoreTooltip:!0,controlType:"text",fn:function(t,e,r,a,n,o){return r.health()*t/100}},{attributeName:"hp_threshold_max",label:"Total Damage",controlType:"text",fn:function(t,e,r,a,n,o){return e}},{attributeName:"maximum_resistance",label:"MAGIC RESISTANCE BONUS:",ignoreTooltip:!0,controlType:"text",fn:function(t,e,r,a,n,o){var t=Math.min(t,100);t=Math.max(t,10);var l=n.getAbilityAttributeValue(o.attributes,"hp_threshold_max",0),i=100-l,u=(t-l)/i;return u=1-u,u*e},returnProperty:"magicResist"},{attributeName:"maximum_attack_speed",label:"ATTACK SPEED BONUS:",ignoreTooltip:!0,controlType:"text",fn:function(t,e,r,a,n,o){var t=Math.min(t,100);t=Math.max(t,10);var l=n.getAbilityAttributeValue(o.attributes,"hp_threshold_max",0),i=100-l,u=(t-l)/i;return u=1-u,u*e},returnProperty:"attackspeed"}],huskar_life_break:[{label:"Enemy Current HP",controlType:"input"},{attributeName:"health_damage",label:"DAMAGE:",ignoreTooltip:!0,controlType:"text",fn:function(t,e,r,a,n,o){return t*e}},{label:"Huskar Current HP",controlType:"input"},{attributeName:"health_cost_percent",label:"DAMAGE TAKEN:",ignoreTooltip:!0,controlType:"text",fn:function(t,e,r,a,n,o){return t*e}},{attributeName:"movespeed",label:"Total Damage",controlType:"text",fn:function(t,e,r,a,n,o){return e},returnProperty:"movementSpeedPctReduction"}],invoker_quas:[{label:"Instances",controlType:"input"},{attributeName:"bonus_strength",label:"Total Damage",controlType:"text",fn:function(t,e,r,a,n,o){return e},returnProperty:"bonusStrength"},{attributeName:"health_regen_per_instance",label:"HP REGEN:",ignoreTooltip:!0,controlType:"text",fn:function(t,e,r,a,n,o){return t*e},returnProperty:"healthregen"}],invoker_wex:[{label:"Instances",controlType:"input"},{attributeName:"bonus_agility",label:"Total Damage",controlType:"text",fn:function(t,e,r,a,n,o){return e},returnProperty:"bonusAgility"},{attributeName:"move_speed_per_instance",label:"%MOVE SPEED:",ignoreTooltip:!0,controlType:"text",fn:function(t,e,r,a,n,o){return t*e},returnProperty:"movementSpeedPct"},{attributeName:"attack_speed_per_instance",label:"%ATTACK SPEED:",ignoreTooltip:!0,controlType:"text",fn:function(t,e,r,a,n,o){return t*e},returnProperty:"attackspeed"}],invoker_exort:[{label:"Instances",controlType:"input"},{attributeName:"bonus_intelligence",label:"Total Damage",controlType:"text",fn:function(t,e,r,a,n,o){return e},returnProperty:"bonusInt"},{attributeName:"bonus_damage_per_instance",label:"DAMAGE:",ignoreTooltip:!0,controlType:"text",fn:function(t,e,r,a,n,o){return t*e},returnProperty:"bonusDamage"}],invoker_ghost_walk:[{label:"Quas Level",controlType:"input"},{attributeName:"enemy_slow",label:"Total Damage",controlType:"text",fn:function(t,e,r,a,n,o){return 0==t?0:n.getAbilityAttributeValue(o.attributes,"enemy_slow",t)},returnProperty:"movementSpeedPctReduction"},{label:"Wex Level",controlType:"input",display:"ability"},{attributeName:"self_slow",label:"Total Damage",controlType:"text",display:"ability",fn:function(t,e,r,a,n,o){return 0==t?0:n.getAbilityAttributeValue(o.attributes,"self_slow",t)},returnProperty:"movementSpeedPct"}],invoker_alacrity:[{label:"Wex Level",controlType:"input"},{attributeName:"bonus_attack_speed",label:"Total Damage",controlType:"text",fn:function(t,e,r,a,n,o){return 0==t?0:n.getAbilityAttributeValue(o.attributes,"bonus_attack_speed",t)},returnProperty:"attackspeed"},{label:"Exort Level",controlType:"input"},{attributeName:"bonus_damage",label:"Total Damage",controlType:"text",fn:function(t,e,r,a,n,o){return 0==t?0:n.getAbilityAttributeValue(o.attributes,"bonus_damage",t)},returnProperty:"bonusDamage"}],invoker_ice_wall:[{label:"Quas Level",controlType:"input"},{attributeName:"slow",label:"Total Damage",controlType:"text",fn:function(t,e,r,a,n,o){return 0==t?0:n.getAbilityAttributeValue(o.attributes,"slow",t)},returnProperty:"movementSpeedPctReduction"},{label:"Exort Level",controlType:"input",display:"ability"},{label:"Duration",controlType:"input",display:"ability"},{attributeName:"damage_per_second",label:"DAMAGE:",ignoreTooltip:!0,controlType:"text",display:"ability",controls:[1,2],fn:function(t,e,r,a,n,o){return 0==t[0]?0:n.getAbilityAttributeValue(o.attributes,"damage_per_second",t[0])*t[1]}}],jakiro_dual_breath:[{label:"Duration",controlType:"input"},{label:"DAMAGE:",controlType:"text",fn:function(t,e,r,a,n,o){return 2*n.getAbilityPropertyValue(o,"damage")+n.getAbilityAttributeValue(o.attributes,"burn_damage",o.level())*t}},{attributeName:"slow_movement_speed_pct",label:"Total Damage",controlType:"text",fn:function(t,e,r,a,n,o){return e},returnProperty:"movementSpeedPctReduction"},{attributeName:"slow_attack_speed_pct",label:"%ATTACK SLOW:",ignoreTooltip:!0,controlType:"text",fn:function(t,e,r,a,n,o){return e},returnProperty:"attackspeedreduction"}],jakiro_liquid_fire:[{label:"Duration",controlType:"input"},{attributeName:"damage",label:"Total Damage",controlType:"text",fn:function(t,e,r,a,n,o){return t*e}},{attributeName:"slow_attack_speed_pct",label:"Total Damage",controlType:"text",fn:function(t,e,r,a,n,o){return e},returnProperty:"attackspeedreduction"}],jakiro_macropyre:[{label:"Duration",controlType:"input"},{attributeName:"damage",label:"Total Damage",controlType:"text",fn:function(t,e,r,a,n,o){return t*e}}],juggernaut_blade_fury:[{label:"Duration",controlType:"input"},{label:"DAMAGE:",controlType:"text",fn:function(t,e,r,a,n,o){return n.getAbilityPropertyValue(o,"damage")*t}}],juggernaut_healing_ward:[{label:"Duration",controlType:"input"},{label:"Max Health",controlType:"input"},{attributeName:"healing_ward_heal_amount",label:"HEAL OVER TIME:",ignoreTooltip:!0,controlType:"text",controls:[0,1],fn:function(t,e,r,a,n,o){return t[0]*t[1]*e/100}}],juggernaut_omni_slash:[{label:"Jumps",controlType:"input"},{label:"MIN DAMAGE:",ignoreTooltip:!0,controlType:"text",fn:function(t,e,r,a,n,o){return n.getAbilityAttributeValue(o.attributes,"omni_slash_damage",1)*t}},{label:"MAX DAMAGE:",ignoreTooltip:!0,controlType:"text",fn:function(t,e,r,a,n,o){return n.getAbilityAttributeValue(o.attributes,"omni_slash_damage",2)*t}}],keeper_of_the_light_illuminate:[{label:"Duration",controlType:"input"},{attributeName:"damage_per_second",label:"DAMAGE:",ignoreTooltip:!0,controlType:"text",fn:function(t,e,r,a,n,o){return t*e}}],keeper_of_the_light_mana_leak:[{label:"Distance Moved",controlType:"input"},{label:"Enemy Max Mana",controlType:"input"},{attributeName:"mana_leak_pct",label:"MANA LEAKED:",ignoreTooltip:!0,controlType:"text",controls:[0,1],fn:function(t,e,r,a,n,o){return t[0]/100*t[1]*e/100}}],legion_commander_duel:[{label:"Duel Wins",controlType:"input"},{attributeName:"reward_damage",label:"Total Damage:",ignoreTooltip:!0,controlType:"text",fn:function(t,e,r,a,n,o){return t*e},returnProperty:"bonusDamage"}],leshrac_pulse_nova:[{label:"Duration",controlType:"input"},{attributeName:"damage",label:"Total Damage",controlType:"text",fn:function(t,e,r,a,n,o){return t*e}},{attributeName:"mana_cost_per_second",label:"MANA COST:",ignoreTooltip:!0,controlType:"text",fn:function(t,e,r,a,n,o){return t*e}}],lich_chain_frost:[{label:"Bounce Hits",controlType:"input"},{attributeName:"damage",label:"Total Damage",controlType:"text",fn:function(t,e,r,a,n,o){return t*e}},{attributeName:"slow_movement_speed",label:"Enemy Movement Speed Slow",controlType:"text",fn:function(t,e,r,a,n,o){return e},returnProperty:"movementSpeedPctReduction"},{attributeName:"slow_attack_speed",label:"Total Damage",controlType:"text",fn:function(t,e,r,a,n,o){return e},returnProperty:"attackspeedreduction"}],life_stealer_feast:[{label:"Enemy Current HP",controlType:"input"},{attributeName:"hp_leech_percent",label:"Total Damage",controlType:"text",fn:function(t,e,r,a,n,o){return t*e/100},returnProperty:"bonusDamage"}],life_stealer_open_wounds:[{label:"Duration",controlType:"input"},{attributeName:"heal_percent",label:"Total Damage",controlType:"text",fn:function(t,e,r,a,n,o){return e},returnProperty:"lifesteal"},{attributeName:"slow_steps",label:"%SLOW:",ignoreTooltip:!0,controlType:"text",noLevel:!0,fn:function(t,e,r,a,n,o){return n.getAbilityAttributeValue(o.attributes,"slow_steps",t+1)},returnProperty:"movementSpeedPctReduction"}],lina_fiery_soul:[{label:"Duration",controlType:"input"},{attributeName:"fiery_soul_move_speed_bonus",label:"Enemy Movement Speed Slow",controlType:"text",fn:function(t,e,r,a,n,o){return t*e},returnProperty:"movementSpeedPct"},{attributeName:"fiery_soul_attack_speed_bonus",label:"Total Damage",controlType:"text",fn:function(t,e,r,a,n,o){return t*e},returnProperty:"attackspeed"}],lion_mana_drain:[{label:"Duration",controlType:"input"},{attributeName:"mana_per_second",label:"MANA DRAINED:",ignoreTooltip:!0,controlType:"text",fn:function(t,e,r,a,n,o){return t*e}}],luna_moon_glaive:[{label:"Damage",controlType:"input"},{attributeName:"damage_reduction_percent",label:"BOUNCE DAMAGE:",ignoreTooltip:!0,controlType:"text",fn:function(t,e,r,a,n,o){for(var l=[],i=1;i<6;i++)l.push((t*Math.pow(e/100,i)).toFixed(2));return l.join("<br>")}}],luna_eclipse:[{label:"Beam Count",controlType:"input"},{attributeName:"beams",label:"Total Damage",controlType:"text",fn:function(t,e,r,a,n,o){var l=n.abilities().find(function(t){return"luna_lucent_beam"==t.name});if(0==l.level())return 0;var i=n.getAbilityPropertyValue(l,"damage");return t*i}}],medusa_mystic_snake:[{label:"Jump Count",controlType:"input"},{attributeName:"snake_damage",label:"Damage Per Jump:",ignoreTooltip:!0,controlType:"method",display:"none",fn:function(t,e,r,a,n,o){for(var l=n.getAbilityAttributeValue(o.attributes,"snake_jumps",o.level()),i=n.getAbilityAttributeValue(o.attributes,"snake_scale",0),u=[],p=0;p<l;p++)u.push(e+e*p*i/100);return u}},{attributeName:"snake_damage",label:"Damage Per Jump:",ignoreTooltip:!0,controlType:"text",controls:[0,1],fn:function(t,e,r,a,n,o){return t[1].join(" / ")}},{attributeName:"snake_damage",label:"Total Damage:",ignoreTooltip:!0,controlType:"text",controls:[0,1],fn:function(t,e,r,a,n,o){return t[1].slice(0,t[0]).reduce(function(t,e){return t+e},0)}},{attributeName:"snake_damage",label:"Max Damage:",ignoreTooltip:!0,controlType:"text",controls:[0,1],fn:function(t,e,r,a,n,o){return t[1].reduce(function(t,e){return t+e},0)}}],medusa_mana_shield:[{label:"Damage",controlType:"input"},{attributeName:"damage_per_mana",label:"MANA USED:",ignoreTooltip:!0,controlType:"text",fn:function(t,e,r,a,n,o){return(t/e).toFixed(2)}},{attributeName:"absorption_tooltip",label:"%DAMAGE REDUCTION:",ignoreTooltip:!0,controlType:"text",fn:function(t,e,r,a,n,o){return-e},returnProperty:"damageReduction"}],meepo_poof:[{label:"Meepo Count",controlType:"input"},{label:"DAMAGE:",controlType:"text",fn:function(t,e,r,a,n,o){return n.getAbilityPropertyValue(o,"damage")*t}}],meepo_geostrike:[{label:"Stacks",controlType:"input"},{label:"DAMAGE:",ignoreTooltip:!0,controlType:"text",fn:function(t,e,r,a,n,o){return n.getAbilityPropertyValue(o,"damage")*t}},{attributeName:"slow",label:"%SLOW:",ignoreTooltip:!0,controlType:"text",noLevel:!0,fn:function(t,e,r,a,n,o){return n.getAbilityAttributeValue(o.attributes,"slow",o.level())*t},returnProperty:"movementSpeedPctReduction"}],mirana_arrow:[{label:"Arrow Travel Distance",controlType:"input"},{attributeName:"arrow_max_stun",label:"STUN DURATION:",ignoreTooltip:!0,controlType:"text",fn:function(t,e,r,a,n,o){var l=n.getAbilityAttributeValue(o.attributes,"arrow_min_stun",0),i=n.getAbilityAttributeValue(o.attributes,"arrow_max_stunrange",0),u=Math.min(t,i)/i;return Math.max(l,.1*Math.floor(e*u/.1))}},{attributeName:"arrow_bonus_damage",label:"TOTAL DAMAGE:",ignoreTooltip:!0,controlType:"text",fn:function(t,e,r,a,n,o){var o=o,l=o.damage()[o.level()-1],i=n.getAbilityAttributeValue(o.attributes,"arrow_max_stunrange",0),u=Math.min(t,i)/i,p=2.8*Math.floor(e*u/2.8);return l+" + "+p+" = "+(l+p)}}],morphling_morph_agi:[{label:"Shifts",controlType:"input"},{attributeName:"points_per_tick",label:"AGI SHIFT GAIN:",ignoreTooltip:!0,controlType:"text",fn:function(t,e,r,a,n,o){return t*e},returnProperty:"bonusAgility"},{attributeName:"points_per_tick",label:"STR SHIFT LOSS:",ignoreTooltip:!0,controlType:"text",fn:function(t,e,r,a,n,o){return-t*e},returnProperty:"bonusStrength"},{attributeName:"bonus_attributes",label:"SHIFT TIME:",controlType:"text",fn:function(t,e,r,a,n,o){return e},returnProperty:"bonusAgility2"},{attributeName:"morph_cooldown",label:"SHIFT TIME:",ignoreTooltip:!0,controlType:"text",fn:function(t,e,r,a,n,o){return t*e}},{attributeName:"mana_cost",label:"SHIFT MANA COST:",ignoreTooltip:!0,controlType:"text",fn:function(t,e,r,a,n,o){return t*e*n.getAbilityAttributeValue(o.attributes,"morph_cooldown",o.level())}}],morphling_morph_str:[{label:"Shifts",controlType:"input"},{attributeName:"points_per_tick",label:"STR SHIFT GAIN:",ignoreTooltip:!0,controlType:"text",fn:function(t,e,r,a,n,o){return t*e},returnProperty:"bonusStrength"},{attributeName:"points_per_tick",label:"AGI SHIFT LOSS:",ignoreTooltip:!0,controlType:"text",fn:function(t,e,r,a,n,o){return-t*e},returnProperty:"bonusAgility"},{attributeName:"bonus_attributes",label:"SHIFT TIME:",controlType:"text",fn:function(t,e,r,a,n,o){return e},returnProperty:"bonusStrength2"},{attributeName:"morph_cooldown",label:"SHIFT TIME:",ignoreTooltip:!0,controlType:"text",fn:function(t,e,r,a,n,o){return t*e}},{attributeName:"mana_cost",label:"SHIFT MANA COST:",ignoreTooltip:!0,controlType:"text",fn:function(t,e,r,a,n,o){return t*e*n.getAbilityAttributeValue(o.attributes,"morph_cooldown",o.level())}}],furion_wrath_of_nature:[{label:"Duration",controlType:"input"},{attributeName:"damage",label:"Total Damage",controlType:"text",fn:function(t,e,r,a,n,o){return t*e}}],necrolyte_heartstopper_aura:[{label:"Duration",controlType:"input"},{label:"Enemy Max Health",controlType:"input"},{attributeName:"aura_damage",label:"HEALTH LOST:",ignoreTooltip:!0,controlType:"text",controls:[0,1],fn:function(t,e,r,a,n,o){return t[0]*t[1]*e/100}}],necrolyte_sadist:[{label:"Unit Kills",controlType:"input"},{label:"Hero Kills",controlType:"input"},{attributeName:"health_regen",label:"Total Damage",controlType:"text",controls:[0,1],fn:function(t,e,r,a,n,o){var l=n.getAbilityAttributeValue(o.attributes,"hero_multiplier",0);return(t[0]+t[1]*l)*e},returnProperty:"healthregen"},{attributeName:"mana_regen",label:"Total Damage",controlType:"text",controls:[0,1],fn:function(t,e,r,a,n,o){var l=n.getAbilityAttributeValue(o.attributes,"hero_multiplier",0);return(t[0]+t[1]*l)*e},returnProperty:"manaregen"}],night_stalker_crippling_fear:[{label:"Is Night",controlType:"checkbox"},{attributeName:"miss_rate_night",label:"%CHANCE TO MISS:",ignoreTooltip:!0,controlType:"text",fn:function(t,e,r,a,n,o){return t?n.getAbilityAttributeValue(o.attributes,"miss_rate_night",o.level()):n.getAbilityAttributeValue(o.attributes,"miss_rate_day",o.level())},returnProperty:"missChance"}],night_stalker_hunter_in_the_night:[{label:"Is Night",controlType:"checkbox"},{attributeName:"bonus_attack_speed_night",label:"Total Damage",controlType:"text",fn:function(t,e,r,a,n,o){return t?e:0},returnProperty:"attackspeed"},{attributeName:"bonus_movement_speed_pct_night",label:"Total Damage",controlType:"text",fn:function(t,e,r,a,n,o){return t?e:0},returnProperty:"movementSpeedPct"}],obsidian_destroyer_arcane_orb:[{label:"Current Mana",controlType:"input"},{attributeName:"mana_pool_damage_pct",label:"Total Damage",controlType:"text",fn:function(t,e,r,a,n,o){return t*e/100},returnProperty:"bonusDamageOrb"}],ogre_magi_ignite:[{label:"Duration",controlType:"input"},{attributeName:"burn_damage",label:"Total Damage",controlType:"text",fn:function(t,e,r,a,n,o){return t*e}},{attributeName:"slow_movement_speed_pct",label:"Total Damage",controlType:"text",fn:function(t,e,r,a,n,o){return e},returnProperty:"movementSpeedPctReduction"}],pudge_rot:[{label:"Duration",controlType:"input"},{label:"DAMAGE:",controlType:"text",fn:function(t,e,r,a,n,o){return n.getAbilityPropertyValue(o,"damage")*t}},{attributeName:"rot_slow",label:"Total Damage",controlType:"text",fn:function(t,e,r,a,n,o){return e},returnProperty:"movementSpeedPctReduction"}],pudge_flesh_heap:[{label:"Stacks",controlType:"input"},{attributeName:"flesh_heap_strength_buff_amount",label:"Total Damage",controlType:"text",fn:function(t,e,r,a,n,o){return t*e},returnProperty:"bonusStrength"},{attributeName:"flesh_heap_magic_resist",label:"Total Damage",controlType:"text",fn:function(t,e,r,a,n,o){return e},returnProperty:"magicResist"}],pudge_dismember:[{label:"Duration",controlType:"input"},{attributeName:"dismember_damage",label:"Total Damage",controlType:"text",fn:function(t,e,r,a,n,o){return t*e}}],pugna_nether_ward:[{label:"Enemy Mana Spent",controlType:"input"},{attributeName:"mana_multiplier",label:"DAMAGE:",ignoreTooltip:!0,controlType:"text",fn:function(t,e,r,a,n,o){return t*e}},{attributeName:"mana_regen",label:"Total Damage",controlType:"text",fn:function(t,e,r,a,n,o){return e},returnProperty:"manaregenreduction"}],pugna_life_drain:[{label:"Duration",controlType:"input"},{attributeName:"health_drain",label:"HEALTH DRAINED:",ignoreTooltip:!0,controlType:"text",fn:function(t,e,r,a,n,o){return t*e}}],queenofpain_shadow_strike:[{label:"Duration",controlType:"input"},{attributeName:"movement_slow",label:"Total Damage",controlType:"text",fn:function(t,e,r,a,n,o){return e},returnProperty:"movementSpeedPctReduction"},{attributeName:"strike_damage",label:"Total Damage:",ignoreTooltip:!0,controlType:"text",fn:function(t,e,r,a,n,o){var l=n.getAbilityAttributeValue(o.attributes,"duration_damage",o.level()),i=Math.floor(t/3);return e+l*i}}],razor_plasma_field:[{label:"Distance",controlType:"input"},{attributeName:"radius",label:"MIN DISTANCE:",ignoreTooltip:!0,controlType:"text",fn:function(t,e,r,a,n,o){return 200}},{attributeName:"radius",label:"MAX DISTANCE:",ignoreTooltip:!0,controlType:"text",fn:function(t,e,r,a,n,o){return 200+e}},{attributeName:"radius",label:"Instance Damage",ignoreTooltip:!0,controlType:"text",fn:function(t,e,r,a,n,o){var l=e+200,i=(Math.min(Math.max(t,200),l)-200)/(l-200),u=n.getAbilityAttributeValue(o.attributes,"damage_min",o.level()),p=n.getAbilityAttributeValue(o.attributes,"damage_max",o.level());return u+(p-u)*i}}],razor_static_link:[{label:"Duration",controlType:"input"},{attributeName:"drain_length",label:"Damage Drained:",ignoreTooltip:!0,controlType:"text",fn:function(t,e,r,a,n,o){var l=Math.floor(4*t)+1,i=Math.min(4*e+1,l),u=n.getAbilityAttributeValue(o.attributes,"drain_rate",o.level());return i*u/4},returnProperty:"bonusDamage"},{attributeName:"drain_length",label:"Enemy Damage Lost:",ignoreTooltip:!0,controlType:"text",display:"hidden",fn:function(t,e,r,a,n,o){var l=Math.floor(4*t)+1,i=Math.min(4*e+1,l),u=n.getAbilityAttributeValue(o.attributes,"drain_rate",o.level());return i*u/4},returnProperty:"bonusDamageReduction"}],razor_eye_of_the_storm:[{label:"Duration",controlType:"input"},{attributeName:"damage",label:"Total Damage",controlType:"text",fn:function(t,e,r,a,n,o){return t*e}}],rubick_fade_bolt:[{label:"Jumps",controlType:"input"},{attributeName:"damage",label:"Total Damage",controlType:"text",fn:function(t,e,r,a,n,o){return e*(1-t*n.getAbilityAttributeValue(o.attributes,"jump_damage_reduction_pct",o.level())/100)}},{attributeName:"hero_attack_damage_reduction",label:"Total Damage",
controlType:"text",fn:function(t,e,r,a,n,o){return e},returnProperty:"bonusDamageReduction"}],sandking_sand_storm:[{label:"Duration",controlType:"input"},{label:"DAMAGE:",controlType:"text",fn:function(t,e,r,a,n,o){return n.getAbilityPropertyValue(o,"damage")*t}}],sandking_epicenter:[{label:"Pulses",controlType:"input"},{attributeName:"epicenter_damage",label:"DAMAGE:",ignoreTooltip:!0,controlType:"text",fn:function(t,e,r,a,n,o){return t*e}},{attributeName:"epicenter_slow",label:"Total Damage",controlType:"text",fn:function(t,e,r,a,n,o){return e},returnProperty:"movementSpeedPctReduction"},{attributeName:"epicenter_slow_as",label:"%ATTACK SLOW:",ignoreTooltip:!0,controlType:"text",fn:function(t,e,r,a,n,o){return e},returnProperty:"attackspeedreduction"}],shadow_demon_shadow_poison:[{label:"Duration",controlType:"input"},{attributeName:"stack_damage",label:"Total Damage",controlType:"text",fn:function(t,e,r,a,n,o){var l=[1,2,4,8];return t>4?e*l[3]+50*(t-4):t<=0?0:e*l[t-1]}}],nevermore_necromastery:[{label:"Souls",controlType:"input"},{attributeName:"necromastery_damage_per_soul",label:"DAMAGE:",ignoreTooltip:!0,controlType:"text",fn:function(t,e,r,a,n,o){return t*e},returnProperty:"bonusDamage"}],nevermore_requiem:[{label:"Line Hit Count",controlType:"input"},{attributeName:"requiem_reduction_damage",label:"Damage:",ignoreTooltip:!0,controlType:"text",fn:function(t,e,r,a,n,o){return n.getAbilityPropertyValue(o,"damage")*t}},{label:"Return Line Hit Count (Scepter)",controlType:"input"},{attributeName:"requiem_damage_pct_scepter",label:"Damage/Heal:",ignoreTooltip:!0,controlType:"text",fn:function(t,e,r,a,n,o){return n.getAbilityPropertyValue(o,"damage")*t*e/100}},{attributeName:"requiem_damage_pct_scepter",label:"Total Damage:",ignoreTooltip:!0,controlType:"text",controls:[0,1],fn:function(t,e,r,a,n,o){var l=n.getAbilityPropertyValue(o,"damage");return l*t[0]+l*t[1]*e/100}},{attributeName:"requiem_reduction_damage",label:"%DAMAGE REDUCTION:",ignoreTooltip:!0,controlType:"text",fn:function(t,e,r,a,n,o){return e},returnProperty:"baseDamageReductionPct"},{attributeName:"requiem_reduction_ms",label:"%DAMAGE REDUCTION:",controlType:"text",fn:function(t,e,r,a,n,o){return e},returnProperty:"movementSpeedPctReduction"}],shadow_shaman_shackles:[{label:"Duration",controlType:"input"},{label:"DAMAGE:",controlType:"text",fn:function(t,e,r,a,n,o){return n.getAbilityPropertyValue(o,"damage")*t}}],silencer_curse_of_the_silent:[{label:"Duration",controlType:"input"},{attributeName:"damage",label:"Total Damage",controlType:"text",fn:function(t,e,r,a,n,o){return Math.floor(t)*e}},{attributeName:"movespeed",label:"Total Damage",controlType:"text",fn:function(t,e,r,a,n,o){return e},returnProperty:"movementSpeedPctReduction"}],skywrath_mage_mystic_flare:[{label:"Duration",controlType:"input"},{attributeName:"damage",label:"Total Damage",controlType:"text",fn:function(t,e,r,a,n,o){return t*e}}],slark_essence_shift:[{label:"Attacks",controlType:"input"},{attributeName:"agi_gain",label:"Total Damage",controlType:"text",display:"ability",fn:function(t,e,r,a,n,o){return t*e},returnProperty:"bonusAgility"},{attributeName:"stat_loss",label:"Total Damage",controlType:"text",fn:function(t,e,r,a,n,o){return-t*e},returnProperty:"bonusAllStatsReduction"}],slark_shadow_dance:[{label:"Duration",controlType:"input"},{attributeName:"bonus_regen_pct",label:"TOTAL HEALTH REGENERATED:",ignoreTooltip:!0,controlType:"text",fn:function(t,e,r,a,n,o){return t*r.health()*e/100}},{attributeName:"bonus_regen_pct",label:"HEALTH GAINED PER SECOND:",ignoreTooltip:!0,controlType:"text",fn:function(t,e,r,a,n,o){return r.health()*e/100},returnProperty:"healthregen"},{attributeName:"bonus_movement_speed",label:"%MOVE SPEED:",ignoreTooltip:!0,controlType:"text",fn:function(t,e,r,a,n,o){return e},returnProperty:"movementSpeedPct"}],sniper_shrapnel:[{label:"Duration",controlType:"input"},{label:"DAMAGE:",ignoreTooltip:!0,controlType:"text",fn:function(t,e,r,a,n,o){return n.getAbilityPropertyValue(o,"damage")*t}},{attributeName:"building_damage",label:"BUILDING DAMAGE:",ignoreTooltip:!0,controlType:"text",fn:function(t,e,r,a,n,o){return t*e}},{attributeName:"slow_movement_speed",label:"Enemy Movement Speed Slow",controlType:"text",fn:function(t,e,r,a,n,o){return e},returnProperty:"movementSpeedPctReduction"}],spectre_desolate:[{label:"Enemy Alone",controlType:"checkbox"},{attributeName:"bonus_damage",label:"Total Damage",controlType:"text",fn:function(t,e,r,a,n,o){return t?e:0},returnProperty:"bonusDamage"}],spectre_dispersion:[{label:"Damage Taken",controlType:"input"},{attributeName:"damage_reflection_pct",label:"DAMAGE REFLECTED:",controlType:"text",fn:function(t,e,r,a,n,o){return-e},returnProperty:"damageReduction"},{attributeName:"damage_reflection_pct",label:"DAMAGE REFLECTED:",ignoreTooltip:!0,controlType:"text",fn:function(t,e,r,a,n,o){return t*e/100}}],storm_spirit_ball_lightning:[{label:"MAX MANA",controlType:"input"},{label:"Distance",controlType:"input"},{attributeName:"ball_lightning_initial_mana_base",label:"Total Damage:",ignoreTooltip:!0,controlType:"text",controls:[0,1],fn:function(t,e,r,a,n,o){return n.getAbilityPropertyValue(o,"damage")/100*t[1]}},{attributeName:"ball_lightning_initial_mana_base",label:"FLAT MANA COST:",ignoreTooltip:!0,controlType:"method",controls:[0,1],fn:function(t,e,r,a,n,o){var l=Math.floor(t[1]/100),i=n.getAbilityAttributeValue(o.attributes,"ball_lightning_travel_cost_base",0);return e+l*i}},{attributeName:"ball_lightning_initial_mana_percentage",label:"%MAX MANA COST:",ignoreTooltip:!0,controlType:"method",controls:[0,1],fn:function(t,e,r,a,n,o){var l=Math.floor(t[1]/100),i=n.getAbilityAttributeValue(o.attributes,"ball_lightning_travel_cost_percent",0);return e+l*i}},{attributeName:"ball_lightning_initial_mana_base",label:"TOTAL MANA COST:",ignoreTooltip:!0,controlType:"text",controls:[0,1,2,3],fn:function(t,e,r,a,n,o){return t[2]+" + "+t[3]/100*t[0]+" ("+t[3]+"% of max) = "+(t[2]+t[3]/100*t[0])}}],templar_assassin_psionic_trap:[{label:"Charge Time",controlType:"input"},{attributeName:"movement_speed_min_tooltip",label:"%MOVE SLOW:",ignoreTooltip:!0,controlType:"text",fn:function(t,e,r,a,n,o){var l=n.getAbilityAttributeValue(o.attributes,"movement_speed_max_tooltip",0),i=(l-e)/40;return-(e+i*Math.min(Math.max(0,t),4)*10)},returnProperty:"movementSpeedPctReduction"}],shredder_reactive_armor:[{label:"Stacks",controlType:"input"},{attributeName:"bonus_armor",label:"Total Armor Bonus",controlType:"text",fn:function(t,e,r,a,n,o){return t*e},returnProperty:"armor"},{attributeName:"bonus_hp_regen",label:"Total HP Regen Bonus",controlType:"text",fn:function(t,e,r,a,n,o){return t*e},returnProperty:"healthregen"}],shredder_chakram:[{label:"Duration",controlType:"input"},{attributeName:"damage_per_second",label:"DAMAGE:",ignoreTooltip:!0,controlType:"text",fn:function(t,e,r,a,n,o){var l=n.getAbilityAttributeValue(o.attributes,"damage_interval",0),i=Math.floor(t/l);return e*l*i}},{attributeName:"mana_per_second",label:"MANA COST:",ignoreTooltip:!0,controlType:"text",fn:function(t,e,r,a,n,o){var l=n.getAbilityAttributeValue(o.attributes,"damage_interval",0),i=Math.floor(t/l);return e*l*i}},{label:"ENEMY %HP",controlType:"input"},{attributeName:"slow",label:"MANA COST:",controlType:"text",fn:function(t,e,r,a,n,o){var l=20-Math.floor(Math.min(Math.max(t-1,0),99)/5);return-e*l},returnProperty:"movementSpeedPctReduction"}],spirit_breaker_greater_bash:[{label:"Bash Proc",controlType:"checkbox"},{attributeName:"damage",label:"%MOVESPEED AS DAMAGE",controlType:"text",fn:function(t,e,r,a,n,o){return t?e:0},returnProperty:"bashBonusDamage"},{attributeName:"bonus_movespeed_pct",label:"Total Damage",controlType:"text",fn:function(t,e,r,a,n,o){return t?e:0},returnProperty:"movementSpeedPct"},{attributeName:"chance_pct",label:"Total Damage",controlType:"text",fn:function(t,e,r,a,n,o){return e},returnProperty:"bash"}],techies_land_mines:[{label:"Number of Mines",controlType:"input"},{attributeName:"damage",label:"Total Damage",controlType:"text",fn:function(t,e,r,a,n,o){return t*e}},{attributeName:"damage",label:"AFTER REDUCTIONS:",ignoreTooltip:!0,controlType:"text",fn:function(t,e,r,a,n,o){var l=r.enemy().totalArmorPhysicalReduction(),i=r.enemy().totalMagicResistance();return(t*e*(1-l/100)*(1-i/100)).toFixed(2)}}],techies_suicide:[{attributeName:"damage",label:"FULL DAMAGE AFTER REDUCTIONS:",ignoreTooltip:!0,controlType:"text",fn:function(t,e,r,a,n,o){var l=r.enemy().totalArmorPhysicalReduction(),i=r.enemy().totalMagicResistance();return(e*(1-l/100)*(1-i/100)).toFixed(2)}},{attributeName:"partial_damage",label:"PARTIAL DAMAGE AFTER REDUCTIONS:",ignoreTooltip:!0,controlType:"text",fn:function(t,e,r,a,n,o){var l=r.enemy().totalArmorPhysicalReduction(),i=r.enemy().totalMagicResistance();return(e*(1-l/100)*(1-i/100)).toFixed(2)}},{attributeName:"damage",label:"RESPAWN TIME:",ignoreTooltip:!0,controlType:"text",fn:function(t,e,r,a,n,o){return(r.respawnTime()/2).toFixed(0)+" seconds"}}],techies_remote_mines:[{label:"Number of Mines",controlType:"input"},{attributeName:"damage",label:"Total Damage",controlType:"text",fn:function(t,e,r,a,n,o){return t*e}},{attributeName:"damage",label:"AFTER REDUCTIONS:",ignoreTooltip:!0,controlType:"text",fn:function(t,e,r,a,n,o){var l=r.enemy().totalMagicResistance();return(t*e*(1-l/100)).toFixed(2)}}],tinker_march_of_the_machines:[{label:"Robot Explosions",controlType:"input"},{attributeName:"machines_per_sec",label:"TOTAL DAMAGE:",ignoreTooltip:!0,controlType:"text",fn:function(t,e,r,a,n,o){return n.getAbilityPropertyValue(o,"damage")*t}}],treant_leech_seed:[{label:"Pulses",controlType:"input"},{attributeName:"leech_damage",label:"DAMAGE/HEAL:",ignoreTooltip:!0,controlType:"text",fn:function(t,e,r,a,n,o){return t*e}},{attributeName:"movement_slow",label:"Total Damage",controlType:"text",fn:function(t,e,r,a,n,o){return e},returnProperty:"movementSpeedPctReduction"}],troll_warlord_fervor:[{label:"Stacks",controlType:"input"},{attributeName:"attack_speed",label:"ATTACK SPEED:",ignoreTooltip:!0,controlType:"text",fn:function(t,e,r,a,n,o){return t*e},returnProperty:"attackspeed"}],undying_decay:[{label:"Stacks",controlType:"input"},{attributeName:"str_steal",label:"STRENGTH STOLEN:",ignoreTooltip:!0,controlType:"text",fn:function(t,e,r,a,n,o){if(r.inventory.hasScepter()){var l=n.getAbilityAttributeValue(o.attributes,"str_steal_scepter",0);return t*l}return t*e},returnProperty:"bonusStrength"}],undying_soul_rip:[{label:"Units",controlType:"input"},{attributeName:"damage_per_unit",label:"DAMAGE/HEAL:",ignoreTooltip:!0,controlType:"text",fn:function(t,e,r,a,n,o){return t*e}}],undying_flesh_golem:[{label:"Distance",controlType:"input"},{attributeName:"max_speed_slow",label:"%MOVE SLOW:",ignoreTooltip:!0,controlType:"text",fn:function(t,e,r,a,n,o){var l=n.getAbilityAttributeValue(o.attributes,"min_speed_slow",0),i=n.getAbilityAttributeValue(o.attributes,"radius",0),u=n.getAbilityAttributeValue(o.attributes,"full_power_radius",0),p=Math.min(Math.max(t,u),i),c=1-(p-u)/(i-u);return-Math.max(c*e,l)},returnProperty:"movementSpeedPctReduction"},{attributeName:"max_damage_amp",label:"%DAMAGE AMP:",ignoreTooltip:!0,controlType:"text",fn:function(t,e,r,a,n,o){var l=n.getAbilityAttributeValue(o.attributes,"min_damage_amp",0),i=n.getAbilityAttributeValue(o.attributes,"radius",0),u=n.getAbilityAttributeValue(o.attributes,"full_power_radius",0),p=Math.min(Math.max(t,u),i),c=1-(p-u)/(i-u);return Math.max(c*e,l)},returnProperty:"damageAmplification"},{label:"MAX HP",controlType:"input"},{label:"Hero Death Count",controlType:"input"},{label:"Creep Death Count",controlType:"input"},{attributeName:"death_heal",label:"DEATH HEAL (HEROES):",ignoreTooltip:!0,controlType:"method",controls:[1,2],fn:function(t,e,r,a,n,o){return t[0]*t[1]*e/100}},{attributeName:"death_heal_creep",label:"DEATH HEAL (CREEPS):",ignoreTooltip:!0,controlType:"method",controls:[1,3],fn:function(t,e,r,a,n,o){return t[0]*t[1]*e/100}},{attributeName:"death_heal_creep",label:"TOTAL DEATH HEAL:",ignoreTooltip:!0,controlType:"text",controls:[4,5],fn:function(t,e,r,a,n,o){return t[0]+t[1]}}],ursa_fury_swipes:[{label:"Stacks",controlType:"input"},{attributeName:"damage_per_stack",label:"Total Damage",controlType:"text",fn:function(t,e,r,a,n,o){var l=n.abilities().find(function(t){return"ursa_enrage"==t.name});if(l.isActive()&&l.level()>0){var i=n.getAbilityAttributeValue(l.attributes,"enrage_multiplier",l.level());return t*e*i}return t*e},returnProperty:"bonusDamage"}],ursa_enrage:[{attributeName:"damage_reduction",label:"Total Damage",controlType:"text",fn:function(t,e,r,a,n,o){return-e},returnProperty:"damageReduction"}],venomancer_venomous_gale:[{label:"Duration",controlType:"input"},{attributeName:"tick_damage",label:"Total Damage",controlType:"text",fn:function(t,e,r,a,n,o){return n.getAbilityAttributeValue(o.attributes,"strike_damage",o.level())+Math.floor(t/3)*e}},{attributeName:"movement_slow",label:"Total Damage",controlType:"text",fn:function(t,e,r,a,n,o){return e},returnProperty:"movementSpeedPctReduction"}],venomancer_poison_sting:[{label:"Duration",controlType:"input"},{attributeName:"damage",label:"Total Damage",controlType:"text",fn:function(t,e,r,a,n,o){return t*e}},{attributeName:"movement_speed",label:"Total Damage",controlType:"text",fn:function(t,e,r,a,n,o){return e},returnProperty:"movementSpeedPctReduction"}],venomancer_poison_nova:[{label:"Duration",controlType:"input"},{attributeName:"damage",label:"Total Damage",controlType:"text",fn:function(t,e,r,a,n,o){return t*e}}],viper_poison_attack:[{label:"Duration",controlType:"input"},{attributeName:"damage",label:"Total Damage",controlType:"text",fn:function(t,e,r,a,n,o){return t*e}},{attributeName:"bonus_movement_speed",label:"Total Damage",controlType:"text",fn:function(t,e,r,a,n,o){return e},returnProperty:"movementSpeedPctReduction"},{attributeName:"bonus_attack_speed",label:"Total Damage",controlType:"text",fn:function(t,e,r,a,n,o){return e},returnProperty:"attackspeedreduction"}],viper_corrosive_skin:[{label:"Duration",controlType:"input"},{attributeName:"damage",label:"Total Damage",controlType:"text",fn:function(t,e,r,a,n,o){return t*e}},{attributeName:"bonus_movement_speed",label:"Total Damage",controlType:"text",fn:function(t,e,r,a,n,o){return e},returnProperty:"movementSpeedPctReduction"},{attributeName:"bonus_attack_speed",label:"Total Damage",controlType:"text",fn:function(t,e,r,a,n,o){return e},returnProperty:"attackspeedreduction"},{attributeName:"bonus_magic_resistance",label:"Total Damage",controlType:"text",fn:function(t,e,r,a,n,o){return e},returnProperty:"magicResist"}],viper_viper_strike:[{label:"Duration",controlType:"input"},{attributeName:"damage",label:"Total Damage",controlType:"text",fn:function(t,e,r,a,n,o){return t*e}},{attributeName:"bonus_movement_speed",label:"Total Damage",controlType:"text",fn:function(t,e,r,a,n,o){return e},returnProperty:"movementSpeedPctReduction"},{attributeName:"bonus_attack_speed",label:"Total Damage",controlType:"text",fn:function(t,e,r,a,n,o){return e},returnProperty:"attackspeedreduction"}],visage_soul_assumption:[{label:"Charges",controlType:"input"},{attributeName:"soul_charge_damage",label:"Total Damage:",ignoreTooltip:!0,controlType:"text",fn:function(t,e,r,a,n,o){var l=n.getAbilityAttributeValue(o.attributes,"soul_base_damage",0),i=n.getAbilityAttributeValue(o.attributes,"stack_limit",o.level());return i=Math.max(Math.min(t,i),0),l+i*e}}],visage_gravekeepers_cloak:[{label:"Layers",controlType:"input"},{attributeName:"bonus_armor",label:"ARMOR:",ignoreTooltip:!0,controlType:"text",fn:function(t,e,r,a,n,o){return t*e},returnProperty:"armor"},{attributeName:"bonus_resist",label:"%RESIST:",ignoreTooltip:!0,controlType:"text",fn:function(t,e,r,a,n,o){return t*e},returnProperty:"magicResist"}],warlock_shadow_word:[{label:"Duration",controlType:"input"},{label:"DAMAGE:",ignoreTooltip:!0,controlType:"text",fn:function(t,e,r,a,n,o){return n.getAbilityPropertyValue(o,"damage")*t}}],warlock_upheaval:[{label:"Channel Duration",controlType:"input"},{attributeName:"slow_rate_duration",label:"%MOVE SLOW:",ignoreTooltip:!0,controlType:"text",fn:function(t,e,r,a,n,o){var l=n.getAbilityAttributeValue(o.attributes,"max_slow",0),i=l/(e-.5)/2,u=Math.max(Math.floor(2*t)-1,0);return-Math.min(u*i,l)},returnProperty:"movementSpeedPctReduction"}],weaver_the_swarm:[{label:"Attacks",controlType:"input"},{attributeName:"damage",label:"DAMAGE:",controlType:"text",fn:function(t,e,r,a,n,o){return t*e}},{attributeName:"armor_reduction",label:"DAMAGE:",controlType:"text",fn:function(t,e,r,a,n,o){return-t*e},returnProperty:"armorReduction"}],windrunner_powershot:[{label:"Duration",controlType:"input"},{label:"DAMAGE:",ignoreTooltip:!0,controlType:"text",fn:function(t,e,r,a,n,o){return n.getAbilityPropertyValue(o,"damage")*t}}],winter_wyvern_cold_embrace:[{label:"Duration",controlType:"input"},{label:"Ally Max Health",controlType:"input"},{attributeName:"heal_percentage",label:"TOTAL HEAL:",ignoreTooltip:!0,controlType:"text",controls:[0,1],fn:function(t,e,r,a,n,o){var l=n.getAbilityAttributeValue(o.attributes,"heal_additive",o.level());return(l+t[1]*e/100)*t[0]}}],wisp_spirits:[{label:"Collision Count",controlType:"input"},{attributeName:"hero_damage",label:"Total Damage",controlType:"text",fn:function(t,e,r,a,n,o){return t*e}},{attributeName:"creep_damage",label:"Total Damage",controlType:"text",fn:function(t,e,r,a,n,o){return t*e}}],wisp_overcharge:[{label:"Current HP",controlType:"input"},{attributeName:"drain_pct",label:"HP DRAINED:",ignoreTooltip:!0,controlType:"text",fn:function(t,e,r,a,n,o){return t*e}},{label:"Current MP",controlType:"input"},{attributeName:"drain_pct",label:"MP DRAINED:",ignoreTooltip:!0,controlType:"text",fn:function(t,e,r,a,n,o){return t*e}},{attributeName:"bonus_attack_speed",label:"Total Damage",controlType:"text",fn:function(t,e,r,a,n,o){return e},returnProperty:"attackspeed"},{attributeName:"bonus_damage_pct",label:"Total Damage",controlType:"text",fn:function(t,e,r,a,n,o){return e},returnProperty:"damageReduction"}],witch_doctor_paralyzing_cask:[{label:"Hero Bounce Count",controlType:"input"},{attributeName:"hero_damage",label:"Total Damage",controlType:"text",fn:function(t,e,r,a,n,o){var l=n.getAbilityAttributeValue(o.attributes,"bounces",o.level());return Math.min(Math.max(t,0),l)*e}},{label:"Creep Bounce Count",controlType:"input"},{attributeName:"hero_damage",label:"CREEP DAMAGE:",ignoreTooltip:!0,controlType:"text",fn:function(t,e,r,a,n,o){var l=n.getAbilityAttributeValue(o.attributes,"bounces",o.level()),i=n.getAbilityPropertyValue(o,"damage");return Math.min(Math.max(t,0),l)*i}}],witch_doctor_voodoo_restoration:[{label:"Duration",controlType:"input"},{attributeName:"heal",label:"Total Damage",controlType:"text",fn:function(t,e,r,a,n,o){var l=n.getAbilityAttributeValue(o.attributes,"heal_interval",o.level()),i=e*l,u=Math.max(Math.floor(t/l)-1,0);return i*u}},{attributeName:"mana_per_second",label:"MANA COST:",ignoreTooltip:!0,controlType:"text",fn:function(t,e,r,a,n,o){var l=n.getAbilityAttributeValue(o.attributes,"heal_interval",o.level()),i=e*l,u=Math.max(Math.floor(t/l)-1,0);return i*u}}],witch_doctor_maledict:[{label:"damage 0-4s",controlType:"input"},{label:"damage 4-8s",controlType:"input"},{label:"damage 8-12s",controlType:"input"},{attributeName:"bonus_damage",label:"Dot Damage after 3s:",ignoreTooltip:!0,controlType:"method",fn:function(t,e,r,a,n,o){var l=n.getAbilityPropertyValue(o,"damage");return 3*l}},{attributeName:"bonus_damage",label:"Burst Damage at 4s:",ignoreTooltip:!0,controlType:"method",controls:[0,3],fn:function(t,e,r,a,n,o){var l=(n.getAbilityPropertyValue(o,"damage"),t.reduce(function(t,e){return t+e},0));return Math.max(l,0)*e/100}},{attributeName:"bonus_damage",label:"Dot Damage after 7s:",ignoreTooltip:!0,controlType:"method",fn:function(t,e,r,a,n,o){var l=n.getAbilityPropertyValue(o,"damage");return 7*l}},{attributeName:"bonus_damage",label:"Burst Damage at 8s:",ignoreTooltip:!0,controlType:"method",controls:[0,1,4,5],fn:function(t,e,r,a,n,o){var l=(n.getAbilityPropertyValue(o,"damage"),t.reduce(function(t,e){return t+e},0));return Math.max(l,0)*e/100}},{attributeName:"bonus_damage",label:"Dot Damage after 11s:",ignoreTooltip:!0,controlType:"method",fn:function(t,e,r,a,n,o){var l=n.getAbilityPropertyValue(o,"damage");return 11*l}},{attributeName:"bonus_damage",label:"Burst Damage at 12s:",ignoreTooltip:!0,controlType:"method",controls:[0,1,2,4,6,7],fn:function(t,e,r,a,n,o){var l=(n.getAbilityPropertyValue(o,"damage"),t.reduce(function(t,e){return t+e},0));return Math.max(l,0)*e/100}},{attributeName:"bonus_damage",label:"Total Burst Damage:",ignoreTooltip:!0,controlType:"method",controls:[4,6,8],fn:function(t,e,r,a,n,o){return t.reduce(function(t,e){return t+e},0)}},{attributeName:"bonus_damage",label:"Total Maledict Damage:",ignoreTooltip:!0,controlType:"method",controls:[9],fn:function(t,e,r,a,n,o){var l=n.getAbilityAttributeValue(o.attributes,"duration_tooltip",0),i=n.getAbilityPropertyValue(o,"damage");return i*l+t[0]}},{label:"Duration",controlType:"input"},{attributeName:"bonus_damage",label:"DOT Damage",controlType:"text",fn:function(t,e,r,a,n,o){var l=n.getAbilityAttributeValue(o.attributes,"duration_tooltip",0);return n.getAbilityPropertyValue(o,"damage")*Math.min(Math.max(t,0),l)}}],witch_doctor_death_ward:[{label:"Duration",controlType:"input"},{attributeName:"damage",label:"Total Damage",controlType:"text",fn:function(t,e,r,a,n,o){return t*e}}],zuus_static_field:[{label:"Enemy HP",controlType:"input"},{attributeName:"damage_health_pct",label:"DAMAGE:",ignoreTooltip:!0,controlType:"text",fn:function(t,e,r,a,n,o){return t*e/100}}]};module.exports=abilityData;
},{}],19:[function(require,module,exports){
(function (global){
"use strict";var ko="undefined"!=typeof window?window.ko:"undefined"!=typeof global?global.ko:null;ko.mapping=require("../lib/knockout.mapping"),ko.wrap=require("../lib/knockout.wrap"),ko.extenders.numeric=function(o,e){var n=ko.computed({read:o,write:function(n){var r=o(),i=Math.pow(10,e),t=isNaN(n)?0:parseFloat(+n),a=Math.round(t*i)/i;a!==r?o(a):n!==r&&o.notifySubscribers(a)}}).extend({notify:"always"});return n(o()),n},module.exports=ko;
}).call(this,typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {})

},{"../lib/knockout.mapping":39,"../lib/knockout.wrap":40}],20:[function(require,module,exports){
var illusionData={chaos_knight_phantasm:{hero:"chaos_knight",displayName:"Chaos Knight Phantasm",use_selected_hero:!1,max_level:3,outgoing_damage:"outgoing_damage",incoming_damage:"incoming_damage"},naga_siren_mirror_image:{hero:"naga_siren",displayName:"Naga Siren Mirror Image",use_selected_hero:!1,max_level:4,outgoing_damage:"outgoing_damage",incoming_damage:"incoming_damage"},dark_seer_wall_of_replica:{hero:"dark_seer",displayName:"Dark Seer Wall of Replica",use_selected_hero:!0,max_level:3,outgoing_damage:"replica_damage_outgoing",incoming_damage:"replica_damage_incoming",outgoing_damage_scepter:"replica_damage_outgoing_scepter"},morphling_replicate:{hero:"morphling",displayName:"Morphling Replicate",use_selected_hero:!0,max_level:3,outgoing_damage:"illusion_damage_out_pct",incoming_damage:"illusion_damage_in_pct"},phantom_lancer_doppelwalk:{hero:"phantom_lancer",displayName:"Phantom Lancer Doppelwalk",use_selected_hero:!1,max_level:4,outgoing_damage:"illusion_damage_out_pct",incoming_damage:"illusion_damage_in_pct"},phantom_lancer_juxtapose:{hero:"phantom_lancer",displayName:"Phantom Lancer Juxtapose",use_selected_hero:!1,max_level:4,outgoing_damage:"illusion_damage_out_pct",incoming_damage:"illusion_damage_in_pct"},phantom_lancer_spirit_lance:{hero:"phantom_lancer",displayName:"Phantom Lancer Spirit Lance",use_selected_hero:!1,max_level:4,outgoing_damage:"illusion_damage_out_pct",incoming_damage:"illusion_damage_in_pct"},shadow_demon_disruption:{hero:"shadow_demon",displayName:"Shadow Demon Disruption",use_selected_hero:!0,max_level:4,outgoing_damage:"illusion_outgoing_damage",incoming_damage:"illusion_incoming_damage"},spectre_haunt:{hero:"spectre",displayName:"Spectre Haunt",use_selected_hero:!1,max_level:3,outgoing_damage:"illusion_damage_outgoing",incoming_damage:"illusion_damage_incoming"},terrorblade_conjure_image:{hero:"terrorblade",displayName:"Terrorblade Conjure Image",use_selected_hero:!1,max_level:4,outgoing_damage:"illusion_outgoing_damage",incoming_damage:"illusion_incoming_damage"},terrorblade_reflection:{hero:"terrorblade",displayName:"Terrorblade Reflection",use_selected_hero:!0,max_level:4,outgoing_damage:"illusion_outgoing_damage"},item_manta:{hero:"",is_item:!0,displayName:"Manta Style Illusion",use_selected_hero:!0,max_level:1,outgoing_damage_melee:"images_do_damage_percent_melee",incoming_damage_melee:"images_take_damage_percent_melee",outgoing_damage_ranged:"images_do_damage_percent_ranged",incoming_damage_ranged:"images_take_damage_percent_ranged"}};module.exports=illusionData;
},{}],21:[function(require,module,exports){
var stackableItems=require("./stackableItems"),levelItems=require("./levelItems"),itemsWithActive=require("./itemsWithActive"),BasicInventoryViewModel=function(e){var t=this;t.items=ko.observableArray([]),t.activeItems=ko.observableArray([]),t.addItem=function(e,t){if(void 0!=e.selectedItem()){var i={item:e.selectedItem().split("|")[0],state:ko.observable(0),size:e.itemInputValue(),enabled:ko.observable(!0)};switch(i.item){case"dagon":i.size=Math.min(i.size,5);break;case"travel_boots":case"diffusal_blade":i.size=Math.min(i.size,2);break;case"necronomicon":i.size=Math.min(i.size,3)}this.items.push(i),"ring_of_aquila"!==e.selectedItem()&&"ring_of_basilius"!==e.selectedItem()&&"heart"!==e.selectedItem()||this.toggleItem(void 0,i,void 0)}}.bind(this),t.toggleItem=function(e,t,i){if(itemsWithActive.indexOf(t.item)>=0)switch(this.activeItems.indexOf(t)<0?this.activeItems.push(t):this.activeItems.remove(t),t.item){case"power_treads":t.state()<2?t.state(t.state()+1):t.state(0);break;default:0==t.state()?t.state(1):t.state(0)}}.bind(this),t.removeItem=function(e){this.activeItems.remove(e),this.items.remove(e)}.bind(this),t.toggleMuteItem=function(e){e.enabled(!e.enabled())}.bind(this),t.removeAll=function(){this.activeItems.removeAll(),this.items.removeAll()}.bind(this)};BasicInventoryViewModel.prototype.getItemImage=function(e){var t=ko.utils.unwrapObservable(e.state);switch(e.item){case"power_treads":return 0==t?"/media/images/items/"+e.item+"_str.png":1==t?"/media/images/items/"+e.item+"_int.png":"/media/images/items/"+e.item+"_agi.png";case"tranquil_boots":case"ring_of_basilius":return 0==t?"/media/images/items/"+e.item+".png":"/media/images/items/"+e.item+"_active.png";case"armlet":return 0==t?"/media/images/items/"+e.item+".png":"/media/images/items/"+e.item+"_active.png";case"ring_of_aquila":return 0==t?"/media/images/items/"+e.item+"_active.png":"/media/images/items/"+e.item+".png";case"dagon":case"diffusal_blade":case"travel_boots":case"necronomicon":return e.size>1?"/media/images/items/"+e.item+"_"+e.size+".png":"/media/images/items/"+e.item+".png";default:return"/media/images/items/"+e.item+".png"}},BasicInventoryViewModel.prototype.getItemSizeLabel=function(e){return stackableItems.indexOf(e.item)!=-1?'<span style="font-size:10px">Qty: </span>'+e.size:levelItems.indexOf(e.item)!=-1?'<span style="font-size:10px">Lvl: </span>'+e.size:"bloodstone"==e.item?'<span style="font-size:10px">Charges: </span>'+e.size:""},BasicInventoryViewModel.prototype.getActiveBorder=function(e){switch(e.item){case"power_treads":case"tranquil_boots":case"ring_of_basilius":case"ring_of_aquila":case"armlet":return 0;default:return ko.utils.unwrapObservable(e.state)}},BasicInventoryViewModel.prototype.getItemAttributeValue=function(e,t,i){for(var s=0;s<e.length;s++)if(e[s].name==t)return 0==i?parseFloat(e[s].value[0]):i>e[s].value.length?parseFloat(e[s].value[0]):parseFloat(e[s].value[i-1])},module.exports=BasicInventoryViewModel;
},{"./itemsWithActive":27,"./levelItems":28,"./stackableItems":29}],22:[function(require,module,exports){
"use strict";var ko=require("../herocalc_knockout"),stackableItems=require("./stackableItems"),levelItems=require("./levelItems"),itemData=require("../data/main").itemData,BasicInventoryViewModel=require("./BasicInventoryViewModel"),itemOptionsArray=require("./itemOptionsArray"),itemBuffOptions=require("./itemBuffOptions"),itemDebuffOptions=require("./itemDebuffOptions"),InventoryViewModel=function(e){var t=this;return BasicInventoryViewModel.call(this,e),t.hero=e,t.hasInventory=ko.observable(!0),t.items=ko.observableArray([]),t.activeItems=ko.observableArray([]),t.hasScepter=ko.computed(function(){for(var e=0;e<t.items().length;e++){var a=t.items()[e].item;if("ultimate_scepter"===a&&t.items()[e].enabled())return!0}return!1},this),t.isEthereal=ko.computed(function(){for(var e=0;e<t.items().length;e++){var a=t.items()[e].item,i=t.activeItems.indexOf(t.items()[e])>=0;if(("ghost"===a||"ethereal_blade"===a)&&t.items()[e].enabled()&&i)return!0}return!1},this),t.isSheeped=ko.computed(function(){for(var e=0;e<t.items().length;e++){var a=t.items()[e].item,i=t.activeItems.indexOf(t.items()[e])>=0;if("sheepstick"===a&&t.items()[e].enabled()&&i)return!0}return!1},this),t.totalCost=ko.computed(function(){for(var e=0,a=0;a<t.items().length;a++){var i=t.items()[a].item;if(t.items()[a].enabled())if(stackableItems.indexOf(i)!=-1)e+=itemData["item_"+i].itemcost*t.items()[a].size;else if(levelItems.indexOf(i)!=-1)switch(i){case"diffusal_blade":e+=itemData["item_"+i].itemcost+700*(t.items()[a].size-1);break;case"necronomicon":case"dagon":e+=itemData["item_"+i].itemcost+1250*(t.items()[a].size-1);break;default:e+=itemData["item_"+i].itemcost}else e+=itemData["item_"+i].itemcost}return e},this),t.addItemBuff=function(e,a){if(t.hasInventory()&&void 0!=t.selectedItemBuff()){var i={item:t.selectedItemBuff(),state:ko.observable(0),size:1,enabled:ko.observable(!0)};t.items.push(i),"ring_of_aquila"!==t.selectedItemBuff()&&"ring_of_basilius"!==t.selectedItemBuff()||t.toggleItem(void 0,i,void 0)}},t.addItemDebuff=function(e,a){if(t.hasInventory()&&void 0!=t.selectedItemDebuff()){var i={item:t.selectedItemDebuff().split("|")[0],state:ko.observable(0),size:1,enabled:ko.observable(!0)};2==t.selectedItemDebuff().split("|").length&&(i.debuff=t.selectedItemDebuff().split("|")[1]),t.items.push(i),"ring_of_aquila"!==t.selectedItemDebuff()&&"ring_of_basilius"!==t.selectedItemDebuff()||t.toggleItem(void 0,i,void 0)}},t.getAttributes=function(e){for(var a=0,i=0;i<t.items().length;i++){var s=t.items()[i].item,r=t.activeItems.indexOf(t.items()[i])>=0;if(t.items()[i].enabled())for(var n=t.items()[i].size,m=0;m<itemData["item_"+s].attributes.length;m++){var u=itemData["item_"+s].attributes[m];switch(u.name){case"bonus_all_stats":a+=parseInt(u.value[0]);break;case"bonus_stats":a+=parseInt(u.value[0])}switch(e){case"agi":"bonus_agility"==u.name&&(a+="diffusal_blade"==s?parseInt(u.value[n-1]):parseInt(u.value[0])),"bonus_stat"==u.name&&2==t.items()[i].state()&&(a+=parseInt(u.value[0])),"bonus_agi"==u.name&&(a+=parseInt(u.value[0]));break;case"int":"bonus_intellect"==u.name&&(a+="necronomicon"==s?parseInt(u.value[n-1]):"diffusal_blade"==s?parseInt(u.value[n-1]):"dagon"==s?parseInt(u.value[n-1]):parseInt(u.value[0])),"bonus_intelligence"==u.name&&(a+=parseInt(u.value[0])),"bonus_int"==u.name&&(a+=parseInt(u.value[0])),"bonus_stat"==u.name&&1==t.items()[i].state()&&(a+=parseInt(u.value[0]));break;case"str":"bonus_strength"==u.name&&(a+="necronomicon"==s?parseInt(u.value[n-1]):parseInt(u.value[0])),"bonus_stat"==u.name&&0==t.items()[i].state()&&(a+=parseInt(u.value[0])),"bonus_str"==u.name&&(a+=parseInt(u.value[0])),"unholy_bonus_strength"==u.name&&r&&(a+=parseInt(u.value[0]))}}}return a},t.getBash=function(e){for(var a=1,i=0;i<t.items().length;i++){var s=t.items()[i].item;if(t.items()[i].enabled())for(var r=0;r<itemData["item_"+s].attributes.length;r++){var n=itemData["item_"+s].attributes[r];switch(n.name){case"bash_chance":a*=1-parseInt(n.value[0])/100;break;case"bash_chance_melee":"DOTA_UNIT_CAP_MELEE_ATTACK"==e&&(a*=1-parseInt(n.value[0])/100);break;case"bash_chance_ranged":"DOTA_UNIT_CAP_RANGED_ATTACK"==e&&(a*=1-parseInt(n.value[0])/100)}}}return a},t.getCritChance=function(){for(var e=1,a=0;a<t.items().length;a++){var i=t.items()[a].item;t.activeItems.indexOf(t.items()[a])>=0;if(t.items()[a].enabled())for(var s=0;s<itemData["item_"+i].attributes.length;s++){var r=itemData["item_"+i].attributes[s];switch(r.name){case"crit_chance":e*=1-parseInt(r.value[0])/100}}}return e},t.getCritSource=function(){for(var e={},a=0;a<t.items().length;a++){var i=t.items()[a].item,s=t.activeItems.indexOf(t.items()[a])>=0;if(t.items()[a].enabled()){switch(i){case"lesser_crit":case"greater_crit":case"bloodthorn":void 0==e[i]?e[i]={chance:t.getItemAttributeValue(itemData["item_"+i].attributes,"crit_chance",0)/100,multiplier:t.getItemAttributeValue(itemData["item_"+i].attributes,"crit_multiplier",0)/100,count:1,displayname:itemData["item_"+i].displayname}:e[i].count+=1}"bloodthorn"===i&&s&&(void 0==e.soul_rend?e.soul_rend={chance:1,multiplier:t.getItemAttributeValue(itemData["item_"+i].attributes,"target_crit_multiplier",0)/100,count:1,displayname:"Soul Rend"}:e.soul_rend.count+=1)}}return e},t.getCleaveSource=function(){for(var e={},a=0;a<t.items().length;a++){var i=t.items()[a].item;t.activeItems.indexOf(t.items()[a])>=0;if(t.items()[a].enabled())switch(i){case"bfury":void 0==e[i]?e[i]={radius:t.getItemAttributeValue(itemData["item_"+i].attributes,"cleave_radius",0),magnitude:t.getItemAttributeValue(itemData["item_"+i].attributes,"cleave_damage_percent",0)/100,count:1,displayname:itemData["item_"+i].displayname}:e[i].count+=1}}return e},t.getBashSource=function(e){for(var a={},i=0;i<t.items().length;i++){var s=t.items()[i].item;t.activeItems.indexOf(t.items()[i])>=0;if(t.items()[i].enabled())switch(s){case"javelin":void 0==a[s]?a[s]={damage:t.getItemAttributeValue(itemData["item_"+s].attributes,"bonus_chance_damage",1),damageType:"magic",count:1,chance:t.getItemAttributeValue(itemData["item_"+s].attributes,"bonus_chance",1)/100,displayname:itemData["item_"+s].displayname+" Pierce"}:a[s].count+=1;break;case"monkey_king_bar":void 0==a[s]?a[s]={item:s,chance:t.getItemAttributeValue(itemData["item_"+s].attributes,"bash_chance",0)/100,damage:t.getItemAttributeValue(itemData["item_"+s].attributes,"bash_damage",0),duration:t.getItemAttributeValue(itemData["item_"+s].attributes,"bash_stun",0),count:1,damageType:"magic",displayname:"Mini-Bash"}:a[s].count+=1;break;case"abyssal_blade":case"basher":a.hasOwnProperty("bash")||(a.bash={item:s,chance:t.getItemAttributeValue(itemData["item_"+s].attributes,"DOTA_UNIT_CAP_MELEE_ATTACK"==e?"bash_chance_melee":"bash_chance_ranged",0)/100,damage:t.getItemAttributeValue(itemData["item_"+s].attributes,"bonus_chance_damage",0),duration:t.getItemAttributeValue(itemData["item_"+s].attributes,"bash_duration",0),count:1,damageType:"physical",displayname:"Bash"})}}return a},t.getOrbProcSource=function(){for(var e={},a=0;a<t.items().length;a++){var i=t.items()[a].item;t.activeItems.indexOf(t.items()[a])>=0;if(t.items()[a].enabled())switch(i){case"maelstrom":case"mjollnir":void 0==e[i]?e[i]={chance:t.getItemAttributeValue(itemData["item_"+i].attributes,"chain_chance",0)/100,damage:t.getItemAttributeValue(itemData["item_"+i].attributes,"chain_damage",0),count:1,damageType:"magic",displayname:itemData["item_"+i].displayname}:e[i].count+=1}}return e},t.getOrbSource=function(){for(var e={},a=0;a<t.items().length;a++){var i=t.items()[a].item;t.activeItems.indexOf(t.items()[a])>=0;if(t.items()[a].enabled())switch(i){case"diffusal_blade":void 0==e[i]?e[i]={chance:1,damage:t.getItemAttributeValue(itemData["item_"+i].attributes,"feedback_mana_burn",t.items()[a].size),count:1,damageType:"physical",displayname:itemData["item_"+i].displayname}:e[i].count+=1}}return e},t.getHealth=function(){for(var e=0,a=0;a<t.items().length;a++){var i=t.items()[a].item;if(t.items()[a].enabled())for(var s=0;s<itemData["item_"+i].attributes.length;s++){var r=itemData["item_"+i].attributes[s];switch(r.name){case"bonus_health":e+=parseInt(r.value[0])}}}return e},t.getHealthRegen=function(){for(var e=0,a=0;a<t.items().length;a++){var i=t.items()[a].item,s=t.activeItems.indexOf(t.items()[a])>=0;if(t.items()[a].enabled())for(var r=0;r<itemData["item_"+i].attributes.length;r++){var n=itemData["item_"+i].attributes[r];switch(n.name){case"health_regen":case"bonus_regen":e+=parseInt(n.value[0]);break;case"bonus_health_regen":"tranquil_boots"!=i||s?"tranquil_boots"!=i&&(e+=parseInt(n.value[0])):e+=parseInt(n.value[0]);break;case"hp_regen":e+=parseInt(n.value[0]);break;case"health_regen_rate":"heart"==i&&s&&(e+=parseInt(n.value[0])/100*t.hero.health())}}}return e},t.getHealthRegenAura=function(e){for(var a=0,i=e||[],s=0;s<t.items().length;s++){var r=t.items()[s].item;t.activeItems.indexOf(t.items()[s])>=0;if(t.items()[s].enabled())for(var n=0;n<itemData["item_"+r].attributes.length;n++){var m=itemData["item_"+r].attributes[n];if(!(i.indexOf(r+m.name)>-1))switch(m.name){case"aura_health_regen":a+=parseInt(m.value[0]),i.push(r+m.name)}}}return{value:a,excludeList:i}},t.getMana=function(){for(var e=0,a=0;a<t.items().length;a++){var i=t.items()[a].item;if(t.items()[a].enabled())for(var s=0;s<itemData["item_"+i].attributes.length;s++){var r=itemData["item_"+i].attributes[s];switch(r.name){case"bonus_mana":e+=parseInt(r.value[0])}}}return e},t.getManaRegen=function(){for(var e=0,a=0;a<t.items().length;a++){var i=t.items()[a].item;if(t.items()[a].enabled())for(var s=0;s<itemData["item_"+i].attributes.length;s++){var r=itemData["item_"+i].attributes[s];switch(r.name){case"aura_mana_regen":case"mana_regen_aura":e+=parseFloat(r.value[0]);break;case"mana_regen":"infused_raindrop"==i&&(e+=parseFloat(r.value[0]))}}}return e},t.getManaRegenPercent=function(){for(var e=0,a=0;a<t.items().length;a++){var i=t.items()[a].item;if(t.items()[a].enabled())for(var s=0;s<itemData["item_"+i].attributes.length;s++){var r=itemData["item_"+i].attributes[s];switch(r.name){case"bonus_mana_regen":case"mana_regen":case"bonus_mana_regen_pct":"infused_raindrop"!=i&&(e+=parseFloat(r.value[0]))}}}return e/100},t.getManaRegenBloodstone=function(){for(var e=0;e<t.items().length;e++){var a=t.items()[e].item;if(t.items()[e].enabled()&&a.indexOf("bloodstone")!=-1)return parseInt(t.items()[e].size)}return 0},t.getArmor=function(){for(var e=0,a=0;a<t.items().length;a++){var i=t.items()[a].item,s=t.activeItems.indexOf(t.items()[a])>=0;if(t.items()[a].enabled())for(var r=0;r<itemData["item_"+i].attributes.length;r++){var n=itemData["item_"+i].attributes[r];switch(n.name){case"bonus_armor":(!s||"medallion_of_courage"!=i&&"solar_crest"!=i)&&(e+=parseInt(n.value[0]));break;case"unholy_bonus_armor":s&&"armlet"==i&&(e+=parseInt(n.value[0]))}}}return e},t.getArmorAura=function(e){for(var a=0,i=e||[],s=0;s<t.items().length;s++){var r=t.items()[s].item,n=t.activeItems.indexOf(t.items()[s])>=0;if(t.items()[s].enabled())for(var m=0;m<itemData["item_"+r].attributes.length;m++){var u=itemData["item_"+r].attributes[m];if(!i.find(function(e){return u.name==e.name}))switch(u.name){case"bonus_aoe_armor":n&&i.push({name:u.name,value:parseInt(u.value[0])});break;case"aura_positive_armor":i.push({name:u.name,value:parseInt(u.value[0])});break;case"aura_bonus_armor":n&&i.push({name:u.name,value:parseInt(u.value[0])});break;case"armor_aura":i.push({name:u.name,value:parseInt(u.value[0])});break;case"heal_bonus_armor":n&&i.push({name:u.name,value:parseInt(u.value[0])})}}}return i.find(function(e){return"heal_bonus_armor"==e.name})&&(i=i.filter(function(e){return"bonus_aoe_armor"!==e.name})),i.find(function(e){return"armor_aura"==e.name})&&(i=i.filter(function(e){return"aura_bonus_armor"!==e.name})),a=i.reduce(function(e,t){return e+=t.value},0),{value:a,attributes:i}},t.getArmorReduction=function(e){for(var a=0,i=e||[],s=0;s<t.items().length;s++){var r=t.items()[s].item,n=t.activeItems.indexOf(t.items()[s])>=0;if(t.items()[s].enabled())for(var m=0;m<itemData["item_"+r].attributes.length;m++){var u=itemData["item_"+r].attributes[m];if(!(i.indexOf(u.name)>-1||i.indexOf(r+"_"+u.name)>-1))switch(u.name){case"armor_reduction":(n||"medallion_of_courage"!=r&&"solar_crest"!=r)&&(a+=parseInt(u.value[0]),i.push(r+"_"+u.name));break;case"aura_negative_armor":a+=parseInt(u.value[0]),i.push(u.name);break;case"corruption_armor":a+=parseInt(u.value[0]),i.push(u.name)}}}return{value:a,excludeList:i}},t.getEvasion=function(){for(var e=1,a=0;a<t.items().length;a++){var i=t.items()[a].item,s=t.activeItems.indexOf(t.items()[a])>=0;if(t.items()[a].enabled())for(var r=0;r<itemData["item_"+i].attributes.length;r++){var n=itemData["item_"+i].attributes[r];switch(n.name){case"bonus_evasion":(!s||"butterfly"!=i&&"solar_crest"!=i)&&(e*=1-parseInt(n.value[0])/100)}}}return e},t.getMovementSpeedFlat=function(){for(var e=0,a=!1,i=!1,s=!1,r=["boots","phase_boots","arcane_boots","travel_boots","power_treads","tranquil_boots","guardian_greaves"],n=0;n<t.items().length;n++){var m=t.items()[n].item,u=t.activeItems.indexOf(t.items()[n])>=0;if(t.items()[n].enabled())for(var o=0;o<itemData["item_"+m].attributes.length;o++){var l=itemData["item_"+m].attributes[o];switch(l.name){case"bonus_movement_speed":!a&&r.indexOf(m)>=0?("tranquil_boots"!=m||"tranquil_boots"==m&&!u)&&(e+=parseInt(l.value[0]),a=!0):"cyclone"==m&&(e+=parseInt(l.value[0]),i=!0);break;case"broken_movement_speed":!a&&r.indexOf(m)>=0&&"tranquil_boots"==m&&u&&(e+=parseInt(l.value[0]),a=!0);break;case"bonus_movement":!a&&r.indexOf(m)>=0&&(e+=parseInt(l.value[0]),a=!0);break;case"movement_speed":s||"wind_lace"!=m||(e+=parseInt(l.value[0]),s=!0)}}}return e},t.getMovementSpeedPercent=function(e){for(var a=0,i=e||[],s=!1,r=!1,n=!1,m=!1,u=!1,o=!1,l=!1,c=["manta","yasha","sange_and_yasha"],v=0;v<t.items().length;v++){var _=t.items()[v].item,b=t.activeItems.indexOf(t.items()[v])>=0;if(t.items()[v].enabled())for(var f=0;f<itemData["item_"+_].attributes.length;f++){var d=itemData["item_"+_].attributes[f];if(!(i.indexOf(d.name)>-1))switch(d.name){case"movement_speed_percent_bonus":!s&&c.indexOf(_)>=0&&(a+=parseInt(d.value[0]),s=!0);break;case"bonus_aura_movement_speed_pct":r||"ancient_janggo"!=_||(a+=parseInt(d.value[0]),r=!0,i.push(d.name));break;case"phase_movement_speed":b&&!m&&(a+=parseInt(d.value[0]),m=!0);break;case"bonus_movement_speed_pct":b&&!n&&"ancient_janggo"==_&&(a+=parseInt(d.value[0]),n=!0,i.push(d.name));break;case"windwalk_movement_speed":!b||u||"invis_sword"!=_&&"silver_edge"!=_||(a+=parseInt(d.value[0]),u=!0);break;case"berserk_bonus_movement_speed":b&&!l&&"mask_of_madness"==_&&(a+=parseInt(d.value[0]),l=!0);break;case"bonus_movement_speed":s||"manta"!=_?"smoke_of_deceit"==_&&b&&(a+=parseInt(d.value[0])):(a+=parseInt(d.value[0]),s=!0);break;case"bonus_move_speed":b&&!o&&"butterfly"==_&&(a+=parseInt(d.value[0]),o=!0)}}}return{value:a/100,excludeList:i}},t.getMovementSpeedPercentReduction=function(e){for(var a=0,i=e||[],s=0;s<t.items().length;s++){var r=t.items()[s].item,n=t.activeItems.indexOf(t.items()[s])>=0;if(t.items()[s].enabled())for(var m=0;m<itemData["item_"+r].attributes.length;m++){var u=itemData["item_"+r].attributes[m];if(!(i.indexOf(u.name)>-1))switch(u.name){case"movespeed":"dust"==r&&n&&(a+=parseInt(u.value[0]));case"blast_movement_speed":"shivas_guard"==r&&n&&(a+=parseInt(u.value[0]),i.push(u.name));case"cold_movement_speed":"skadi"==r&&(a+=parseInt(u.value[0]));break;case"maim_movement_speed":t.items()[s].debuff&&"maim"==t.items()[s].debuff&&(a+=parseInt(u.value[0]),i.push(u.name))}}}return{value:a/100,excludeList:i}},t.getBonusDamage=function(){for(var e=0,a={},i=0;i<t.items().length;i++){var s=t.items()[i].item,r=t.activeItems.indexOf(t.items()[i])>=0;if(t.items()[i].enabled())for(var n=0;n<itemData["item_"+s].attributes.length;n++){var m=itemData["item_"+s].attributes[n];switch(m.name){case"bonus_damage":e+=parseInt(m.value[0]),void 0==a[s]?a[s]={damage:parseInt(m.value[0]),damageType:"physical",count:1,displayname:itemData["item_"+s].displayname}:a[s].count+=1;break;case"unholy_bonus_damage":r&&(e+=parseInt(m.value[0]),void 0==a[s+"_active"]?a[s+"_active"]={damage:parseInt(m.value[0]),damageType:"physical",count:1,displayname:itemData["item_"+s].displayname+" Unholy Strength"}:a[s].count+=1)}}}return{sources:a,total:e}},t.getBonusDamagePercent=function(e){e=e||{sources:{},total:0};for(var a=e.total||0,i=e.sources||{},s=0;s<t.items().length;s++){var r=t.items()[s].item;t.activeItems.indexOf(t.items()[s])>=0;if(t.items()[s].enabled())for(var n=0;n<itemData["item_"+r].attributes.length;n++){var m=itemData["item_"+r].attributes[n];switch(m.name){case"damage_aura":void 0==i[r]&&(a+=parseInt(m.value[0])/100,i[r]={damage:parseInt(m.value[0])/100,damageType:"physical",count:1,displayname:itemData["item_"+r].displayname})}}}return{sources:i,total:a}},t.getAttackSpeed=function(e){for(var a=0,i=!1,s=e||[],r=0;r<t.items().length;r++){var n=t.items()[r].item,m=t.activeItems.indexOf(t.items()[r])>=0;if(t.items()[r].enabled())for(var u=0;u<itemData["item_"+n].attributes.length;u++){var o=itemData["item_"+n].attributes[u];if(!(s.indexOf(o.name)>-1))switch(o.name){case"bonus_attack_speed":"power_treads"==n?i||(a+=parseInt(o.value[0]),i=!0):"moon_shard"==n?m||(a+=parseInt(o.value[0])):"hurricane_pike"==n?m&&(a+=parseInt(o.value[0])):a+=parseInt(o.value[0]);break;case"consumed_bonus":"moon_shard"==n&&m&&(a+=parseInt(o.value[0]));break;case"bonus_speed":a+=parseInt(o.value[0]);break;case"aura_attack_speed":"shivas_guard"!=n&&(a+=parseInt(o.value[0]));break;case"bonus_aura_attack_speed_pct":a+=parseInt(o.value[0]),s.push(o.name);break;case"bonus_attack_speed_pct":m&&(a+=parseInt(o.value[0]),s.push(o.name));break;case"unholy_bonus_attack_speed":m&&(a+=parseInt(o.value[0]));break;case"berserk_bonus_attack_speed":m&&(a+=parseInt(o.value[0]))}}}return{value:a,excludeList:s}},t.getAttackSpeedReduction=function(e){for(var a=0,i=e||[],s=0;s<t.items().length;s++){var r=t.items()[s].item;t.activeItems.indexOf(t.items()[s])>=0;if(t.items()[s].enabled())for(var n=0;n<itemData["item_"+r].attributes.length;n++){var m=itemData["item_"+r].attributes[n];if(!(i.indexOf(m.name)>-1))switch(m.name){case"aura_attack_speed":"shivas_guard"==r&&(a+=parseInt(m.value[0]),i.push(m.name));break;case"cold_attack_speed":"skadi"==r&&(a+=parseInt(m.value[0]),i.push(m.name));break;case"maim_attack_speed":t.items()[s].debuff&&"maim"==t.items()[s].debuff&&(a+=parseInt(m.value[0]),i.push(m.name))}}}return{value:a,excludeList:i}},t.getLifesteal=function(){for(var e=0,a=0;a<t.items().length;a++){var i=t.items()[a].item,s=t.activeItems.indexOf(t.items()[a])>=0;if(t.items()[a].enabled())for(var r=0;r<itemData["item_"+i].attributes.length;r++){var n=itemData["item_"+i].attributes[r];switch(n.name){case"lifesteal_percent":if("satanic"!=i)return parseInt(n.value[0]);if(!s)return parseInt(n.value[0]);break;case"unholy_lifesteal_percent":if(s)return parseInt(n.value[0])}}}return e},t.getLifestealAura=function(e){for(var a=0,i=e||[],s=0;s<t.items().length;s++){var r=t.items()[s].item;t.activeItems.indexOf(t.items()[s])>=0;if(t.items()[s].enabled())for(var n=0;n<itemData["item_"+r].attributes.length;n++){var m=itemData["item_"+r].attributes[n];if(!(i.indexOf(m.name)>-1))switch(m.name){case"vampiric_aura":a+=parseInt(m.value[0]),i.push(m.name)}}}return{value:a,excludeList:i}},t.getMagicResist=function(){for(var e=1,a=0;a<t.items().length;a++){var i=t.items()[a].item;t.activeItems.indexOf(t.items()[a])>=0;if(t.items()[a].enabled())for(var s=0;s<itemData["item_"+i].attributes.length;s++){var r=itemData["item_"+i].attributes[s];switch(r.name){case"bonus_magical_armor":e*=1-parseInt(r.value[0])/100;break;case"bonus_spell_resist":e*=1-parseInt(r.value[0])/100;break;case"magic_resistance":e*=1-parseInt(r.value[0])/100}}}return e},t.getMagicResistReductionSelf=function(){for(var e=1,a=0;a<t.items().length;a++){var i=t.items()[a].item,s=t.activeItems.indexOf(t.items()[a])>=0;if(t.items()[a].enabled()&&s)for(var r=0;r<itemData["item_"+i].attributes.length;r++){var n=itemData["item_"+i].attributes[r];switch(n.name){case"extra_spell_damage_percent":case"ethereal_damage_bonus":return 1-parseInt(n.value[0])/100}}}return e},t.getMagicResistReduction=function(){for(var e=1,a=0;a<t.items().length;a++){var i=t.items()[a].item,s=t.activeItems.indexOf(t.items()[a])>=0;if(t.items()[a].enabled()&&s)for(var r=0;r<itemData["item_"+i].attributes.length;r++){var n=itemData["item_"+i].attributes[r];switch(n.name){case"ethereal_damage_bonus":t.isEthereal()||(e*=1-parseInt(n.value[0])/100);case"resist_debuff":e*=1-parseInt(n.value[0])/100}}}return e},t.getVisionRangeNight=ko.computed(function(){for(var e=0,a=0;a<t.items().length;a++){var i=t.items()[a].item,s=t.activeItems.indexOf(t.items()[a])>=0;if(t.items()[a].enabled())for(var r=0;r<itemData["item_"+i].attributes.length;r++){var n=itemData["item_"+i].attributes[r];switch(n.name){case"bonus_night_vision":"moon_shard"==i&&s||(e+=parseInt(n.value[0]))}}}return e}),t.getAttackRange=function(e,a){for(var i=0,s=a||[],r=0;r<t.items().length;r++){var n=t.items()[r].item;t.activeItems.indexOf(t.items()[r])>=0;if(t.items()[r].enabled())for(var m=0;m<itemData["item_"+n].attributes.length;m++){var u=itemData["item_"+n].attributes[m];if(!s.find(function(e){return u.name==e.name}))switch(u.name){case"base_attack_range":"DOTA_UNIT_CAP_RANGED_ATTACK"==e&&s.push({name:u.name,value:parseInt(u.value[0])})}}}return i=s.reduce(function(e,t){return e+=t.value},0),{value:i,attributes:s}},t.getMissChance=function(e){for(var a=1,i=e||[],s=0;s<t.items().length;s++){var r=t.items()[s].item,n=t.activeItems.indexOf(t.items()[s])>=0;if(t.items()[s].enabled())for(var m=0;m<itemData["item_"+r].attributes.length;m++){var u=itemData["item_"+r].attributes[m];if(!(i.indexOf(u.name)>-1))switch(u.name){case"miss_chance":"solar_crest"===r&&n&&(a*=1-parseInt(u.value[0])/100,i.push(u.name));break;case"blind_pct":a*=1-parseInt(u.value[0])/100,i.push(u.name)}}}return{value:a,excludeList:i}},t.getBaseDamageReductionPct=function(){for(var e=1,a=0;a<t.items().length;a++){var i=t.items()[a].item;t.activeItems.indexOf(t.items()[a])>=0;if(t.items()[a].enabled())for(var s=0;s<itemData["item_"+i].attributes.length;s++){var r=itemData["item_"+i].attributes[s];switch(r.name){case"backstab_reduction":t.items()[a].debuff&&"shadow_walk"==t.items()[a].debuff&&(e*=1+parseInt(r.value[0])/100)}}}return e},t.getBonusDamageReductionPct=function(){for(var e=1,a=0;a<t.items().length;a++){var i=t.items()[a].item;t.activeItems.indexOf(t.items()[a])>=0;if(t.items()[a].enabled())for(var s=0;s<itemData["item_"+i].attributes.length;s++){var r=itemData["item_"+i].attributes[s];switch(r.name){case"backstab_reduction":t.items()[a].debuff&&"shadow_walk"==t.items()[a].debuff&&(e*=1+parseInt(r.value[0])/100)}}}return e},t.itemOptions=ko.observableArray(itemOptionsArray),t.itemBuffOptions=ko.observableArray(itemBuffOptions),t.selectedItemBuff=ko.observable("assault"),t.itemDebuffOptions=ko.observableArray(itemDebuffOptions),t.selectedItemDebuff=ko.observable("assault"),t};InventoryViewModel.prototype=Object.create(BasicInventoryViewModel.prototype),InventoryViewModel.prototype.constructor=InventoryViewModel,module.exports=InventoryViewModel;
},{"../data/main":6,"../herocalc_knockout":19,"./BasicInventoryViewModel":21,"./itemBuffOptions":24,"./itemDebuffOptions":25,"./itemOptionsArray":26,"./levelItems":28,"./stackableItems":29}],23:[function(require,module,exports){
var itemData=require("../data/main").itemData,ItemInput=function(e,a,s){if(itemData["item_"+e].ItemAliases instanceof Array)var t=itemData["item_"+e].ItemAliases.join(" ");else var t=itemData["item_"+e].ItemAliases;this.value=ko.observable(e),this.debuff=ko.observable(s),this.debuff()?(this.value=ko.observable(e+"|"+s.id),this.name=ko.observable(a+" ("+s.name+")"),this.displayname=ko.observable(a+" ("+s.name+') <span style="display:none">;'+t+"</span>")):(this.value=ko.observable(e),this.name=ko.observable(a),this.displayname=ko.observable(a+' <span style="display:none">;'+t+"</span>"))};module.exports=ItemInput;
},{"../data/main":6}],24:[function(require,module,exports){
var ItemInput=require("./ItemInput"),itemData=require("../data/main").itemData,itemBuffs=["assault","ancient_janggo","headdress","mekansm","pipe","ring_of_aquila","vladmir","ring_of_basilius","buckler","solar_crest"],itemBuffOptions=itemBuffs.map(function(e){return new ItemInput(e,itemData["item_"+e].displayname)});module.exports=itemBuffOptions;
},{"../data/main":6,"./ItemInput":23}],25:[function(require,module,exports){
var ItemInput=require("./ItemInput"),itemData=require("../data/main").itemData,itemDebuffs=[{item:"assault",debuff:null},{item:"shivas_guard",debuff:null},{item:"desolator",debuff:null},{item:"medallion_of_courage",debuff:null},{item:"radiance",debuff:null},{item:"sheepstick",debuff:null},{item:"veil_of_discord",debuff:null},{item:"solar_crest",debuff:null},{item:"silver_edge",debuff:{id:"shadow_walk",name:"Shadow Walk"}},{item:"silver_edge",debuff:{id:"maim",name:"Lesser Maim"}}],itemDebuffOptions=itemDebuffs.map(function(e){return new ItemInput(e.item,itemData["item_"+e.item].displayname,e.debuff)});module.exports=itemDebuffOptions;
},{"../data/main":6,"./ItemInput":23}],26:[function(require,module,exports){
for(var validItems=require("./validItems"),ItemInput=require("./ItemInput"),itemData=require("../data/main").itemData,itemOptionsArr=[],i=0;i<validItems.length;i++)itemOptionsArr.push(new ItemInput(validItems[i],itemData["item_"+validItems[i]].displayname));module.exports=itemOptionsArr;
},{"../data/main":6,"./ItemInput":23,"./validItems":30}],27:[function(require,module,exports){
module.exports=["solar_crest","heart","smoke_of_deceit","dust","ghost","tranquil_boots","phase_boots","power_treads","buckler","medallion_of_courage","ancient_janggo","mekansm","pipe","veil_of_discord","rod_of_atos","orchid","sheepstick","armlet","invis_sword","ethereal_blade","shivas_guard","manta","mask_of_madness","diffusal_blade","mjollnir","satanic","ring_of_basilius","ring_of_aquila","butterfly","moon_shard","silver_edge","bloodthorn","hurricane_pike"];
},{}],28:[function(require,module,exports){
module.exports=["necronomicon","dagon","diffusal_blade","travel_boots"];
},{}],29:[function(require,module,exports){
module.exports=["clarity","flask","dust","ward_observer","ward_sentry","tango","tpscroll","smoke_of_deceit"];
},{}],30:[function(require,module,exports){
module.exports=["abyssal_blade","ultimate_scepter","courier","arcane_boots","armlet","assault","boots_of_elves","bfury","belt_of_strength","black_king_bar","blade_mail","blade_of_alacrity","blades_of_attack","blink","bloodstone","boots","travel_boots","bottle","bracer","broadsword","buckler","butterfly","chainmail","circlet","clarity","claymore","cloak","lesser_crit","greater_crit","dagon","demon_edge","desolator","diffusal_blade","rapier","ancient_janggo","dust","eagle","energy_booster","ethereal_blade","cyclone","skadi","flying_courier","force_staff","gauntlets","gem","ghost","gloves","hand_of_midas","headdress","flask","heart","heavens_halberd","helm_of_iron_will","helm_of_the_dominator","hood_of_defiance","hyperstone","branches","javelin","sphere","maelstrom","magic_stick","magic_wand","manta","mantle","mask_of_madness","medallion_of_courage","mekansm","mithril_hammer","mjollnir","monkey_king_bar","lifesteal","mystic_staff","necronomicon","null_talisman","oblivion_staff","ward_observer","ogre_axe","orb_of_venom","orchid","pers","phase_boots","pipe","platemail","point_booster","poor_mans_shield","power_treads","quarterstaff","quelling_blade","radiance","reaver","refresher","ring_of_aquila","ring_of_basilius","ring_of_health","ring_of_protection","ring_of_regen","robe","rod_of_atos","relic","sobi_mask","sange","sange_and_yasha","satanic","sheepstick","ward_sentry","shadow_amulet","invis_sword","shivas_guard","basher","slippers","smoke_of_deceit","soul_booster","soul_ring","staff_of_wizardry","stout_shield","talisman_of_evasion","tango","tpscroll","tranquil_boots","ultimate_orb","urn_of_shadows","vanguard","veil_of_discord","vitality_booster","vladmir","void_stone","wraith_band","yasha","crimson_guard","enchanted_mango","lotus_orb","glimmer_cape","guardian_greaves","moon_shard","silver_edge","solar_crest","octarine_core","aether_lens","faerie_fire","iron_talon","dragon_lance","echo_sabre","infused_raindrop","blight_stone","wind_lace","tome_of_knowledge","bloodthorn","hurricane_pike"];
},{}],31:[function(require,module,exports){
"use strict";var core={};core.InventoryViewModel=require("./inventory/InventoryViewModel"),core.AbilityModel=require("./AbilityModel"),core.BuffViewModel=require("./BuffViewModel"),core.HeroModel=require("./hero/HeroModel"),core.CloneModel=require("./hero/CloneModel"),core.UnitModel=require("./hero/UnitModel"),core.IllusionModel=require("./hero/IllusionModel"),core.HeroOptions=require("./hero/heroOptionsArray"),core.Data=require("./data/main"),core.Util=require("./util/main"),module.exports=core;
},{"./AbilityModel":1,"./BuffViewModel":2,"./data/main":6,"./hero/CloneModel":7,"./hero/HeroModel":10,"./hero/IllusionModel":12,"./hero/UnitModel":13,"./hero/heroOptionsArray":15,"./inventory/InventoryViewModel":22,"./util/main":35}],32:[function(require,module,exports){
var extend=function(e){e=e||{};for(var r=1;r<arguments.length;r++){var t=arguments[r];if(t)for(var n in t)t.hasOwnProperty(n)&&("object"==typeof t[n]?e[n]=extend(e[n],t[n]):e[n]=t[n])}return e};module.exports=extend;
},{}],33:[function(require,module,exports){
var findWhere=function(r,e){r:for(var n=0;n<r.length;n++){for(var f in e)if(r[n][f]!=e[f])continue r;return r[n]}};module.exports=findWhere;
},{}],34:[function(require,module,exports){
"use strict";var getJSON=function(e,t,s){var n=new XMLHttpRequest;n.open("GET",e,!0),n.onload=function(){if(n.status>=200&&n.status<400){var e=JSON.parse(n.responseText);t(e)}else s()},n.onerror=function(){s()},n.send()};module.exports=getJSON;
},{}],35:[function(require,module,exports){
"use strict";var util={};util.extend=require("./extend"),util.findWhere=require("./findWhere"),util.getJSON=require("./getJSON"),util.union=require("./union"),util.uniqueId=require("./uniqueId"),util.uniques=require("./uniques"),module.exports=util;
},{"./extend":32,"./findWhere":33,"./getJSON":34,"./union":36,"./uniqueId":37,"./uniques":38}],36:[function(require,module,exports){
"use strict";var uniques=require("./uniques"),union=function(u,n){var e=u.concat(n);return uniques(e)};module.exports=union;
},{"./uniques":38}],37:[function(require,module,exports){
"use strict";var idCounter=0,uniqueId=function(u){var e=++idCounter+"";return u?u+e:e};module.exports=uniqueId;
},{}],38:[function(require,module,exports){
"use strict";var uniques=function(u){for(var e=[],n=0,r=u.length;n<r;n++)e.indexOf(u[n])===-1&&""!==u[n]&&e.push(u[n]);return e};module.exports=uniques;
},{}],39:[function(require,module,exports){
(function (global){
!function(e){"function"==typeof require&&"object"==typeof exports&&"object"==typeof module?e("undefined"!=typeof window?window.ko:"undefined"!=typeof global?global.ko:null,exports):"function"==typeof define&&define.amd?define(["knockout","exports"],e):e(ko,ko.mapping={})}(function(e,r){function t(e,r){for(var t={},n=e.length-1;n>=0;--n)t[e[n]]=e[n];for(var n=r.length-1;n>=0;--n)t[r[n]]=r[n];var a=[];for(var i in t)a.push(t[i]);return a}function n(e,a){var i;for(var o in a)if(a.hasOwnProperty(o)&&a[o])if(i=r.getType(e[o]),o&&e[o]&&"array"!==i&&"string"!==i)n(e[o],a[o]);else{var u="array"===r.getType(e[o])&&"array"===r.getType(a[o]);u?e[o]=t(e[o],a[o]):e[o]=a[o]}}function a(e,r){var t={};return n(t,e),n(t,r),t}function i(e,r){for(var t=a({},e),n=x.length-1;n>=0;n--){var i=x[n];t[i]&&(t[""]instanceof Object||(t[""]={}),t[""][i]=t[i],delete t[i])}return r&&(t.ignore=o(r.ignore,t.ignore),t.include=o(r.include,t.include),t.copy=o(r.copy,t.copy),t.observe=o(r.observe,t.observe)),t.ignore=o(t.ignore,J.ignore),t.include=o(t.include,J.include),t.copy=o(t.copy,J.copy),t.observe=o(t.observe,J.observe),t.mappedProperties=t.mappedProperties||{},t.copiedProperties=t.copiedProperties||{},t}function o(t,n){return"array"!==r.getType(t)&&(t="undefined"===r.getType(t)?[]:[t]),"array"!==r.getType(n)&&(n="undefined"===r.getType(n)?[]:[n]),e.utils.arrayGetDistinctValues(t.concat(n))}function u(r,t){var n=e.dependentObservable;e.dependentObservable=function(t,n,a){a=a||{},t&&"object"==typeof t&&(a=t);var i=a.deferEvaluation,o=!1,u=function(t){var n=e.dependentObservable;e.dependentObservable=k;var a=e.isWriteableObservable(t);e.dependentObservable=n;var i=k({read:function(){return o||(e.utils.arrayRemoveItem(r,t),o=!0),t.apply(t,arguments)},write:a&&function(e){return t(e)},deferEvaluation:!0});return w&&(i._wrapper=!0),i.__DO=t,i};a.deferEvaluation=!0;var s=new k(t,n,a);return i||(s=u(s),r.push(s)),s},e.dependentObservable.fn=k.fn,e.computed=e.dependentObservable;var a=t();return e.dependentObservable=n,e.computed=e.dependentObservable,a}function s(t,n,i,o,f,b,y){var g="array"===r.getType(e.utils.unwrapObservable(n));if(b=b||"",r.isMapped(t)){var w=e.utils.unwrapObservable(t)[m];i=a(w,i)}var k={data:n,parent:y||f},T=function(){return i[o]&&i[o].create instanceof Function},x=function(r){return u(O,function(){return e.utils.unwrapObservable(f)instanceof Array?i[o].create({data:r||k.data,parent:k.parent,skip:j}):i[o].create({data:r||k.data,parent:k.parent})})},I=function(){return i[o]&&i[o].update instanceof Function},J=function(r,t){var n={data:t||k.data,parent:k.parent,target:e.utils.unwrapObservable(r)};return e.isWriteableObservable(r)&&(n.observable=r),i[o].update(n)},E=h.get(n);if(E)return E;if(o=o||"",g){var P=[],S=!1,_=function(e){return e};i[o]&&i[o].key&&(_=i[o].key,S=!0),e.isObservable(t)||(t=e.observableArray([]),t.mappedRemove=function(e){var r="function"==typeof e?e:function(r){return r===_(e)};return t.remove(function(e){return r(_(e))})},t.mappedRemoveAll=function(r){var n=v(r,_);return t.remove(function(r){return e.utils.arrayIndexOf(n,_(r))!=-1})},t.mappedDestroy=function(e){var r="function"==typeof e?e:function(r){return r===_(e)};return t.destroy(function(e){return r(_(e))})},t.mappedDestroyAll=function(r){var n=v(r,_);return t.destroy(function(r){return e.utils.arrayIndexOf(n,_(r))!=-1})},t.mappedIndexOf=function(r){var n=v(t(),_),a=_(r);return e.utils.arrayIndexOf(n,a)},t.mappedGet=function(e){return t()[t.mappedIndexOf(e)]},t.mappedCreate=function(r){if(t.mappedIndexOf(r)!==-1)throw new Error("There already is an object with the key that you specified.");var n=T()?x(r):r;if(I()){var a=J(n,r);e.isWriteableObservable(n)?n(a):n=a}return t.push(n),n});var N=v(e.utils.unwrapObservable(t),_).sort(),W=v(n,_);S&&W.sort();var D,F,A=e.utils.compareArrays(N,W),M={},C=e.utils.unwrapObservable(n),R={},$=!0;for(D=0,F=C.length;D<F;D++){var G=_(C[D]);if(void 0===G||G instanceof Object){$=!1;break}R[G]=C[D]}var q=[],V=0;for(D=0,F=A.length;D<F;D++){var z,G=A[D],B=b+"["+D+"]";switch(G.status){case"added":var H=$?R[G.value]:l(e.utils.unwrapObservable(n),G.value,_);z=s(void 0,H,i,o,t,B,f),T()||(z=e.utils.unwrapObservable(z));var K=p(e.utils.unwrapObservable(n),H,M);z===j?V++:q[K-V]=z,M[K]=!0;break;case"retained":var H=$?R[G.value]:l(e.utils.unwrapObservable(n),G.value,_);z=l(t,G.value,_),s(z,H,i,o,t,B,f);var K=p(e.utils.unwrapObservable(n),H,M);q[K]=z,M[K]=!0;break;case"deleted":z=l(t,G.value,_)}P.push({event:G.status,item:z})}t(q),i[o]&&i[o].arrayChanged&&e.utils.arrayForEach(P,function(e){i[o].arrayChanged(e.event,e.item)})}else if(d(n)){if(t=e.utils.unwrapObservable(t),!t){if(T()){var L=x();return I()&&(L=J(L)),L}if(I())return J(L);t={}}if(I()&&(t=J(t)),h.save(n,t),I())return t;c(n,function(r){var a=b.length?b+"."+r:r;if(e.utils.arrayIndexOf(i.ignore,a)==-1){if(e.utils.arrayIndexOf(i.copy,a)!=-1)return void(t[r]=n[r]);if("object"!=typeof n[r]&&"array"!=typeof n[r]&&i.observe.length>0&&e.utils.arrayIndexOf(i.observe,a)==-1)return t[r]=n[r],void(i.copiedProperties[a]=!0);var o=h.get(n[r]),u=s(t[r],n[r],i,r,t,a,t),p=o||u;if(i.observe.length>0&&e.utils.arrayIndexOf(i.observe,a)==-1)return t[r]=p(),void(i.copiedProperties[a]=!0);e.isWriteableObservable(t[r])?(p=e.utils.unwrapObservable(p),t[r]()!==p&&t[r](p)):(p=void 0===t[r]?p:e.utils.unwrapObservable(p),t[r]=p),i.mappedProperties[a]=!0}})}else switch(r.getType(n)){case"function":I()?e.isWriteableObservable(n)?(n(J(n)),t=n):t=J(n):t=n;break;default:if(e.isWriteableObservable(t)){if(I()){var Q=J(t);return t(Q),Q}var Q=e.utils.unwrapObservable(n);return t(Q),Q}var U=T()||I();if(t=T()?x():e.observable(e.utils.unwrapObservable(n)),I()&&t(J(t)),U)return t}return t}function p(e,r,t){for(var n=0,a=e.length;n<a;n++)if(t[n]!==!0&&e[n]===r)return n;return null}function f(t,n){var a;return n&&(a=n(t)),"undefined"===r.getType(a)&&(a=t),e.utils.unwrapObservable(a)}function l(r,t,n){r=e.utils.unwrapObservable(r);for(var a=0,i=r.length;a<i;a++){var o=r[a];if(f(o,n)===t)return o}throw new Error("When calling ko.update*, the key '"+t+"' was not found!")}function v(r,t){return e.utils.arrayMap(e.utils.unwrapObservable(r),function(e){return t?f(e,t):e})}function c(e,t){if("array"===r.getType(e))for(var n=0;n<e.length;n++)t(n);else for(var a in e)t(a)}function d(e){var t=r.getType(e);return("object"===t||"array"===t)&&null!==e}function b(e,t,n){var a=e||"";return"array"===r.getType(t)?e&&(a+="["+n+"]"):(e&&(a+="."),a+=n),a}function y(){var r=[],t=[];this.save=function(n,a){var i=e.utils.arrayIndexOf(r,n);i>=0?t[i]=a:(r.push(n),t.push(a))},this.get=function(n){var a=e.utils.arrayIndexOf(r,n),i=a>=0?t[a]:void 0;return i}}function g(){var e={},r=function(r){var t;try{t=r}catch(e){t="$$$"}var n=e[t];return void 0===n&&(n=new y,e[t]=n),n};this.save=function(e,t){r(e).save(e,t)},this.get=function(e){return r(e).get(e)}}var O,h,w=!0,m="__ko_mapping__",k=e.dependentObservable,T=0,x=["create","update","key","arrayChanged"],j={},I={include:["_destroy"],ignore:[],copy:[],observe:[]},J=I;r.isMapped=function(r){var t=e.utils.unwrapObservable(r);return t&&t[m]},r.fromJS=function(e){if(0==arguments.length)throw new Error("When calling ko.fromJS, pass the object you want to convert.");try{T++||(O=[],h=new g);var r,t;2==arguments.length&&(arguments[1][m]?t=arguments[1]:r=arguments[1]),3==arguments.length&&(r=arguments[1],t=arguments[2]),t&&(r=a(r,t[m])),r=i(r);var n=s(t,e,r);if(t&&(n=t),!--T)for(;O.length;){var o=O.pop();o&&(o(),o.__DO.throttleEvaluation=o.throttleEvaluation)}return n[m]=a(n[m],r),n}catch(e){throw T=0,e}},r.fromJSON=function(t){var n=e.utils.parseJson(t);return arguments[0]=n,r.fromJS.apply(this,arguments)},r.updateFromJS=function(e){throw new Error("ko.mapping.updateFromJS, use ko.mapping.fromJS instead. Please note that the order of parameters is different!")},r.updateFromJSON=function(e){throw new Error("ko.mapping.updateFromJSON, use ko.mapping.fromJSON instead. Please note that the order of parameters is different!")},r.toJS=function(t,n){if(J||r.resetDefaultOptions(),0==arguments.length)throw new Error("When calling ko.mapping.toJS, pass the object you want to convert.");if("array"!==r.getType(J.ignore))throw new Error("ko.mapping.defaultOptions().ignore should be an array.");if("array"!==r.getType(J.include))throw new Error("ko.mapping.defaultOptions().include should be an array.");if("array"!==r.getType(J.copy))throw new Error("ko.mapping.defaultOptions().copy should be an array.");return n=i(n,t[m]),r.visitModel(t,function(r){return e.utils.unwrapObservable(r)},n)},r.toJSON=function(t,n){var a=r.toJS(t,n);return e.utils.stringifyJson(a)},r.defaultOptions=function(){return arguments.length>0?void(J=arguments[0]):J},r.resetDefaultOptions=function(){J={include:I.include.slice(0),ignore:I.ignore.slice(0),copy:I.copy.slice(0)}},r.getType=function(e){if(e&&"object"==typeof e){if(e.constructor===Date)return"date";if(e.constructor===Array)return"array"}return typeof e},r.visitModel=function(t,n,a){a=a||{},a.visitedObjects=a.visitedObjects||new g;var o,u=e.utils.unwrapObservable(t);if(!d(u))return n(t,a.parentName);a=i(a,u[m]),n(t,a.parentName),o="array"===r.getType(u)?[]:{},a.visitedObjects.save(t,o);var s=a.parentName;return c(u,function(t){if(!a.ignore||e.utils.arrayIndexOf(a.ignore,t)==-1){var i=u[t];if(a.parentName=b(s,u,t),e.utils.arrayIndexOf(a.copy,t)!==-1||e.utils.arrayIndexOf(a.include,t)!==-1||!u[m]||!u[m].mappedProperties||u[m].mappedProperties[t]||!u[m].copiedProperties||u[m].copiedProperties[t]||"array"===r.getType(u)){switch(r.getType(e.utils.unwrapObservable(i))){case"object":case"array":case"undefined":var p=a.visitedObjects.get(i);o[t]="undefined"!==r.getType(p)?p:r.visitModel(i,n,a);break;default:o[t]=n(i,a.parentName)}}}}),o}});
}).call(this,typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {})

},{}],40:[function(require,module,exports){
(function (global){
!function(r){"function"==typeof require&&"object"==typeof exports&&"object"==typeof module?r("undefined"!=typeof window?window.ko:"undefined"!=typeof global?global.ko:null,exports):"function"==typeof define&&define.amd?define(["knockout","exports"],r):r(ko,ko.wrap={})}(function(r,n){function t(r){var n=typeof r;return"object"===n&&(r?r.constructor==Date?n="date":"[object Array]"==Object.prototype.toString.call(r)&&(n="array"):n="null"),n}function e(n){var t={};for(var e in n){var o=n[e];r.isComputed(o)||(t[e]=u(o))}return t}function o(r){var n=[];if(!r||0==r.length)return n;for(var t=0,e=r.length;t<e;++t)n.push(u(r[t]));return n}function u(n){var f=r.isObservable(n);if(f){var a=n();return u(a)}return"array"==t(n)?o(n):"object"==t(n)?e(n):n}function f(){v=[{obj:null,wrapped:null,lvl:""}]}function a(n,t){for(var e=0;e<v.length;++e)if(v[e].obj===n)return v[e].wrapped;var o={};for(var u in n){var f=n[u];v.push({obj:n,wrapped:o,lvl:l()+"/"+u}),o[u]=c(f,t),v.pop()}return t&&t[l()]&&(o=t[l()](o)),p()&&r.track(o),o}function i(n,t){var e=r.observableArray();if(!n||0==n.length)return e;for(var o=0,u=n.length;o<u;++o)e.push(c(n[o],t));return e}function l(){return v[v.length-1].lvl}function c(n,e){if("array"==t(n))return i(n,e);if("object"==t(n))return a(n,e);if(p()||"function"==typeof n)return n;var o=r.observable();return o(n),o}function p(){return null!=r.track}n.fromJS=function(r,n){return f(),c(r,n)},n.updateFromJS=function(n,t,e){return f(),n(r.utils.unwrapObservable(c(t,e)))},n.fromJSON=function(t,e){var o=r.utils.parseJson(t);return arguments[0]=o,n.fromJS.apply(this,e)},n.toJS=function(r){return u(r)},n.toJSON=function(t){var e=n.toJS(t);return r.utils.stringifyJson(e)};var v});
}).call(this,typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {})

},{}]},{},[31])(31)
});


//# sourceMappingURL=herocalc.min.js.map