{"version":3,"sources":["node_modules/browser-pack/_prelude.js","src/herocalc/AbilityModel.js","src/herocalc/BuffViewModel.js","src/herocalc/buffs/BuffModel.js","src/herocalc/buffs/buffOptionsArray.js","src/herocalc/buffs/debuffOptionsArray.js","src/herocalc/data/main.js","src/herocalc/hero/CloneModel.js","src/herocalc/hero/DamageTypeColor.js","src/herocalc/hero/HeroDamageMixin.js","src/herocalc/hero/HeroModel.js","src/herocalc/hero/HeroOption.js","src/herocalc/hero/IllusionModel.js","src/herocalc/hero/UnitModel.js","src/herocalc/hero/diffProperties.js","src/herocalc/hero/heroOptionsArray.js","src/herocalc/hero/nextLevelExp.js","src/herocalc/hero/totalExp.js","src/herocalc/herocalc_abilitydata.js","src/herocalc/herocalc_knockout.js","src/herocalc/illusion/illusionData.js","src/herocalc/inventory/BasicInventoryViewModel.js","src/herocalc/inventory/InventoryViewModel.js","src/herocalc/inventory/ItemInput.js","src/herocalc/inventory/itemBuffOptions.js","src/herocalc/inventory/itemDebuffOptions.js","src/herocalc/inventory/itemOptionsArray.js","src/herocalc/inventory/itemsWithActive.js","src/herocalc/inventory/levelItems.js","src/herocalc/inventory/stackableItems.js","src/herocalc/inventory/validItems.js","src/herocalc/main.js","src/herocalc/util/extend.js","src/herocalc/util/findWhere.js","src/herocalc/util/getJSON.js","src/herocalc/util/isEmpty.js","src/herocalc/util/main.js","src/herocalc/util/union.js","src/herocalc/util/uniqueId.js","src/herocalc/util/uniques.js","src/lib/knockout.mapping.js","src/lib/knockout.wrap.js"],"names":["ko","require","abilityData","AbilityModel","a","h","self","this","hero","hasScepter","observable","isShapeShiftActive","abilities","_abilities","i","length","level","isActive","isDetail","baseDamage","baseDamageReductionPct","baseDamageMultiplier","bash","bashBonusDamage","bonusDamage","bonusDamageOrb","bonusDamagePct","bonusDamagePrecisionAura","bonusDamageReduction","bonusHealth","bonusStrength","bonusStrength2","bonusAgility","bonusAgility2","bonusInt","bonusAllStatsReduction","damageAmplification","damageReduction","evasion","magicResist","manaregen","manaregenreduction","missChance","movementSpeedFlat","movementSpeedPct","movementSpeedPctReduction","turnRateReduction","attackrange","attackspeed","attackspeedreduction","armor","armorReduction","healthregen","lifesteal","visionnight","visionday","abilityControlData","abilitySettingsData","data","parent","index","undefined","processAbility","args","result","v","v_list","controlType","extend","numeric","controlValueType","push","labelName","label","toUpperCase","controlVal","display","controlOptions","value","controls","noLevel","attributeValue","attributeName","fn","computed","_ability","find","b","name","getAbilityAttributeValue","attributes","g","r","getComputedFunction","returnProperty","ignoreTooltip","tooltip","getAbilityAttributeTooltip","clean","abilityModel","abilityName","pureComputed","inputValue","parseFloat","returnVal","call","getAbilityLevelByAbilityName","getAbilityByName","getAbilityPropertyValue","ability","property","getAttributeBonusLevel","getAllStatsReduction","totalAttribute","behavior","indexOf","j","getStrengthReduction","getStrength","getAgility","attribute","getIntelligence","getArmor","getArmorBaseReduction","getArmorReduction","getHealth","isTrueFormActive","getHealthRegen","getMana","getManaRegen","getManaRegenArcaneAura","getManaRegenReduction","getAttackRange","getAttackSpeed","getAttackSpeedReduction","getBash","getBaseDamage","totalMultiplier","sources","damage","damageType","displayname","total","multiplier","getSelfBaseDamageReductionPct","getBaseDamageReductionPct","getBAT","getBonusDamage","getBonusDamagePercent","heroId","getBonusDamageBackstab","totalAttribute1","totalAttribute2","getBonusDamagePrecisionAura","getBonusDamageReduction","getBonusDamageReductionPct","getDamageAmplification","getDamageReduction","getCritSource","chance","count","getCleaveSource","radius","magnitude","getCritChance","getEvasion","getEvasionBacktrack","getMissChance","getLifesteal","getMagicResist","getMagicResistReduction","getMovementSpeedFlat","getMovementSpeedPercent","getMovementSpeedPercentReduction","getTurnRateReduction","getVisionRangeNight","getVisionRangePctReduction","setEvasion","setMovementSpeed","MAX_MOVESPEED","MIN_MOVESPEED","getBashSource","attacktype","getOrbSource","totalInt","toggleAbility","event","bind","toggleAbilityDetail","getAbility","prototype","levelUpAbility","getAbilityLevelMax","availableSkillPoints","abilitytype","parseInt","selectedHeroLevel","skillPointHistory","levelDownAbility","utils","unwrapObservable","splice","lastIndexOf","hasOwnProperty","d","replace","module","exports","InventoryViewModel","findWhere","buffOptionsArray","debuffOptionsArray","BuffViewModel","itemData","observableArray","availableBuffs","items","availableDebuffs","selectedBuff","buffs","itemBuffs","addBuff","buffName","JSON","parse","stringify","removeBuff","remove","dispose","toggleBuff","toggleBuffDetail","Object","create","constructor","BuffModel","heroData","unitData","buffDisplayName","init","HeroCalcData","window","global","getJSON","isEmpty","out","arguments","key","resourceCounter","onResourceLoaded","callback","fixHeroData","HERODATA_PATH","ITEMDATA_PATH","UNITDATA_PATH","console","log","HeroModel","CloneModel","p","DamageTypeColor","physical","pure","magic","default","HeroDamageMixin","critInfo","compareByMultiplier","critSources","inventory","critSourcesArray","prop","el","sort","critTotal","k","total2","totalChance","cleaveInfo","compareByRadius","cleaveSources","cleaveSourcesArray","cleaveSourcesByRadius","bashInfo","bashSources","bashSourcesArray","bashTotal","totalMovementSpeed","orbProcInfo","compareByDamage","priority","damageSources","getOrbProcSource","damageSourcesArray","damageTotal","getReducedDamage","type","enemy","totalArmorPhysical","Math","abs","totalMagicResistance","debuffs","damageTotalInfo","bonusDamageArray","bonusDamagePctArray","itemBonusDamage","itemBonusDamagePct","abilityOrbSources","itemOrbSources","itemProcOrbSources","attackSources","cooldown","cd","item","o","enabled","item_echo_sabre","attacks","map","totalDamage","totalCritableDamage","totalCrit","geminateAttack","damageReduced","active","crits","s","totalAgi","attacksPerSecond","max","dps","dpsReduced","pow","orb","keys","toFixed","totalReduced","totalCritReduced","base","crit","reduced","forEach","totalCritChance","reduce","memo","t1Crit","c","t2Crit","t3Crit","filter","t4Crit","t1","t2","t3","t4","totalCritRow","totalRow","visible","sourcesCrit","totalGeminateAttack","totalGeminateAttackReduced","sumTotal","sumTotalReduced","getDamageTypeColor","diffProperties","totalExp","nextLevelExp","selectedInventory","heroCompare","unit","clone","removeAll","primaryAttribute","attributeprimary","startingArmor","attributebaseagility","armorphysical","respawnTime","totalStr","attributeagilitygain","getAttributes","intStolen","attributebaseintelligence","attributeintelligencegain","attributebasestrength","attributestrengthgain","health","statushealth","floor","healthRegenAura","getHealthRegenAura","obj","excludeList","statushealthregen","mana","statusmana","statusmanaregen","getManaRegenPercent","getManaRegenBloodstone","armorAura","getArmorAura","totalArmorPhysicalReduction","totalArmor","ms","movementSpeedPercent","movementSpeedPercentReduction","isSheeped","movementspeed","totalTurnRate","movementturnrate","abilityBaseDamage","minDamage","attackdamagemin","maxDamage","attackdamagemax","baseDamageAvg","baseDamageMin","baseDamageMax","damageAvg","damageMin","damageMax","totalMagicResistanceProduct","magicalresistance","getMagicResistReductionSelf","bat","abilityBAT","attackrate","ias","attackSpeed","attackSpeedReduction","val","attackTime","e","ehpPhysical","ehp","activeItems","some","ehpMagical","critChance","missDebuff","totalattackrange","visionrangeday","visionrangenight","visionnighttimerange","lifestealAura","getLifestealAura","diff","getDiffFunction","deferEvaluation","HeroOption","heroName","heroDisplayName","illusionData","IllusionModel","abilityLevel","illusionAbilityLevel","abilityObj","getIncomingDamageMultiplier","illusionType","attackType","incoming_damage_melee","incoming_damage_ranged","incoming_damage","getOutgoingDamageMultiplier","outgoing_damage_melee","outgoing_damage_ranged","outgoing_damage","UnitModel","unitId","unitLevel","subscribe","newValue","heroOptionsArray","alchemist_acid_spray","alchemist_unstable_concoction","ancient_apparition_cold_feet","ancient_apparition_ice_blast","antimage_mana_void","axe_battle_hunger","bane_nightmare","bane_fiends_grip","batrider_sticky_napalm","batrider_firefly","bloodseeker_rupture","bristleback_viscous_nasal_goo","bristleback_quill_spray","damage_cap","bristleback_bristleback","text","bristleback_warpath","centaur_return","centaur_stampede","clinkz_death_pact","crystal_maiden_frostbite","dark_seer_ion_shell","dazzle_shadow_wave","dazzle_weave","death_prophet_exorcism","disruptor_static_storm","damagevalue","mult","doom_bringer_scorched_earth","doom_bringer_doom","dragon_knight_elder_dragon_form","drow_ranger_trueshot","earth_spirit_rolling_boulder","earthshaker_enchant_totem","earthshaker_echo_slam","elder_titan_ancestral_spirit","elder_titan_earth_splitter","enchantress_natures_attendants","enigma_malefice","enigma_midnight_pulse","enigma_black_hole","faceless_void_time_lock","gyrocopter_rocket_barrage","huskar_burning_spear","huskar_berserkers_blood","min","hp_threshold_max","huskar_life_break","invoker_quas","invoker_wex","invoker_exort","invoker_ghost_walk","invoker_alacrity","invoker_ice_wall","jakiro_dual_breath","jakiro_liquid_fire","jakiro_macropyre","juggernaut_blade_fury","juggernaut_healing_ward","juggernaut_omni_slash","keeper_of_the_light_illuminate","keeper_of_the_light_mana_leak","legion_commander_duel","leshrac_pulse_nova","lich_chain_frost","life_stealer_feast","life_stealer_open_wounds","lina_fiery_soul","lion_mana_drain","luna_moon_glaive","join","luna_eclipse","lucentBeamAbility","medusa_mystic_snake","snake_jumps","snake_scale","slice","medusa_mana_shield","meepo_poof","meepo_geostrike","mirana_arrow","arrow_min_stun","arrow_max_stunrange","scale","bonus_damage","morphling_morph_agi","morphling_morph_str","furion_wrath_of_nature","necrolyte_heartstopper_aura","necrolyte_sadist","hero_multiplier","night_stalker_crippling_fear","night_stalker_hunter_in_the_night","obsidian_destroyer_arcane_orb","ogre_magi_ignite","pudge_rot","pudge_flesh_heap","pudge_dismember","pugna_nether_ward","pugna_life_drain","queenofpain_shadow_strike","duration_damage","ticks","razor_plasma_field","max_radius","damage_min","damage_max","razor_static_link","tick_duration","drain_rate","razor_eye_of_the_storm","rubick_fade_bolt","sandking_sand_storm","sandking_epicenter","shadow_demon_shadow_poison","stackmult","nevermore_necromastery","nevermore_requiem","shadow_shaman_shackles","silencer_curse_of_the_silent","skywrath_mage_mystic_flare","slark_essence_shift","slark_shadow_dance","sniper_shrapnel","spectre_desolate","spectre_dispersion","storm_spirit_ball_lightning","distance_intervals","travel_cost_base","travel_cost_percent","templar_assassin_psionic_trap","max_slow","slow_per_tick","shredder_reactive_armor","shredder_chakram","interval","spirit_breaker_greater_bash","techies_land_mines","phys_reduction","magic_reduction","techies_suicide","techies_remote_mines","tinker_march_of_the_machines","treant_leech_seed","troll_warlord_fervor","undying_decay","str_steal_scepter","undying_soul_rip","undying_flesh_golem","min_speed_slow","full_power_radius","distance","min_damage_amp","ursa_fury_swipes","enrageAbility","enrage_multiplier","ursa_enrage","venomancer_venomous_gale","venomancer_poison_sting","venomancer_poison_nova","viper_poison_attack","viper_corrosive_skin","viper_viper_strike","visage_soul_assumption","soul_base_damage","stack_limit","visage_gravekeepers_cloak","warlock_shadow_word","warlock_upheaval","weaver_the_swarm","windrunner_powershot","winter_wyvern_cold_embrace","base_heal","wisp_spirits","wisp_overcharge","witch_doctor_paralyzing_cask","bounces","witch_doctor_voodoo_restoration","heal_per_tick","mana_per_tick","witch_doctor_maledict","duration","witch_doctor_death_ward","zuus_static_field","mapping","wrap","extenders","target","opts","read","write","current","roundingMultiplier","precision","newValueAsNum","isNaN","defaultValue","valueToWrite","round","notifySubscribers","notify","chaos_knight_phantasm","displayName","use_selected_hero","max_level","naga_siren_mirror_image","dark_seer_wall_of_replica","outgoing_damage_scepter","morphling_replicate","phantom_lancer_doppelwalk","phantom_lancer_juxtapose","phantom_lancer_spirit_lance","shadow_demon_disruption","spectre_haunt","terrorblade_conjure_image","terrorblade_reflection","item_manta","is_item","stackableItems","levelItems","itemsWithActive","BasicInventoryViewModel","addItem","selectedItem","new_item","split","state","size","itemInputValue","toggleItem","removeItem","toggleMuteItem","getItemImage","getItemSizeLabel","getActiveBorder","getItemAttributeValue","itemOptionsArray","itemBuffOptions","itemDebuffOptions","hasInventory","isEthereal","totalCost","itemcost","addItemBuff","selectedItemBuff","addItemDebuff","selectedItemDebuff","debuff","attributetype","aList","attributeList","hasBoots","hasEuls","hasWindLace","bootItems","hasYasha","hasDrums","hasDrumsActive","hasPhaseActive","hasShadowBladeActive","hasButterflyActive","hasMoMActive","yashaItems","hasPowerTreads","itemOptions","ItemInput","ItemAliases","Array","itemAlias","id","itemDebuffs","validItems","core","Data","Util","HeroOptions","BuffOptions","DebuffOptions","ItemOptions","ItemBuffOptions","ItemDebuffOptions","arr","arrLoop","url","successCallback","errorCallback","request","XMLHttpRequest","open","onload","status","responseText","onerror","send","util","union","uniqueId","uniques","concat","idCounter","prefix","l","factory","define","unionArrays","x","y","res","extendObject","destination","source","destType","getType","bothArrays","merge","obj1","obj2","merged","fillOptions","rawOptions","otherOptions","options","recognizedRootProperties","ignore","mergeArrays","include","copy","observe","defaultOptions","mappedProperties","copiedProperties","arrayGetDistinctValues","withProxyDependentObservable","dependentObservables","localDO","dependentObservable","owner","realDeferEvaluation","isRemoved","DO","tmp","realKoDependentObservable","isWriteable","isWriteableObservable","wrapped","arrayRemoveItem","apply","DEBUG","_wrapper","__DO","realDependentObservable","updateViewModel","mappedRootObject","rootObject","parentName","parentPropertyName","mappedParent","isArray","isMapped","previousMapping","mappingProperty","callbackParams","hasCreateCallback","Function","createCallback","skip","emptyReturn","hasUpdateCallback","update","updateCallback","params","alreadyMapped","visitedObjects","get","changes","hasKeyCallback","keyCallback","isObservable","mappedRemove","valueOrPredicate","predicate","mappedRemoveAll","arrayOfValues","arrayOfKeys","filterArrayByKey","arrayIndexOf","mappedDestroy","destroy","mappedDestroyAll","mappedIndexOf","mappedGet","mappedCreate","Error","currentArrayKeys","newArrayKeys","editScript","compareArrays","ignoreIndexOf","unwrappedRootObject","itemsByKey","optimizedKeys","newContents","passedOver","mappedItem","fullPropertyName","getItemByKey","ignorableIndexOf","arrayChanged","arrayForEach","change","canHaveProperties","save","visitPropertiesOrArrayEntries","indexer","prevMappedProperty","retval","hasCreateOrUpdateCallback","array","ignoreIndices","mapKey","arrayMap","visitorCallback","propertyName","object","getPropertyName","simpleObjectLookup","values","existingIndex","objectLookup","buckets","findBucket","bucketKey","bucket","mappingNesting","_defaultOptions","viewModel","unwrapped","fromJS","jsObject","pop","fromJSON","jsonString","parsed","parseJson","updateFromJS","updateFromJSON","toJS","resetDefaultOptions","visitModel","toJSON","plainJavaScriptObject","stringifyJson","Date","propertyValue","previouslyMappedValue","typeOf","toString","unwrapObject","t","isComputed","unwrap","unwrapArray","reset","parents","lvl","wrapObject","computedFunctions","currentLvl","hasES5Plugin","track","wrapArray"],"mappings":"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","file":"bundle.js","sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})","'use strict';\nvar ko = require('./herocalc_knockout');\nvar abilityData = require(\"./herocalc_abilitydata\");\n\nvar AbilityModel = function (a, h) {\n    var self = this;\n    self.hero = h;\n    self.abilityData = abilityData;\n    self.hasScepter = ko.observable(false);\n    self.isShapeShiftActive = ko.observable(false);\n    self.abilities = a;\n    self._abilities = self.abilities();\n    for (var i = 0; i < self.abilities().length; i++) {\n        self._abilities[i].level = ko.observable(0);\n        self._abilities[i].isActive = ko.observable(false);\n        self._abilities[i].isDetail = ko.observable(false);\n        self._abilities[i].baseDamage = ko.observable(0);\n        self._abilities[i].baseDamageReductionPct = ko.observable(0);\n        self._abilities[i].baseDamageMultiplier = ko.observable(0);\n        self._abilities[i].bash = ko.observable(0);\n        self._abilities[i].bashBonusDamage = ko.observable(0);\n        self._abilities[i].bonusDamage = ko.observable(0);\n        self._abilities[i].bonusDamageOrb = ko.observable(0);\n        self._abilities[i].bonusDamagePct = ko.observable(0);\n        self._abilities[i].bonusDamagePrecisionAura = ko.observable(0);\n        self._abilities[i].bonusDamageReduction = ko.observable(0);\n        self._abilities[i].bonusHealth = ko.observable(0);\n        self._abilities[i].bonusStrength = ko.observable(0);\n        self._abilities[i].bonusStrength2 = ko.observable(0);\n        self._abilities[i].bonusAgility = ko.observable(0);\n        self._abilities[i].bonusAgility2 = ko.observable(0);\n        self._abilities[i].bonusInt = ko.observable(0);\n        self._abilities[i].bonusAllStatsReduction = ko.observable(0);\n        self._abilities[i].damageAmplification = ko.observable(0);\n        self._abilities[i].damageReduction = ko.observable(0);\n        self._abilities[i].evasion = ko.observable(0);\n        self._abilities[i].magicResist = ko.observable(0);\n        self._abilities[i].manaregen = ko.observable(0);\n        self._abilities[i].manaregenreduction = ko.observable(0);\n        self._abilities[i].missChance = ko.observable(0);\n        self._abilities[i].movementSpeedFlat = ko.observable(0);\n        self._abilities[i].movementSpeedPct = ko.observable(0);\n        self._abilities[i].movementSpeedPctReduction = ko.observable(0);\n        self._abilities[i].turnRateReduction = ko.observable(0);\n        self._abilities[i].attackrange = ko.observable(0);\n        self._abilities[i].attackspeed = ko.observable(0);\n        self._abilities[i].attackspeedreduction = ko.observable(0);\n        self._abilities[i].armor = ko.observable(0);\n        self._abilities[i].armorReduction = ko.observable(0);\n        self._abilities[i].healthregen = ko.observable(0);\n        self._abilities[i].lifesteal = ko.observable(0);\n        self._abilities[i].visionnight = ko.observable(0);\n        self._abilities[i].visionday = ko.observable(0);\n    }\n    self.abilityControlData = {};\n    self.abilitySettingsData = function (data, parent, index) {\n        if (self.abilityControlData[data] == undefined) {\n            return self.processAbility(data, parent, index, self.abilityData[data]);\n        }\n        else {\n            return self.abilityControlData[data];\n        }\n    }\n    \n    self.processAbility = function (data, parent, index, args) {\n        var result = {};\n        result.data = [];\n        var v;\n        var v_list = [];\n        for (var i=0; i < args.length; i++) {\n            switch (args[i].controlType) {\n                case 'input':\n                    v = ko.observable(0).extend({ numeric: 2 });\n                    v.controlValueType = args[i].controlValueType;\n                    v_list.push(v);\n                    result.data.push({ labelName: args[i].label.toUpperCase() + ':', controlVal: v, controlType: args[i].controlType, display: args[i].display });\n                break;\n                case 'checkbox':\n                    v = ko.observable(false);\n                    v.controlValueType = args[i].controlValueType;\n                    v_list.push(v);\n                    result.data.push({ labelName: args[i].label.toUpperCase() + '?', controlVal: v, controlType: args[i].controlType, display: args[i].display });\n                break;\n                case 'radio':\n                    v = ko.observable(args[i].controlOptions[0].value);\n                    v.controlValueType = args[i].controlValueType;\n                    v_list.push(v);\n                    result.data.push({ labelName: args[i].label.toUpperCase() + '?', controlVal: v, controlType: args[i].controlType, display: args[i].display, controlOptions: args[i].controlOptions });\n                break;\n                case 'method':\n                case 'text':\n                    // single input abilities\n                    if (args[i].controls == undefined) {\n                        if (args[i].noLevel) {\n                            var attributeValue = function (attributeName) {\n                                return {fn: ko.computed(function () {\n                                    var _ability = self.abilities().find(function(b) {\n                                        return b.name == data;\n                                    });\n                                    return self.getAbilityAttributeValue(_ability.attributes, attributeName, 0);\n                                })};\n                            };\n                        }\n                        else {\n                            var attributeValue = function (attributeName) {\n                                return {fn: ko.computed(function () {\n                                    var _ability = self.abilities().find(function(b) {\n                                        return b.name == data;\n                                    });\n                                    return self.getAbilityAttributeValue(_ability.attributes, attributeName, _ability.level());\n                                })};\n                            };\n                        }\n                        var g = attributeValue(args[i].attributeName)\n                        var r = self.getComputedFunction(v, g.fn, args[i].fn, parent, index, self, args[i].returnProperty, undefined, data);\n                        if (args[i].ignoreTooltip) {\n                            var tooltip = args[i].label || args[i].attributeName;\n                        }\n                        else {\n                            var tooltip = self.getAbilityAttributeTooltip(self.abilities()[index].attributes, args[i].attributeName) || args[i].label || args[i].attributeName;\n                        }\n                        result.data.push({ labelName: tooltip.toUpperCase(), controlVal: r, controlType: args[i].controlType, display: args[i].display, clean: g.fn });\n                    }\n                    // multi input abilities\n                    else {\n                        if (args[i].noLevel) {\n                            var attributeValue = function (attributeName) {\n                                return {fn: ko.computed(function () {\n                                    return self.getAbilityAttributeValue(self.abilities()[index].attributes, attributeName, 0);\n                                })};\n                            };\n                        }\n                        else {\n                            var attributeValue = function (attributeName) {\n                                return {fn: ko.computed(function () {\n                                    return self.getAbilityAttributeValue(self.abilities()[index].attributes, attributeName, self.abilities()[index].level());\n                                })};\n                            };\n                        }\n                        var g = attributeValue(args[i].attributeName)\n                        var r = self.getComputedFunction(v_list, g.fn, args[i].fn, parent, index, self, args[i].returnProperty, args[i].controls, data);\n                        if (args[i].ignoreTooltip) {\n                            var tooltip = args[i].label || args[i].attributeName;\n                        }\n                        else {\n                            var tooltip = self.getAbilityAttributeTooltip(self.abilities()[index].attributes, args[i].attributeName) || args[i].label || args[i].attributeName;\n                        }\n                        result.data.push({ labelName: tooltip.toUpperCase(), controlVal: r, controlType: args[i].controlType, display: args[i].display, clean: g.fn });\n                    }\n                    \n                    if (args[i].controlType == 'method') {\n                        v_list.push(r);\n                    }\n                break;\n            }\n        }\n        self.abilityControlData[data] = result;\n        return result;\n    }\n\n    self.getComputedFunction = function (v, attributeValue, fn, parent, index, abilityModel, returnProperty, controls, abilityName) {\n        var _ability = abilityModel.abilities().find(function(b) {\n            return b.name == abilityName;\n        });\n        return ko.pureComputed(function () {                \n            var inputValue;\n            if (controls == undefined) {\n                if (v == undefined) {\n                    inputValue = v;\n                }\n                else if (typeof v() == 'boolean') {\n                    inputValue = v();\n                }\n                else if (v.controlValueType == undefined) {\n                    inputValue = parseFloat(v());\n                }\n                else if (v.controlValueType == 'string') {\n                    inputValue = v();\n                }\n                else {\n                    inputValue = parseFloat(v());\n                }\n            }\n            else {\n                var v_list = [];\n                for (var i=0;i<controls.length;i++) {\n                    switch (typeof v[controls[i]]()) {\n                        case 'boolean':\n                        case 'object':\n                            v_list.push(v[controls[i]]());\n                        break;\n                        default:\n                            v_list.push(parseFloat(v[controls[i]]()));\n                        break;\n                    }\n                }\n                inputValue = v_list;\n            }\n            \n            var returnVal = fn.call(this, inputValue, attributeValue(), parent, index, abilityModel, _ability);\n            if (returnProperty != undefined) {\n                _ability[returnProperty](returnVal);\n            }\n            return returnVal;\n        }, this);\n    }\n    \n    self.getAbilityLevelByAbilityName = function (abilityName) {\n        for (var i = 0; i < self.abilities().length; i++) {\n            if (self._abilities[i].name == abilityName) {\n                return self._abilities[i].level();\n            }\n        }\n        return -1;\n    }\n\n    self.getAbilityByName = function (abilityName) {\n        for (var i = 0; i < self.abilities().length; i++) {\n            if (self._abilities[i].name == abilityName) {\n                return self._abilities[i];\n            }\n        }\n        return undefined;\n    }\n\n    self.getAbilityPropertyValue = function (ability, property) {\n        return parseFloat(ability[property]()[ability.level()-1]);\n    }\n    \n    self.getAttributeBonusLevel = function () {\n        for (var i = 0; i < self.abilities().length; i++) {\n            if (self._abilities[i].name == 'attribute_bonus') {\n                return self._abilities[i].level();\n            }\n        }\n        return 0;        \n    }\n    \n    self.getAllStatsReduction = ko.computed(function () {\n        var totalAttribute = 0;\n        for (var i = 0; i < self.abilities().length; i++) {\n            var ability = self._abilities[i];\n            if (ability.level() > 0 && (ability.isActive() || (ability.behavior.indexOf('DOTA_ABILITY_BEHAVIOR_PASSIVE') != -1))) {\n                if (!(ability.name in self.abilityData)) {                    \n                    for (var j = 0; j < self._abilities[i].attributes.length; j++) {\n                        var attribute = self._abilities[i].attributes[j];\n                        /*switch(attribute.name) {\n                            // invoker_quas\n                            case 'bonus_strength':\n                                totalAttribute += parseInt(attribute.value[ability.level()-1]);\n                            break;\n                        }*/\n                    }\n                }\n                else if (ability.bonusAllStatsReduction != undefined) {\n                    // slark_essence_shift\n                    totalAttribute+=ability.bonusAllStatsReduction();\n                }\n            }\n        }\n        return totalAttribute;\n    });\n    \n    self.getStrengthReduction = ko.computed(function () {\n        var totalAttribute = 0;\n        for (var i = 0; i < self.abilities().length; i++) {\n            var ability = self._abilities[i];\n            if (ability.level() > 0 && (ability.isActive() || (ability.behavior.indexOf('DOTA_ABILITY_BEHAVIOR_PASSIVE') != -1))) {\n                if (!(ability.name in self.abilityData)) {                    \n                    for (var j = 0; j < self._abilities[i].attributes.length; j++) {\n                        var attribute = self._abilities[i].attributes[j];\n                        /*switch(attribute.name) {\n                            // invoker_quas\n                            case 'bonus_strength':\n                                totalAttribute += parseInt(attribute.value[ability.level()-1]);\n                            break;\n                        }*/\n                    }\n                }\n                else if (ability.bonusStrength != undefined && ability.name == 'undying_decay') {\n                    // undying_decay\n                    totalAttribute-=ability.bonusStrength();\n                }\n            }\n        }\n        return totalAttribute;\n    });\n    \n    self.getStrength = ko.computed(function () {\n        var totalAttribute = 0;\n        for (var i = 0; i < self.abilities().length; i++) {\n            var ability = self._abilities[i];\n            if (ability.level() > 0) {\n                if (!(ability.name in self.abilityData)) {\n                    if (ability.isActive() || (ability.behavior.indexOf('DOTA_ABILITY_BEHAVIOR_PASSIVE') != -1)) {\n                        for (var j = 0; j < self._abilities[i].attributes.length; j++) {\n                            var attribute = self._abilities[i].attributes[j];\n                            /*switch(attribute.name) {\n                                // invoker_quas\n                                case 'bonus_strength':\n                                    totalAttribute += parseInt(attribute.value[ability.level()-1]);\n                                break;\n                            }*/\n                        }\n                    }\n                }\n                else {\n                    if (ability.bonusStrength != undefined) {\n                        if (ability.isActive() || (ability.behavior.indexOf('DOTA_ABILITY_BEHAVIOR_PASSIVE') != -1) || ability.name == 'invoker_quas') {\n                            // pudge_flesh_heap,invoker_quas,morphling_morph_str,morphling_morph_agi,undying_decay\n                            totalAttribute+=ability.bonusStrength();\n                        }\n                    }\n                    if (ability.bonusStrength2 != undefined) {\n                        if (ability.isActive() || (ability.behavior.indexOf('DOTA_ABILITY_BEHAVIOR_PASSIVE') != -1)) {\n                            // morphling_morph_str\n                            totalAttribute+=ability.bonusStrength2();\n                        }\n                    }\n                }\n            }\n        }\n        return totalAttribute;\n    });\n    \n    self.getAgility = ko.computed(function () {\n        var totalAttribute = 0;\n        for (var i = 0; i < self.abilities().length; i++) {\n            var ability = self._abilities[i];\n            if (ability.level() > 0) {\n                if (!(ability.name in self.abilityData)) {\n                    if (ability.isActive() || (ability.behavior.indexOf('DOTA_ABILITY_BEHAVIOR_PASSIVE') != -1)) {\n                        for (var j = 0; j < self._abilities[i].attributes.length; j++) {\n                            var attribute = self._abilities[i].attributes[j];\n                            switch(attribute.name) {\n                                // drow_ranger_marksmanship\n                                case 'marksmanship_agility_bonus':\n                                    totalAttribute += self.getAbilityAttributeValue(self._abilities[i].attributes, attribute.name, ability.level());\n                                break;\n                            }\n                        }\n                    }\n                }\n                else {\n                    if (ability.bonusAgility != undefined) {\n                        if (ability.isActive() || (ability.behavior.indexOf('DOTA_ABILITY_BEHAVIOR_PASSIVE') != -1) || ability.name == 'invoker_wex') {\n                            // invoker_wex,morphling_morph_agi,morphling_morph_str\n                            totalAttribute+=ability.bonusAgility();\n                        }\n                    }\n                    if (ability.bonusAgility2 != undefined) {\n                        if (ability.isActive() || (ability.behavior.indexOf('DOTA_ABILITY_BEHAVIOR_PASSIVE') != -1)) {\n                            // invoker_wex,morphling_morph_agi,morphling_morph_str\n                            totalAttribute+=ability.bonusAgility2();\n                        }\n                    }\n                }\n            }\n        }\n        return totalAttribute;\n    });\n\n    self.getIntelligence = ko.computed(function () {\n        var totalAttribute = 0;\n        for (var i = 0; i < self.abilities().length; i++) {\n            var ability = self._abilities[i];\n            if (ability.level() > 0) {\n                if (!(ability.name in self.abilityData)) {\n                    if (ability.isActive() || (ability.behavior.indexOf('DOTA_ABILITY_BEHAVIOR_PASSIVE') != -1)) {\n                        for (var j = 0; j < self._abilities[i].attributes.length; j++) {\n                            var attribute = self._abilities[i].attributes[j];\n                            switch(attribute.name) {\n                                // invoker_exort\n                            /*    case 'bonus_intelligence':\n                                    totalAttribute += self.getAbilityAttributeValue(self._abilities[i].attributes, attribute.name, ability.level());\n                                break;*/\n                            }\n                        }\n                    }\n                }\n                else if (ability.bonusInt != undefined) {\n                    if (ability.isActive() || (ability.behavior.indexOf('DOTA_ABILITY_BEHAVIOR_PASSIVE') != -1) || ability.name == 'invoker_exort') {\n                        // invoker_exort\n                        totalAttribute+=ability.bonusInt();\n                    }\n                }\n            }\n        }\n        return totalAttribute;\n    });\n    \n    self.getArmor = ko.computed(function () {\n        var totalAttribute = 0;\n        for (var i = 0; i < self.abilities().length; i++) {\n            var ability = self._abilities[i];\n            if (ability.level() > 0 && (ability.isActive() || (ability.behavior.indexOf('DOTA_ABILITY_BEHAVIOR_PASSIVE') != -1))) {\n                if (!(ability.name in self.abilityData)) {\n                    for (var j = 0; j < self._abilities[i].attributes.length; j++) {\n                        var attribute = self._abilities[i].attributes[j];\n                        switch(attribute.name) {\n                            // axe_berserkers_call,dragon_knight_dragon_blood,troll_warlord_berserkers_rage,lycan_shapeshift,enraged_wildkin_toughness_aura\n                            case 'bonus_armor':\n                                if (ability.name != 'templar_assassin_meld') {\n                                    totalAttribute += self.getAbilityAttributeValue(self._abilities[i].attributes, attribute.name, ability.level());\n                                }\n                            break;\n                            // sven_warcry\n                            case 'warcry_armor':\n                                totalAttribute += self.getAbilityAttributeValue(self._abilities[i].attributes, attribute.name, ability.level());\n                            break;\n                            // lich_frost_armor,ogre_magi_frost_armor\n                            case 'armor_bonus':\n                                if (ability.name == 'lich_frost_armor' || ability.name == 'ogre_magi_frost_armor') {\n                                    totalAttribute += self.getAbilityAttributeValue(self._abilities[i].attributes, attribute.name, ability.level());\n                                }\n                            break;\n                        }\n                    }\n                }\n                else if (ability.armor != undefined) {\n                    // shredder_reactive_armor,visage_gravekeepers_cloak\n                    totalAttribute+=ability.armor();\n                }\n            }\n        }\n        return totalAttribute;\n    });\n\n    self.getArmorBaseReduction = ko.computed(function () {\n        var totalAttribute = 1;\n        for (var i = 0; i < self.abilities().length; i++) {\n            var ability = self._abilities[i];\n            if (ability.level() > 0 && (ability.isActive() || (ability.behavior.indexOf('DOTA_ABILITY_BEHAVIOR_PASSIVE') != -1))) {\n                //if (!(ability.name in self.abilityData)) {\n                    switch(ability.name) {\n                        //elder_titan_natural_order\n                        case 'elder_titan_natural_order':\n                            totalAttribute *= (1-self.getAbilityAttributeValue(self._abilities[i].attributes, 'armor_reduction_pct', ability.level())/100);\n                        break;\n                    }\n                //}\n            }\n        }\n        return totalAttribute;\n    });\n    \n    self.getArmorReduction = ko.computed(function () {\n        var totalAttribute = 0;\n        for (var i = 0; i < self.abilities().length; i++) {\n            var ability = self._abilities[i];\n            if (ability.level() > 0 && (ability.isActive() || (ability.behavior.indexOf('DOTA_ABILITY_BEHAVIOR_PASSIVE') != -1))) {\n                if (!(ability.name in self.abilityData)) {\n                    switch(ability.name) {\n                        //templar_assassin_meld\n                        case 'templar_assassin_meld':\n                            totalAttribute += self.getAbilityAttributeValue(self._abilities[i].attributes, 'bonus_armor', ability.level());\n                        break;\n                        // tidehunter_gush\n                        case 'tidehunter_gush':\n                            totalAttribute += self.getAbilityAttributeValue(self._abilities[i].attributes, 'armor_bonus', ability.level());\n                        break;\n                        // naga_siren_rip_tide\n                        case 'naga_siren_rip_tide':\n                        // slardar_amplify_damage\n                        case 'slardar_amplify_damage':\n                        // vengefulspirit_wave_of_terror\n                        case 'vengefulspirit_wave_of_terror':\n                            totalAttribute += self.getAbilityAttributeValue(self._abilities[i].attributes, 'armor_reduction', ability.level());\n                        break;\n                        // nevermore_dark_lord\n                        case 'nevermore_dark_lord':\n                            totalAttribute += self.getAbilityAttributeValue(self._abilities[i].attributes, 'presence_armor_reduction', ability.level());\n                        break;\n                    }\n                }\n                else if (ability.armorReduction != undefined) {\n                    // alchemist_acid_spray\n                    totalAttribute+=ability.armorReduction();\n                }\n            }\n        }\n        return totalAttribute;\n    });\n\n    self.getHealth = ko.computed(function () {\n        var totalAttribute = 0;\n        for (var i = 0; i < self.abilities().length; i++) {\n            var ability = self._abilities[i];\n            if (ability.level() > 0 && (ability.isActive() || (ability.behavior.indexOf('DOTA_ABILITY_BEHAVIOR_PASSIVE') != -1))) {\n                if (!(ability.name in self.abilityData)) {\n                    for (var j = 0; j < self._abilities[i].attributes.length; j++) {\n                        var attribute = self._abilities[i].attributes[j];\n                        switch(attribute.name) {\n                            // lone_druid_true_form,lycan_shapeshift,troll_warlord_berserkers_rage\n                            case 'bonus_hp':\n                                totalAttribute += self.getAbilityAttributeValue(self._abilities[i].attributes, attribute.name, ability.level());\n                            break;\n                            // lone_druid_synergy\n                            case 'true_form_hp_bonus':\n                                if (self.isTrueFormActive()) {\n                                    totalAttribute += self.getAbilityAttributeValue(self._abilities[i].attributes, attribute.name, ability.level());\n                                }\n                            break;\n                        }\n                    }\n                }\n                else if (ability.bonusHealth != undefined) {\n                    // clinkz_death_pact\n                    totalAttribute+=ability.bonusHealth();\n                }\n            }\n        }\n        return totalAttribute;\n    });\n    \n    self.isTrueFormActive = function () {\n        for (var i = 0; i < self.abilities().length; i++) {\n            var ability = self._abilities[i];\n            if (ability.isActive() && ability.name == 'lone_druid_true_form') {\n                return true;\n            }\n        }\n        return false;\n    }\n\n    self.getHealthRegen = ko.computed(function () {\n        var totalAttribute = 0;\n        for (var i = 0; i < self.abilities().length; i++) {\n            var ability = self._abilities[i];\n            if (ability.level() > 0 && (ability.isActive() || (ability.behavior.indexOf('DOTA_ABILITY_BEHAVIOR_PASSIVE') != -1))) {\n                if (!(ability.name in self.abilityData)) {\n                    for (var j = 0; j < self._abilities[i].attributes.length; j++) {\n                        var attribute = self._abilities[i].attributes[j];\n                        switch(attribute.name) {\n                            // alchemist_chemical_rage, dragon_knight_dragon_blood\n                            case 'bonus_health_regen':\n                            // broodmother_spin_web\n                            case 'heath_regen':\n                            // omniknight_guardian_angel,treant_living_armor,satyr_hellcaller_unholy_aura\n                            case 'health_regen':\n                                totalAttribute += self.getAbilityAttributeValue(self._abilities[i].attributes, attribute.name, ability.level());\n                            break;\n                            // legion_commander_press_the_attack\n                            case 'hp_regen':\n                                totalAttribute += self.getAbilityAttributeValue(self._abilities[i].attributes, attribute.name, ability.level());\n                            break;\n                        }\n                    }\n                }\n                else if (ability.healthregen != undefined) {\n                    // shredder_reactive_armor,invoker_quas,necrolyte_sadist\n                    totalAttribute+=ability.healthregen();\n                }\n            }\n        }\n        return totalAttribute;\n    });\n\n    self.getMana = ko.computed(function () {\n        var totalAttribute = 0;\n        for (var i = 0; i < self.abilities().length; i++) {\n            var ability = self._abilities[i];\n            if (ability.level() > 0 && (ability.isActive() || (ability.behavior.indexOf('DOTA_ABILITY_BEHAVIOR_PASSIVE') != -1))) {\n                //if (!(ability.name in self.abilityData)) {\n                    for (var j = 0; j < self._abilities[i].attributes.length; j++) {\n                        var attribute = self._abilities[i].attributes[j];\n                        switch(attribute.name) {\n                            // obsidian_destroyer_essence_aura\n                            case 'bonus_mana':\n                                totalAttribute += self.getAbilityAttributeValue(self._abilities[i].attributes, attribute.name, ability.level());\n                            break;\n                        }\n                    }\n                //}\n            }\n        }\n        return totalAttribute;\n    });\n    \n    self.getManaRegen = ko.computed(function () {\n        var totalAttribute = 0;\n        for (var i = 0; i < self.abilities().length; i++) {\n            var ability = self._abilities[i];\n            if (ability.level() > 0 && (ability.isActive() || (ability.behavior.indexOf('DOTA_ABILITY_BEHAVIOR_PASSIVE') != -1))) {\n                if (!(ability.name in self.abilityData)) {\n                    for (var j = 0; j < self._abilities[i].attributes.length; j++) {\n                        var attribute = self._abilities[i].attributes[j];\n                        switch(attribute.name) {\n                            // alchemist_chemical_rage\n                            case 'bonus_mana_regen':\n                                totalAttribute += self.getAbilityAttributeValue(self._abilities[i].attributes, attribute.name, ability.level());\n                            break;\n                        }\n                    }\n                }\n                else if (ability.manaregen != undefined) {\n                    // necrolyte_sadist\n                    totalAttribute+=ability.manaregen();\n                }\n            }\n        }\n        return totalAttribute;\n    });\n    \n    self.getManaRegenArcaneAura = ko.computed(function () {\n        var totalAttribute = 0;\n        for (var i = 0; i < self.abilities().length; i++) {\n            var ability = self._abilities[i];\n            if (ability.level() > 0 && (ability.isActive() || (ability.behavior.indexOf('DOTA_ABILITY_BEHAVIOR_PASSIVE') != -1))) {\n                //if (!(ability.name in self.abilityData)) {\n                    for (var j = 0; j < self._abilities[i].attributes.length; j++) {\n                        var attribute = self._abilities[i].attributes[j];\n                        switch(attribute.name) {\n                            // crystal_maiden_brilliance_aura\n                            case 'mana_regen':\n                                if (ability.name == 'crystal_maiden_brilliance_aura') {\n                                    totalAttribute += self.getAbilityAttributeValue(self._abilities[i].attributes, attribute.name, ability.level());\n                                }\n                            break;\n                        }\n                    }\n                //}\n            }\n        }\n        return totalAttribute;\n    });\n\n    self.getManaRegenReduction = ko.computed(function () {\n        var totalAttribute = 0;\n        for (var i = 0; i < self.abilities().length; i++) {\n            var ability = self._abilities[i];\n            if (ability.level() > 0 && (ability.isActive() || (ability.behavior.indexOf('DOTA_ABILITY_BEHAVIOR_PASSIVE') != -1))) {\n                /*if (!(ability.name in self.abilityData)) {\n                    for (var j = 0; j < self._abilities[i].attributes.length; j++) {\n                        var attribute = self._abilities[i].attributes[j];\n                        //switch(attribute.name) {\n                        //    // \n                        //    case '':\n                        //        totalAttribute += parseInt(attribute.value[ability.level()-1]);\n                        //    break;\n                        //}\n                    }\n                }\n                else*/ if (ability.manaregenreduction != undefined) {\n                    // pugna_nether_ward\n                    totalAttribute+=ability.manaregenreduction();\n                }\n            }\n        }\n        return totalAttribute;\n    });\n    \n    self.getAttackRange = ko.computed(function () {\n        var totalAttribute = 0;\n        for (var i = 0; i < self.abilities().length; i++) {\n            var ability = self._abilities[i];\n            if (ability.level() > 0) {\n                if (!(ability.name in self.abilityData)) {\n                    if (ability.isActive() || (ability.behavior.indexOf('DOTA_ABILITY_BEHAVIOR_PASSIVE') != -1)) {\n                        for (var j = 0; j < self._abilities[i].attributes.length; j++) {\n                            var attribute = self._abilities[i].attributes[j];\n                            switch(attribute.name) {\n                                // winter_wyvern_arctic_burn\n                                case 'attack_range_bonus':\n                                // templar_assassin_psi_blades,sniper_take_aim\n                                case 'bonus_attack_range':\n                                    totalAttribute += self.getAbilityAttributeValue(self._abilities[i].attributes, attribute.name, ability.level());\n                                break;\n                                // terrorblade_metamorphosis,troll_warlord_berserkers_rage\n                                case 'bonus_range':\n                                    if (ability.name == 'terrorblade_metamorphosis') {\n                                        totalAttribute += self.getAbilityAttributeValue(self._abilities[i].attributes, attribute.name, ability.level());\n                                    }\n                                    if (ability.name == 'troll_warlord_berserkers_rage') {\n                                        totalAttribute -= self.getAbilityAttributeValue(self._abilities[i].attributes, attribute.name, ability.level());\n                                    }\n                                break;\n                                // tiny_grow\n                                case 'bonus_range_scepter':\n                                    if (ability.name == 'tiny_grow' && self.hasScepter()) {\n                                        totalAttribute += self.getAbilityAttributeValue(self._abilities[i].attributes, attribute.name, ability.level());\n                                    }\n                                break;\n                                // enchantress_impetus\n                                case 'bonus_attack_range_scepter':\n                                    if (ability.name == 'enchantress_impetus' && self.hasScepter()) {\n                                        totalAttribute += self.getAbilityAttributeValue(self._abilities[i].attributes, attribute.name, ability.level());\n                                    }\n                                break;\n                            }\n                        }\n                        // lone_druid_true_form\n                        if (ability.name == 'lone_druid_true_form') {\n                            totalAttribute -= 422;\n                        }\n                    }\n                    else if (ability.name == 'enchantress_impetus' && self.hasScepter()) {\n                        for (var j = 0; j < self._abilities[i].attributes.length; j++) {\n                            var attribute = self._abilities[i].attributes[j];\n                            switch(attribute.name) {\n                              case 'bonus_attack_range_scepter':\n                                totalAttribute += self.getAbilityAttributeValue(self._abilities[i].attributes, attribute.name, ability.level());\n                              break;\n                            }\n                        }\n                    }\n                }\n                else if (ability.attackrange != undefined) {\n                    if (ability.isActive() || (ability.behavior.indexOf('DOTA_ABILITY_BEHAVIOR_PASSIVE') != -1)) {\n                        // dragon_knight_elder_dragon_form\n                        totalAttribute+=ability.attackrange();\n                    }\n                }\n            }\n        }\n        return totalAttribute;\n    });\n    \n    self.getAttackSpeed = ko.computed(function () {\n        var totalAttribute = 0;\n        for (var i = 0; i < self.abilities().length; i++) {\n            var ability = self._abilities[i];\n            if (ability.level() > 0 && (ability.isActive() || (ability.behavior.indexOf('DOTA_ABILITY_BEHAVIOR_PASSIVE') != -1))) {\n                if (!(ability.name in self.abilityData)) {\n                    for (var j = 0; j < self._abilities[i].attributes.length; j++) {\n                        var attribute = self._abilities[i].attributes[j];\n                        switch(attribute.name) {\n                            // abaddon_frostmourne,troll_warlord_battle_trance\n                            case 'attack_speed':\n                            // visage_grave_chill\n                            case 'attackspeed_bonus':\n                            // mirana_leap\n                            case 'leap_speedbonus_as':\n                            // life_stealer\n                            case 'attack_speed_bonus':\n                                totalAttribute += self.getAbilityAttributeValue(self._abilities[i].attributes, attribute.name, ability.level());\n                            break;\n                            // clinkz_strafe,ursa_overpower\n                            case 'attack_speed_bonus_pct':\n                                if (ability.name == 'clinkz_strafe' || ability.name == 'ursa_overpower') {\n                                    totalAttribute += self.getAbilityAttributeValue(self._abilities[i].attributes, attribute.name, ability.level());\n                                }\n                            break;\n                            // axe_culling_blade,necronomicon_archer_aoe\n                            case 'speed_bonus':\n                                if (ability.name == 'axe_culling_blade' || ability.name == 'necronomicon_archer_aoe') {\n                                    totalAttribute += self.getAbilityAttributeValue(self._abilities[i].attributes, attribute.name, ability.level());\n                                }\n                            break;\n                            // ancient_apparition_chilling_touch\n                            case 'attack_speed_pct':\n                                if (ability.name == 'ancient_apparition_chilling_touch') {\n                                    totalAttribute += self.getAbilityAttributeValue(self._abilities[i].attributes, attribute.name, ability.level());\n                                }\n                            break;\n                            // beastmaster_inner_beast,lycan_feral_impulse,lone_druid_rabid,tiny_grow,phantom_assassin_phantom_strike,windrunner_focusfire,ogre_magi_bloodlust,centaur_khan_endurance_aura\n                            case 'bonus_attack_speed':\n                                if (ability.name == 'beastmaster_inner_beast' \n                                 || ability.name == 'lycan_feral_impulse' \n                                 || ability.name == 'lone_druid_rabid' \n                                 || ability.name == 'tiny_grow' \n                                 || ability.name == 'phantom_assassin_phantom_strike' \n                                 || ability.name == 'windrunner_focusfire' \n                                 || ability.name == 'ogre_magi_bloodlust'\n                                 || ability.name == 'centaur_khan_endurance_aura') {\n                                    totalAttribute += self.getAbilityAttributeValue(self._abilities[i].attributes, attribute.name, ability.level());\n                                }\n                            break;\n                        }\n                    }\n                }\n                else if (ability.attackspeed != undefined) {\n                    // troll_warlord_fervor,wisp_overcharge,lina_fiery_soul,invoker_alacrity,invoker_wex,huskar_berserkers_blood\n                    totalAttribute+=ability.attackspeed();\n                }\n            }\n        }\n        return totalAttribute;\n    });\n\n    self.getAttackSpeedReduction = ko.computed(function () {\n        var totalAttribute = 0;\n        for (var i = 0; i < self.abilities().length; i++) {\n            var ability = self._abilities[i];\n            if (ability.level() > 0 && (ability.isActive() || (ability.behavior.indexOf('DOTA_ABILITY_BEHAVIOR_PASSIVE') != -1))) {\n                if (!(ability.name in self.abilityData)) {\n                    for (var j = 0; j < self._abilities[i].attributes.length; j++) {\n                        var attribute = self._abilities[i].attributes[j];\n                        switch(attribute.name) {\n                            // night_stalker_void,crystal_maiden_crystal_nova,ghost_frost_attack,ogre_magi_frost_armor,polar_furbolg_ursa_warrior_thunder_clap\n                            case 'attackspeed_slow':\n                            // lich_frost_armor,lich_frost_nova,enchantress_untouchable\n                            case 'slow_attack_speed':\n                            // beastmaster_primal_roar\n                            case 'slow_attack_speed_pct':\n                            // storm_spirit_overload\n                            case 'overload_attack_slow':\n                                totalAttribute += self.getAbilityAttributeValue(self._abilities[i].attributes, attribute.name, ability.level());\n                            break;\n                            // omniknight_degen_aura\n                            case 'speed_bonus':\n                                if (ability.name == 'omniknight_degen_aura') {\n                                    totalAttribute += self.getAbilityAttributeValue(self._abilities[i].attributes, attribute.name, ability.level());\n                                }\n                            break;\n                            // tusk_frozen_sigil,crystal_maiden_freezing_field\n                            case 'attack_slow':\n                                if (ability.name == 'crystal_maiden_freezing_field' && !self.hasScepter()) {\n                                    totalAttribute += self.getAbilityAttributeValue(self._abilities[i].attributes, attribute.name, ability.level());\n                                }\n                                else if (ability.name == 'tusk_frozen_sigil') {\n                                    totalAttribute -= self.getAbilityAttributeValue(self._abilities[i].attributes, attribute.name, ability.level());\n                                }\n                            break;\n                            case 'attack_slow_scepter':\n                                if (ability.name == 'crystal_maiden_freezing_field' && self.hasScepter()) {\n                                    totalAttribute += self.getAbilityAttributeValue(self._abilities[i].attributes, attribute.name, ability.level());\n                                }\n                            break;\n                            // faceless_void_time_walk\n                            case 'attack_speed_pct':\n                                if (ability.name == 'faceless_void_time_walk') {\n                                    totalAttribute += self.getAbilityAttributeValue(self._abilities[i].attributes, attribute.name, ability.level());\n                                }\n                            break;\n                            // bounty_hunter_jinada\n                            case 'bonus_attackspeed':\n                                if (ability.name == 'bounty_hunter_jinada') {\n                                    totalAttribute += self.getAbilityAttributeValue(self._abilities[i].attributes, attribute.name, ability.level());\n                                }\n                            break;\n                            // brewmaster_thunder_clap\n                            case 'attack_speed_slow':\n                                if (ability.name == 'brewmaster_thunder_clap') {\n                                    totalAttribute -= self.getAbilityAttributeValue(self._abilities[i].attributes, attribute.name, ability.level());\n                                }\n                            break;\n                            // medusa_stone_gaze\n                            case 'slow':\n                                if (ability.name == 'medusa_stone_gaze') {\n                                    totalAttribute -= self.getAbilityAttributeValue(self._abilities[i].attributes, attribute.name, ability.level());\n                                }\n                            break;\n                            // visage_grave_chill\n                            case 'attackspeed_bonus':\n                                totalAttribute -= self.getAbilityAttributeValue(self._abilities[i].attributes, attribute.name, ability.level());\n                            break;\n                            // abaddon_frostmourne\n                            case 'attack_slow_tooltip':\n                                if (ability.name == 'abaddon_frostmourne') {\n                                    totalAttribute -= self.getAbilityAttributeValue(self._abilities[i].attributes, attribute.name, ability.level());\n                                }\n                            break;\n                        }\n                    }\n                    if (ability.name == 'enraged_wildkin_tornado') {\n                        totalAttribute -= 15;\n                    }\n                }\n                else if (ability.attackspeedreduction != undefined) {\n                    // viper_viper_strike,viper_corrosive_skin,jakiro_liquid_fire,lich_chain_frost,sandking_epicenter,earth_spirit_rolling_boulder\n                    totalAttribute+=ability.attackspeedreduction();\n                }\n            }\n        }\n        return totalAttribute;\n    });\n    self.getBash = ko.computed(function () {\n        var totalAttribute = 1;\n        for (var i = 0; i < self.abilities().length; i++) {\n            var ability = self._abilities[i];\n            if (ability.level() > 0 && (ability.isActive() || (ability.behavior.indexOf('DOTA_ABILITY_BEHAVIOR_PASSIVE') != -1))) {\n                if (!(ability.name in self.abilityData)) {\n                    for (var j = 0; j < self._abilities[i].attributes.length; j++) {\n                        var attribute = self._abilities[i].attributes[j];\n                        switch(attribute.name) {\n                            // slardar_bash\n                            case 'chance':\n                            // sniper_headshot\n                            case 'proc_chance':\n                                totalAttribute *= (1 - self.getAbilityAttributeValue(self._abilities[i].attributes, attribute.name, ability.level())/100);\n                            break;\n                        }\n                    }\n                }\n                else if (ability.bash != undefined) {\n                    // spirit_breaker_greater_bash,faceless_void_time_lock\n                    totalAttribute *= (1 - ability.bash()/100);\n                }\n            }\n        }\n        return totalAttribute;\n    });    \n    self.getBaseDamage = ko.computed(function () {\n        var totalAttribute = 0;\n        var totalMultiplier = 1;\n        var sources = {};\n        for (var i = 0; i < self.abilities().length; i++) {\n            var ability = self._abilities[i];\n            if (ability.level() > 0 && (ability.isActive() || (ability.behavior.indexOf('DOTA_ABILITY_BEHAVIOR_PASSIVE') != -1))) {\n                if (!(ability.name in self.abilityData)) {\n                    for (var j = 0; j < self._abilities[i].attributes.length; j++) {\n                        var attribute = self._abilities[i].attributes[j];\n                        switch(attribute.name) {\n                            // tiny_grow,terrorblade_metamorphosis\n                            case 'bonus_damage':\n                                if (ability.name == 'tiny_grow' || ability.name == 'terrorblade_metamorphosis') {\n                                    totalAttribute += self.getAbilityAttributeValue(self._abilities[i].attributes, attribute.name, ability.level());\n                                    sources[ability.name] = {\n                                        'damage': self.getAbilityAttributeValue(self._abilities[i].attributes, attribute.name, ability.level()),\n                                        'damageType': 'physical',\n                                        'displayname': ability.displayname\n                                    }\n                                }\n                            break;\n                        }\n                    }\n                }\n                else {\n                    if (ability.baseDamageMultiplier != undefined) {\n                        // earthshaker_enchant_totem\n                        totalMultiplier += ability.baseDamageMultiplier()/100;\n                        /*totalAttribute += ability.baseDamage();\n                        sources[ability.name] = {\n                            'damage': ability.baseDamage(),\n                            'damageType': 'physical',\n                            'displayname': ability.displayname\n                        }*/\n                    }\n                    if (ability.baseDamage != undefined) {\n                        // clinkz_death_pact\n                        totalAttribute += ability.baseDamage();\n                        sources[ability.name] = {\n                            'damage': ability.baseDamage(),\n                            'damageType': 'physical',\n                            'displayname': ability.displayname\n                        }\n                    }\n                }\n            }\n        }\n        return { sources: sources, total: totalAttribute, multiplier: totalMultiplier };\n    });\n    \n    self.getSelfBaseDamageReductionPct = ko.computed(function () {\n        var totalAttribute = 1;\n        for (var i = 0; i < self.abilities().length; i++) {\n            var ability = self._abilities[i];\n            if (ability.level() > 0 && (ability.isActive() || (ability.behavior.indexOf('DOTA_ABILITY_BEHAVIOR_PASSIVE') != -1))) {\n                if (!(ability.name in self.abilityData)) {\n                    for (var j = 0; j < self._abilities[i].attributes.length; j++) {\n                        var attribute = self._abilities[i].attributes[j];\n                        switch(attribute.name) {\n                            // medusa_split_shot\n                            case 'damage_modifier':\n                                totalAttribute *= (1 + self.getAbilityAttributeValue(self._abilities[i].attributes, attribute.name, ability.level())/100);\n                            break;\n                            // windrunner_focusfire\n                            case 'focusfire_damage_reduction':\n                                if (!self.hasScepter()) {\n                                    totalAttribute *= (1 + self.getAbilityAttributeValue(self._abilities[i].attributes, attribute.name, ability.level())/100);\n                                }\n                            break;\n                            case 'focusfire_damage_reduction_scepter':\n                                if (self.hasScepter()) {\n                                    totalAttribute *= (1 + self.getAbilityAttributeValue(self._abilities[i].attributes, attribute.name, ability.level())/100);\n                                }\n                            break;\n                        }\n                    }\n                }\n            }\n        }\n        return totalAttribute;\n    });\n    \n    self.getBaseDamageReductionPct = ko.computed(function () {\n        var totalAttribute = 1;\n        for (var i = 0; i < self.abilities().length; i++) {\n            var ability = self._abilities[i];\n            if (ability.level() > 0 && (ability.isActive() || (ability.behavior.indexOf('DOTA_ABILITY_BEHAVIOR_PASSIVE') != -1))) {\n                if (!(ability.name in self.abilityData)) {\n                    for (var j = 0; j < self._abilities[i].attributes.length; j++) {\n                        var attribute = self._abilities[i].attributes[j];\n                        switch(attribute.name) {\n                            // vengefulspirit_command_aura\n                            case 'bonus_damage_pct':\n                                if (ability.name == 'vengefulspirit_command_aura') {\n                                    totalAttribute *= (1 - self.getAbilityAttributeValue(self._abilities[i].attributes, attribute.name, ability.level())/100);\n                                }\n                            break;\n                        }\n                    }\n                }\n                else if (ability.baseDamageReductionPct != undefined) {\n                    // nevermore_requiem\n                    totalAttribute *= (1 + ability.baseDamageReductionPct()/100);\n                }\n            }\n        }\n        return totalAttribute;\n    });\n    \n    self.getBAT = ko.computed(function () {\n        var totalAttribute = 0;\n        for (var i = 0; i < self.abilities().length; i++) {\n            var ability = self._abilities[i];\n            if (ability.level() > 0 && (ability.isActive() || (ability.behavior.indexOf('DOTA_ABILITY_BEHAVIOR_PASSIVE') != -1))) {\n                if (!(ability.name in self.abilityData)) {\n                    for (var j = 0; j < self._abilities[i].attributes.length; j++) {\n                        var attribute = self._abilities[i].attributes[j];\n                        switch(attribute.name) {\n                            // troll_warlord_berserkers_rage,alchemist_chemical_rage,lone_druid_true_form,lycan_shapeshift\n                            case 'base_attack_time':\n                                totalAttribute += self.getAbilityAttributeValue(self._abilities[i].attributes, attribute.name, ability.level());\n                            break;\n                        }\n                    }\n                }\n            }\n        }\n        return totalAttribute;\n    });\n    self.getBonusDamage = ko.computed(function () {\n        var totalAttribute = 0;\n        var sources = {};\n        for (var i = 0; i < self.abilities().length; i++) {\n            var ability = self._abilities[i];\n            if (ability.level() > 0 && (ability.isActive() || (ability.behavior.indexOf('DOTA_ABILITY_BEHAVIOR_PASSIVE') != -1))) {\n                if (!(ability.name in self.abilityData)) {\n                    for (var j = 0; j < self._abilities[i].attributes.length; j++) {\n                        var attribute = self._abilities[i].attributes[j];\n                        switch(attribute.name) {\n                            // broodmother_insatiable_hunger,luna_lunar_blessing,templar_assassin_refraction,templar_assassin_meld,troll_warlord_berserkers_rage,lone_druid_true_form_battle_cry\n                            case 'bonus_damage':\n                                if (ability.name == 'broodmother_insatiable_hunger' || ability.name == 'luna_lunar_blessing'\n                                 || ability.name == 'templar_assassin_refraction' || ability.name == 'templar_assassin_meld'\n                                 || ability.name == 'troll_warlord_berserkers_rage' || ability.name == 'lone_druid_true_form_battle_cry') {\n                                    totalAttribute += self.getAbilityAttributeValue(self._abilities[i].attributes, attribute.name, ability.level());\n                                    sources[ability.name] = {\n                                        'damage': self.getAbilityAttributeValue(self._abilities[i].attributes, attribute.name, ability.level()),\n                                        'damageType': 'physical',\n                                        'displayname': ability.displayname\n                                    }\n                                }\n                            break;\n                            // lycan_howl\n                            case 'hero_bonus_damage':\n                                totalAttribute += self.getAbilityAttributeValue(self._abilities[i].attributes, attribute.name, ability.level());\n                                sources[ability.name] = {\n                                    'damage': self.getAbilityAttributeValue(self._abilities[i].attributes, attribute.name, ability.level()),\n                                    'damageType': 'physical',\n                                    'displayname': ability.displayname\n                                }\n                            break;\n                        }\n                    }\n                    if (ability.name == 'storm_spirit_overload') {\n                        totalAttribute += self.getAbilityPropertyValue(ability, 'damage');\n                        sources[ability.name] = {\n                            'damage': self.getAbilityPropertyValue(ability, 'damage'),\n                            'damageType': 'magic',\n                            'displayname': ability.displayname\n                        }                        \n                    }\n                }\n                else if (ability.bonusDamage != undefined && ability.bonusDamage() != 0) {\n                    // nevermore_necromastery,ursa_fury_swipes,ursa_enrage,invoker_alacrity,invoker_exort,elder_titan_ancestral_spirit,spectre_desolate,razor_static_link\n                    totalAttribute+=ability.bonusDamage();\n                    sources[ability.name] = {\n                        'damage': ability.bonusDamage(),\n                        'damageType': ability.name == 'spectre_desolate' ? 'pure' : 'physical',\n                        'displayname': ability.displayname\n                    }\n                }\n            }\n        }\n        return { sources: sources, total: totalAttribute };\n    });\n\n    self.getBonusDamagePercent = ko.computed(function () {\n        var totalAttribute = 0;\n        var sources = {};\n        for (var i = 0; i < self.abilities().length; i++) {\n            var ability = self._abilities[i];\n            if (ability.level() > 0 && (ability.isActive() || (ability.behavior.indexOf('DOTA_ABILITY_BEHAVIOR_PASSIVE') != -1))) {\n                if (!(ability.name in self.abilityData)) {\n                    for (var j = 0; j < self._abilities[i].attributes.length; j++) {\n                        var attribute = self._abilities[i].attributes[j];\n                        switch(attribute.name) {\n                            // bloodseeker_bloodrage\n                            case 'damage_increase_pct':\n                                if (ability.name == 'bloodseeker_bloodrage') {\n                                    totalAttribute += self.getAbilityAttributeValue(self._abilities[i].attributes, attribute.name, ability.level())/100;\n                                    sources[ability.name] = {\n                                        'damage': self.getAbilityAttributeValue(self._abilities[i].attributes, attribute.name, ability.level())/100,\n                                        'damageType': 'physical',\n                                        'displayname': ability.displayname\n                                    }\n                                }\n                            break;\n                            // magnataur_empower,vengefulspirit_command_aura,alpha_wolf_command_aura\n                            case 'bonus_damage_pct':\n                                if (ability.name == 'magnataur_empower' || ability.name == 'vengefulspirit_command_aura' || ability.name == 'alpha_wolf_command_aura') {\n                                    totalAttribute += self.getAbilityAttributeValue(self._abilities[i].attributes, attribute.name, ability.level())/100;\n                                    sources[ability.name] = {\n                                        'damage': self.getAbilityAttributeValue(self._abilities[i].attributes, attribute.name, ability.level())/100,\n                                        'damageType': 'physical',\n                                        'displayname': ability.displayname\n                                    }\n                                }\n                            break;\n                            // sven_gods_strength\n                            case 'gods_strength_damage':\n                                if (ability.name == 'sven_gods_strength' && self.hero != undefined && self.hero.heroId() == 'sven') {\n                                    totalAttribute += self.getAbilityAttributeValue(self._abilities[i].attributes, attribute.name, ability.level())/100;\n                                    sources[ability.name] = {\n                                        'damage': self.getAbilityAttributeValue(self._abilities[i].attributes, attribute.name, ability.level())/100,\n                                        'damageType': 'physical',\n                                        'displayname': ability.displayname\n                                    }\n                                }\n                            break;\n                            case 'gods_strength_damage_scepter':\n                                if (ability.name == 'sven_gods_strength' && self.hero == undefined) {\n                                    totalAttribute += self.getAbilityAttributeValue(self._abilities[i].attributes, attribute.name, ability.level())/100;\n                                    sources[ability.name] = {\n                                        'damage': self.getAbilityAttributeValue(self._abilities[i].attributes, attribute.name, ability.level())/100,\n                                        'damageType': 'physical',\n                                        'displayname': ability.displayname\n                                    }\n                                }\n                            break;\n                        }\n                    }\n                }\n                /*else if (ability.bonusDamagePct != undefined && ability.bonusDamagePct() != 0) {\n                    // bloodseeker_bloodrage\n                    // totalAttribute+=ability.bonusDamagePct()/100;\n                    // sources[ability.name] = {\n                        // 'damage': ability.bonusDamagePct()/100,\n                        // 'damageType': 'physical',\n                        // 'displayname': ability.displayname\n                    // }\n                }*/\n            }\n        }\n        return { sources: sources, total: totalAttribute };\n    });\n\n    self.getBonusDamageBackstab = ko.computed(function () {\n        var totalAttribute1 = 0;\n        var totalAttribute2 = 0;\n        var sources = [];\n        for (var i = 0; i < self.abilities().length; i++) {\n            var ability = self._abilities[i];\n            if (ability.name == 'riki_backstab') {\n                if (ability.level() > 0 && (ability.isActive() || (ability.behavior.indexOf('DOTA_ABILITY_BEHAVIOR_PASSIVE') != -1))) {\n                    for (var j = 0; j < self._abilities[i].attributes.length; j++) {\n                        var attribute = self._abilities[i].attributes[j];\n                        switch(attribute.name) {\n                            // riki_backstab\n                            case 'damage_multiplier':\n                                totalAttribute1 += self.getAbilityAttributeValue(self._abilities[i].attributes, attribute.name, ability.level());\n                                sources.push({\n                                    'damage': self.getAbilityAttributeValue(self._abilities[i].attributes, attribute.name, ability.level()),\n                                    'damageType': 'physical',\n                                    'displayname': ability.displayname\n                                });\n                            break;\n                        }\n                    }/*\n                    if (ability.bonusDamageBackstab != undefined) {\n                        console.log('bonusDamageBackstab');\n                        // damage_multiplier\n                        totalAttribute2+=ability.bonusDamageBackstab();\n                        sources.push({\n                            'damage': ability.bonusDamageBackstab(),\n                            'damageType': 'physical',\n                            'displayname': ability.displayname\n                        });\n                    }\n                    */\n                }\n            }\n        }\n        return { sources: sources, total: [totalAttribute1,totalAttribute2] };\n    });\n    \n    self.getBonusDamagePrecisionAura = ko.computed(function () {\n        var totalAttribute1 = 0;\n        var totalAttribute2 = 0;\n        var sources = [];\n        for (var i = 0; i < self.abilities().length; i++) {\n            var ability = self._abilities[i];\n            if (ability.name == 'drow_ranger_trueshot') {\n                if (ability.level() > 0 && (ability.isActive() || (ability.behavior.indexOf('DOTA_ABILITY_BEHAVIOR_PASSIVE') != -1))) {\n                    for (var j = 0; j < self._abilities[i].attributes.length; j++) {\n                        var attribute = self._abilities[i].attributes[j];\n                        switch(attribute.name) {\n                            // drow_ranger_trueshot\n                            case 'trueshot_ranged_damage':\n                                totalAttribute1 += self.getAbilityAttributeValue(self._abilities[i].attributes, attribute.name, ability.level())/100;\n                                sources.push({\n                                    'damage': self.getAbilityAttributeValue(self._abilities[i].attributes, attribute.name, ability.level())/100,\n                                    'damageType': 'physical',\n                                    'displayname': ability.displayname\n                                });\n                            break;\n                        }\n                    }\n                    if (ability.bonusDamagePrecisionAura != undefined) {\n                        // drow_ranger_trueshot\n                        totalAttribute2+=ability.bonusDamagePrecisionAura();\n                        sources.push({\n                            'damage': ability.bonusDamagePrecisionAura(),\n                            'damageType': 'physical',\n                            'displayname': ability.displayname\n                        });\n                    }\n                }\n            }\n        }\n        return { sources: sources, total: [totalAttribute1,totalAttribute2] };\n    });\n    \n    self.getBonusDamageReduction = ko.computed(function () {\n        var totalAttribute = 0;\n        for (var i = 0; i < self.abilities().length; i++) {\n            var ability = self._abilities[i];\n            if (ability.level() > 0 && (ability.isActive() || (ability.behavior.indexOf('DOTA_ABILITY_BEHAVIOR_PASSIVE') != -1))) {\n                if (!(ability.name in self.abilityData)) {\n                    for (var j = 0; j < self._abilities[i].attributes.length; j++) {\n                        var attribute = self._abilities[i].attributes[j];\n                        switch(attribute.name) {\n                            // bane_enfeeble\n                            case 'enfeeble_attack_reduction':\n                                totalAttribute += self.getAbilityAttributeValue(self._abilities[i].attributes, attribute.name, ability.level());\n                            break;\n                        }\n                    }\n                }\n                else if (ability.bonusDamageReduction != undefined) {\n                    // rubick_fade_bolt,razor_static_link\n                    totalAttribute+=ability.bonusDamageReduction();\n                }\n            }\n        }\n        return totalAttribute;\n    });\n    \n    self.getBonusDamageReductionPct = ko.computed(function () {\n        var totalAttribute = 1;\n        for (var i = 0; i < self.abilities().length; i++) {\n            var ability = self._abilities[i];\n            if (ability.level() > 0 && (ability.isActive() || (ability.behavior.indexOf('DOTA_ABILITY_BEHAVIOR_PASSIVE') != -1))) {\n                if (!(ability.name in self.abilityData)) {\n                    for (var j = 0; j < self._abilities[i].attributes.length; j++) {\n                        var attribute = self._abilities[i].attributes[j];\n                        switch(attribute.name) {\n                            // medusa_split_shot\n                            case 'damage_modifier':\n                                totalAttribute *= (1 + self.getAbilityAttributeValue(self._abilities[i].attributes, attribute.name, ability.level())/100);\n                            break;\n                            // windrunner_focusfire\n                            case 'focusfire_damage_reduction':\n                                if (!self.hasScepter()) {\n                                    totalAttribute *= (1 + self.getAbilityAttributeValue(self._abilities[i].attributes, attribute.name, ability.level())/100);\n                                }\n                            break;\n                            case 'focusfire_damage_reduction_scepter':\n                                if (self.hasScepter()) {\n                                    totalAttribute *= (1 + self.getAbilityAttributeValue(self._abilities[i].attributes, attribute.name, ability.level())/100);\n                                }\n                            break;\n                        }\n                    }\n                }\n            }\n        }\n        return totalAttribute;\n    });\n\n    self.getDamageAmplification = ko.computed(function () {\n        var totalAttribute = 1;\n        for (var i = 0; i < self.abilities().length; i++) {\n            var ability = self._abilities[i];\n            if (ability.level() > 0 && (ability.isActive() || (ability.behavior.indexOf('DOTA_ABILITY_BEHAVIOR_PASSIVE') != -1))) {\n                /*if (!(ability.name in self.abilityData)) {\n                    if (ability.level() > 0 && (ability.isActive() || (ability.behavior.indexOf('DOTA_ABILITY_BEHAVIOR_PASSIVE') != -1))) {\n                        for (var j = 0; j < self._abilities[i].attributes.length; j++) {\n                            var attribute = self._abilities[i].attributes[j];\n                            switch(attribute.name) {\n                                // bane_enfeeble\n                                case 'enfeeble_attack_reduction':\n                                    totalAttribute += self.getAbilityAttributeValue(self._abilities[i].attributes, attribute.name, ability.level());\n                                break;\n                            }\n                        }\n                    }\n                }\n                else*/ if (ability.damageAmplification != undefined) {\n                        // undying_flesh_golem\n                        totalAttribute *= (1 + ability.damageAmplification()/100);\n                }\n            }\n        }\n        return totalAttribute;\n    });\n    \n    self.getDamageReduction = ko.computed(function () {\n        var totalAttribute = 1;\n        for (var i = 0; i < self.abilities().length; i++) {\n            var ability = self._abilities[i];\n            if (ability.level() > 0 && (ability.isActive() || (ability.behavior.indexOf('DOTA_ABILITY_BEHAVIOR_PASSIVE') != -1))) {\n                if (!(ability.name in self.abilityData)) {\n                    for (var j = 0; j < self._abilities[i].attributes.length; j++) {\n                        var attribute = self._abilities[i].attributes[j];\n                        switch(attribute.name) {\n                            // bloodseeker_bloodrage\n                            case 'damage_increase_pct':\n                                if (ability.name == 'bloodseeker_bloodrage') {\n                                    totalAttribute *= (1 + self.getAbilityAttributeValue(self._abilities[i].attributes, attribute.name, ability.level())/100);\n                                }\n                            break;\n                        }\n                    }\n                    // kunkka_ghostship\n                    if (ability.name == 'kunkka_ghostship') {\n                        totalAttribute *= (1 - 50/100);\n                    }\n                }\n                else if (ability.damageReduction != undefined) {\n                    // wisp_overcharge,bristleback_bristleback,spectre_dispersion,medusa_mana_shield,ursa_enrage\n                    totalAttribute *= (1 + ability.damageReduction()/100);\n                }\n            }\n        }\n        return totalAttribute;\n    });\n\n    self.getCritSource = ko.computed(function () {\n        var sources = {};\n        for (var i = 0; i < self.abilities().length; i++) {\n            var ability = self._abilities[i];\n            if (ability.level() > 0 && (ability.isActive() || (ability.behavior.indexOf('DOTA_ABILITY_BEHAVIOR_PASSIVE') != -1))) {\n                if (!(ability.name in self.abilityData)) {\n                    switch(ability.name) {\n                        // phantom_assassin_coup_de_grace,brewmaster_drunken_brawler,chaos_knight_chaos_strike,lycan_shapeshift,skeleton_king_mortal_strike,juggernaut_blade_dance,alpha_wolf_critical_strike,giant_wolf_critical_strike\n                        case 'phantom_assassin_coup_de_grace':\n                            if (sources[ability.name] == undefined) {\n                                sources[ability.name] = {\n                                    'chance': self.getAbilityAttributeValue(self._abilities[i].attributes, 'crit_chance', ability.level())/100,\n                                    'multiplier': self.getAbilityAttributeValue(self._abilities[i].attributes, 'crit_bonus', ability.level())/100,\n                                    'count': 1,\n                                    'displayname': ability.displayname\n                                }\n                            }\n                            else {\n                                sources[ability.name].count += 1;\n                            }\n                        break;\n                        case 'brewmaster_drunken_brawler':\n                            if (sources[ability.name] == undefined) {\n                                sources[ability.name] = {\n                                    'chance': self.getAbilityAttributeValue(self._abilities[i].attributes, 'crit_chance', ability.level())/100,\n                                    'multiplier': self.getAbilityAttributeValue(self._abilities[i].attributes, 'crit_multiplier', ability.level())/100,\n                                    'count': 1,\n                                    'displayname': ability.displayname\n                                }\n                            }\n                            else {\n                                sources[ability.name].count += 1;\n                            }\n                        break;\n                        case 'chaos_knight_chaos_strike':\n                        case 'lycan_shapeshift':\n                            if (sources[ability.name] == undefined) {\n                                sources[ability.name] = {\n                                    'chance': self.getAbilityAttributeValue(self._abilities[i].attributes, 'crit_chance', ability.level())/100,\n                                    'multiplier': self.getAbilityAttributeValue(self._abilities[i].attributes, 'crit_multiplier', ability.level())/100,\n                                    'count': 1,\n                                    'displayname': ability.displayname\n                                }\n                            }\n                            else {\n                                sources[ability.name].count += 1;\n                            }\n                        break;\n                        case 'skeleton_king_mortal_strike':\n                            if (sources[ability.name] == undefined) {\n                                sources[ability.name] = {\n                                    'chance': self.getAbilityAttributeValue(self._abilities[i].attributes, 'crit_chance', ability.level())/100,\n                                    'multiplier': self.getAbilityAttributeValue(self._abilities[i].attributes, 'crit_mult', ability.level())/100,\n                                    'count': 1,\n                                    'displayname': ability.displayname\n                                }\n                            }\n                            else {\n                                sources[ability.name].count += 1;\n                            }\n                        break;\n                        case 'juggernaut_blade_dance':\n                            if (sources[ability.name] == undefined) {\n                                sources[ability.name] = {\n                                    'chance': self.getAbilityAttributeValue(self._abilities[i].attributes, 'blade_dance_crit_chance', ability.level())/100,\n                                    'multiplier': self.getAbilityAttributeValue(self._abilities[i].attributes, 'blade_dance_crit_mult', ability.level())/100,\n                                    'count': 1,\n                                    'displayname': ability.displayname\n                                }\n                            }\n                            else {\n                                sources[ability.name].count += 1;\n                            }\n                        break;\n                        case 'alpha_wolf_critical_strike':\n                        case 'giant_wolf_critical_strike':\n                            if (sources[ability.name] == undefined) {\n                                sources[ability.name] = {\n                                    'chance': self.getAbilityAttributeValue(self._abilities[i].attributes, 'crit_chance', ability.level())/100,\n                                    'multiplier': self.getAbilityAttributeValue(self._abilities[i].attributes, 'crit_mult', ability.level())/100,\n                                    'count': 1,\n                                    'displayname': ability.displayname\n                                }\n                            }\n                            else {\n                                sources[ability.name].count += 1;\n                            }\n                        break;\n                    }\n                }\n            }\n        }\n        return sources;\n    });    \n\n    self.getCleaveSource = ko.computed(function () {\n        var sources = {};\n        for (var i = 0; i < self.abilities().length; i++) {\n            var ability = self._abilities[i];\n            if (ability.level() > 0 && (ability.isActive() || (ability.behavior.indexOf('DOTA_ABILITY_BEHAVIOR_PASSIVE') != -1))) {\n                if (!(ability.name in self.abilityData)) {\n                    switch(ability.name) {\n                        // magnataur_empower\n                        case 'magnataur_empower':\n                            if (sources[ability.name] == undefined) {\n                                sources[ability.name] = {\n                                    'radius': self.getAbilityAttributeValue(self._abilities[i].attributes, 'cleave_radius', ability.level()),\n                                    'magnitude': self.getAbilityAttributeValue(self._abilities[i].attributes, 'cleave_damage_pct', ability.level())/100,\n                                    'count': 1,\n                                    'displayname': ability.displayname\n                                }\n                            }\n                            else {\n                                sources[ability.name].count += 1;\n                            }\n                        break;\n                        // sven_great_cleave\n                        case 'sven_great_cleave':\n                            if (sources[ability.name] == undefined) {\n                                sources[ability.name] = {\n                                    'radius': self.getAbilityAttributeValue(self._abilities[i].attributes, 'great_cleave_radius', ability.level()),\n                                    'magnitude': self.getAbilityAttributeValue(self._abilities[i].attributes, 'great_cleave_damage', ability.level())/100,\n                                    'count': 1,\n                                    'displayname': ability.displayname\n                                }\n                            }\n                            else {\n                                sources[ability.name].count += 1;\n                            }\n                        break;\n                        // kunkka_tidebringer\n                        case 'kunkka_tidebringer':\n                            if (sources[ability.name] == undefined) {\n                                sources[ability.name] = {\n                                    'radius': self.getAbilityAttributeValue(self._abilities[i].attributes, 'radius', ability.level()),\n                                    'magnitude': 1,\n                                    'count': 1,\n                                    'displayname': ability.displayname\n                                }\n                            }\n                            else {\n                                sources[ability.name].count += 1;\n                            }\n                        break;\n                        // tiny_grow\n                        case 'tiny_grow':\n                            if (self.hasScepter()) {\n                                if (sources[ability.name] == undefined) {\n                                    sources[ability.name] = {\n                                        'radius': self.getAbilityAttributeValue(self._abilities[i].attributes, 'bonus_cleave_radius_scepter', ability.level()),\n                                        'magnitude': self.getAbilityAttributeValue(self._abilities[i].attributes, 'bonus_cleave_damage_scepter', ability.level())/100,\n                                        'count': 1,\n                                        'displayname': ability.displayname\n                                    }\n                                }\n                                else {\n                                    sources[ability.name].count += 1;\n                                }\n                            }\n                        break;\n                    }\n                }\n            }\n        }\n        return sources;\n    });    \n    \n    self.getCritChance = ko.computed(function () {\n        var totalAttribute = 1;\n        for (var i = 0; i < self.abilities().length; i++) {\n            var ability = self._abilities[i];\n            if (ability.level() > 0 && (ability.isActive() || (ability.behavior.indexOf('DOTA_ABILITY_BEHAVIOR_PASSIVE') != -1))) {\n                if (!(ability.name in self.abilityData)) {\n                    for (var j = 0; j < self._abilities[i].attributes.length; j++) {\n                        var attribute = self._abilities[i].attributes[j];\n                        switch(attribute.name) {\n                            // phantom_assassin_coup_de_grace,brewmaster_drunken_brawler,chaos_knight_chaos_strike,lycan_shapeshift,skeleton_king_mortal_strike\n                            case 'crit_chance':\n                                totalAttribute *= (1 - self.getAbilityAttributeValue(self._abilities[i].attributes, attribute.name, ability.level())/100);\n                            break;\n                        }\n                    }\n                }\n            }\n        }\n        return totalAttribute;\n    });            \n    \n    self.getEvasion = ko.computed(function () {\n        var totalAttribute = 1;\n        for (var i = 0; i < self.abilities().length; i++) {\n            var ability = self._abilities[i];\n            if (ability.level() > 0 && (ability.isActive() || (ability.behavior.indexOf('DOTA_ABILITY_BEHAVIOR_PASSIVE') != -1))) {\n                if (!(ability.name in self.abilityData)) {\n                    for (var j = 0; j < self._abilities[i].attributes.length; j++) {\n                        var attribute = self._abilities[i].attributes[j];\n                        switch(attribute.name) {\n                            // phantom_assassin_blur\n                            case 'bonus_evasion':\n                            // brewmaster_drunken_brawler\n                            case 'dodge_chance':\n                                totalAttribute *= (1 - self.getAbilityAttributeValue(self._abilities[i].attributes, attribute.name, ability.level())/100);\n                            break;\n                        }\n                    }\n                }\n            }\n        }\n        return totalAttribute;\n    });\n    \n    self.getEvasionBacktrack = ko.computed(function () {\n        var totalAttribute = 1;\n        for (var i = 0; i < self.abilities().length; i++) {\n            var ability = self._abilities[i];\n            if (ability.level() > 0 && (ability.isActive() || (ability.behavior.indexOf('DOTA_ABILITY_BEHAVIOR_PASSIVE') != -1))) {\n                if (!(ability.name in self.abilityData)) {\n                    for (var j = 0; j < self._abilities[i].attributes.length; j++) {\n                        var attribute = self._abilities[i].attributes[j];\n                        switch(attribute.name) {\n                            // faceless_void_backtrack\n                            case 'dodge_chance_pct':\n                                totalAttribute *= (1 - self.getAbilityAttributeValue(self._abilities[i].attributes, attribute.name, ability.level())/100);\n                            break;\n                        }\n                    }\n                }\n            }\n        }\n        return totalAttribute;\n    });\n    \n    self.getMissChance = ko.computed(function () {\n        var totalAttribute = 1;\n        for (var i = 0; i < self.abilities().length; i++) {\n            var ability = self._abilities[i];\n            if (ability.level() > 0 && (ability.isActive() || (ability.behavior.indexOf('DOTA_ABILITY_BEHAVIOR_PASSIVE') != -1))) {\n                if (!(ability.name in self.abilityData)) {\n                    for (var j = 0; j < self._abilities[i].attributes.length; j++) {\n                        var attribute = self._abilities[i].attributes[j];\n                        switch(attribute.name) {\n                            // broodmother_incapacitating_bite,brewmaster_drunken_haze\n                            case 'miss_chance':\n                            // riki_smoke_screen,keeper_of_the_light_blinding_light,tinker_laser\n                            case 'miss_rate':\n                                totalAttribute *= (1 - self.getAbilityAttributeValue(self._abilities[i].attributes, attribute.name, ability.level())/100);\n                            break;\n                        }\n                    }\n                }\n                else if (ability.missChance != undefined) {\n                    // night_stalker_crippling_fear\n                    totalAttribute*=(1-ability.missChance()/100);\n                }\n            }\n        }\n        return totalAttribute;\n    });\n    \n    self.getLifesteal = ko.computed(function () {\n        var totalAttribute = 0;\n        for (var i = 0; i < self.abilities().length; i++) {\n            var ability = self._abilities[i];\n            if (ability.level() > 0 && (ability.isActive() || (ability.behavior.indexOf('DOTA_ABILITY_BEHAVIOR_PASSIVE') != -1))) {\n                if (!(ability.name in self.abilityData)) {\n                    for (var j = 0; j < self._abilities[i].attributes.length; j++) {\n                        var attribute = self._abilities[i].attributes[j];\n                        switch(attribute.name) {\n                            // skeleton_king_vampiric_aura\n                            case 'vampiric_aura':\n                            // broodmother_insatiable_hunger\n                            case 'lifesteal_pct':\n                                totalAttribute += self.getAbilityAttributeValue(self._abilities[i].attributes, attribute.name, ability.level());\n                            break;\n                        }\n                    }\n                }\n                else if (ability.lifesteal != undefined) {\n                    // life_stealer_open_wounds\n                    totalAttribute+=ability.lifesteal();\n                }\n            }\n        }\n        return totalAttribute;\n    });\n    \n    self.getMagicResist = ko.computed(function () {\n        var totalAttribute = 1;\n        for (var i = 0; i < self.abilities().length; i++) {\n            var ability = self._abilities[i];\n            if (ability.level() > 0 && (ability.isActive() || (ability.behavior.indexOf('DOTA_ABILITY_BEHAVIOR_PASSIVE') != -1))) {\n                if (!(ability.name in self.abilityData)) {\n                    for (var j = 0; j < self._abilities[i].attributes.length; j++) {\n                        var attribute = self._abilities[i].attributes[j];\n                        switch(attribute.name) {\n                            // antimage_spell_shield\n                            case 'spell_shield_resistance':\n                                totalAttribute *= (1 - self.getAbilityAttributeValue(self._abilities[i].attributes, attribute.name, ability.level())/100);\n                            break;\n                            // phantom_lancer_phantom_edge\n                            case 'magic_resistance_pct':\n                                if (ability.name == 'phantom_lancer_phantom_edge') {\n                                    totalAttribute *= (1 - self.getAbilityAttributeValue(self._abilities[i].attributes, attribute.name, ability.level())/100);\n                                }\n                            break;\n                            // rubick_null_field\n                            case 'magic_damage_reduction_pct':\n                                if (ability.name == 'rubick_null_field') {\n                                    totalAttribute *= (1 - self.getAbilityAttributeValue(self._abilities[i].attributes, attribute.name, ability.level())/100);\n                                }\n                            break;\n                        }\n                    }\n                }\n                else if (ability.magicResist != undefined) {\n                    // huskar_berserkers_blood,viper_corrosive_skin,visage_gravekeepers_cloak\n                    totalAttribute *= (1 - ability.magicResist()/100);\n                }\n            }\n        }\n        return totalAttribute;\n    });\n\n    self.getMagicResistReduction = ko.computed(function () {\n        var totalAttribute = 1;\n        for (var i = 0; i < self.abilities().length; i++) {\n            var ability = self._abilities[i];\n            if (ability.level() > 0 && (ability.isActive() || (ability.behavior.indexOf('DOTA_ABILITY_BEHAVIOR_PASSIVE') != -1))) {\n                if (!(ability.name in self.abilityData)) {\n                    for (var j = 0; j < self._abilities[i].attributes.length; j++) {\n                        var attribute = self._abilities[i].attributes[j];\n                        switch(attribute.name) {\n                            // ancient_apparition_ice_vortex\n                            case 'spell_resist_pct':\n                            // pugna_decrepify\n                            case 'bonus_spell_damage_pct':\n                            // skywrath_mage_ancient_seal\n                            case 'resist_debuff':\n                                totalAttribute *= (1 - self.getAbilityAttributeValue(self._abilities[i].attributes, attribute.name, ability.level())/100);\n                            break;\n                            // elder_titan_natural_order\n                            case 'magic_resistance_pct':\n                                totalAttribute *= (1 - self.getAbilityAttributeValue(self._abilities[i].attributes, attribute.name, ability.level())/100);\n                            break;\n                        }\n                    }\n                }\n            }\n        }\n        return totalAttribute;\n    });\n    \n    self.getMovementSpeedFlat = ko.computed(function () {\n        var totalAttribute = 0;\n        for (var i = 0; i < self.abilities().length; i++) {\n            var ability = self._abilities[i];\n            if (ability.level() > 0 && (ability.isActive() || (ability.behavior.indexOf('DOTA_ABILITY_BEHAVIOR_PASSIVE') != -1))) {\n                if (!(ability.name in self.abilityData)) {\n                    for (var j = 0; j < self._abilities[i].attributes.length; j++) {\n                        var attribute = self._abilities[i].attributes[j];\n                        switch(attribute.name) {\n                            // alchemist_chemical_rage\n                            case 'bonus_movespeed':\n                                if (ability.name == 'alchemist_chemical_rage') {\n                                    totalAttribute += self.getAbilityAttributeValue(self._abilities[i].attributes, attribute.name, ability.level());\n                                }\n                            break;\n                            // tiny_grow\n                            case 'bonus_movement_speed':\n                                if (ability.name == 'tiny_grow') {\n                                    totalAttribute += self.getAbilityAttributeValue(self._abilities[i].attributes, attribute.name, ability.level());\n                                }\n                            break;\n                            // troll_warlord_berserkers_rage\n                            case 'bonus_move_speed':\n                                if (ability.name == 'troll_warlord_berserkers_rage') {\n                                    totalAttribute += self.getAbilityAttributeValue(self._abilities[i].attributes, attribute.name, ability.level());\n                                }                                \n                            break;\n                            // lone_druid_true_form\n                            case 'speed_loss':\n                                totalAttribute -= self.getAbilityAttributeValue(self._abilities[i].attributes, attribute.name, ability.level());\n                            break;\n                        }\n                    }\n                }\n                else if (ability.movementSpeedFlat != undefined) {\n                // dragon_knight_elder_dragon_form\n                    totalAttribute+=ability.movementSpeedFlat();\n                }\n            }\n        }\n        return totalAttribute;\n    });\n    \n    self.getMovementSpeedPercent = ko.computed(function () {\n        var totalAttribute = 0;\n        for (var i = 0; i < self.abilities().length; i++) {\n            var ability = self._abilities[i];\n            if (ability.level() > 0 && (ability.isActive() || (ability.behavior.indexOf('DOTA_ABILITY_BEHAVIOR_PASSIVE') != -1))) {\n                if (!(ability.name in self.abilityData)) {\n                    for (var j = 0; j < self._abilities[i].attributes.length; j++) {\n                        var attribute = self._abilities[i].attributes[j];\n                        switch(attribute.name) {\n                            // abaddon_frostmourne \n                            case 'move_speed_pct':\n                            // bounty_hunter_track \n                            case 'bonus_move_speed_pct':\n                            // mirana_leap \n                            case 'leap_speedbonus':\n                            // sven_warcry \n                            case 'warcry_movespeed':\n                            // clinkz_wind_walk\n                            case 'move_speed_bonus_pct':\n                            // windrunner_windrun\n                            case 'movespeed_bonus_pct':\n                                totalAttribute += self.getAbilityAttributeValue(self._abilities[i].attributes, attribute.name, ability.level())/100;\n                            break;\n                            // broodmother_spin_web,spectre_spectral_dagger\n                            case 'bonus_movespeed':\n                                if (ability.name == 'broodmother_spin_web' || ability.name == 'spectre_spectral_dagger') {\n                                    totalAttribute += self.getAbilityAttributeValue(self._abilities[i].attributes, attribute.name, ability.level())/100;\n                                }\n                            break;\n                            // axe_culling_blade,necronomicon_archer_aoe\n                            case 'speed_bonus':\n                                if (ability.name == 'axe_culling_blade' || ability.name == 'necronomicon_archer_aoe') {\n                                    totalAttribute += self.getAbilityAttributeValue(self._abilities[i].attributes, attribute.name, ability.level())/100;\n                                }\n                            break;\n                            // nyx_assassin_vendetta \n                            case 'movement_speed':\n                                if (ability.name == 'nyx_assassin_vendetta') {\n                                    totalAttribute += self.getAbilityAttributeValue(self._abilities[i].attributes, attribute.name, ability.level())/100;\n                                }\n                            break;\n                            // spirit_breaker_empowering_haste\n                            case 'bonus_movespeed_pct':\n                                if (ability.name == 'spirit_breaker_empowering_haste') {\n                                    totalAttribute += self.getAbilityAttributeValue(self._abilities[i].attributes, attribute.name, ability.level())/100;\n                                }\n                            break;\n                            // ogre_magi_bloodlust,death_prophet_witchcraft,kobold_taskmaster_speed_aura\n                            case 'bonus_movement_speed':\n                                if (ability.name == 'ogre_magi_bloodlust' || ability.name == 'death_prophet_witchcraft' || ability.name == 'kobold_taskmaster_speed_aura') {\n                                    totalAttribute += self.getAbilityAttributeValue(self._abilities[i].attributes, attribute.name, ability.level())/100;\n                                }\n                            break;\n                            // razor_unstable_current,phantom_lancer_doppelwalk\n                            case 'movement_speed_pct':\n                                if (ability.name == 'razor_unstable_current' || ability.name == 'phantom_lancer_doppelwalk') {\n                                    totalAttribute += self.getAbilityAttributeValue(self._abilities[i].attributes, attribute.name, ability.level())/100;\n                                }\n                            break;\n                            // treant_natures_guise,lone_druid_rabid\n                            case 'bonus_move_speed':\n                                if (ability.name == 'treant_natures_guise' || ability.name == 'lone_druid_rabid') {\n                                    totalAttribute += self.getAbilityAttributeValue(self._abilities[i].attributes, attribute.name, ability.level())/100;\n                                }\n                            break;\n                            // wisp_tether\n                            case 'movespeed':\n                                if (ability.name == 'wisp_tether') {\n                                    totalAttribute += self.getAbilityAttributeValue(self._abilities[i].attributes, attribute.name, ability.level())/100;\n                                }\n                            break;\n                            // kunkka_ghostship,visage_grave_chill\n                            case 'movespeed_bonus':\n                                if (ability.name == 'kunkka_ghostship' || ability.name == 'visage_grave_chill') {\n                                    totalAttribute += self.getAbilityAttributeValue(self._abilities[i].attributes, attribute.name, ability.level())/100;\n                                }                                \n                            break;\n                        }\n                    }\n                }\n                else if (ability.movementSpeedPct != undefined) {\n                // axe_battle_hunger,bristleback_warpath,spirit_breaker_greater_bash,lina_fiery_soul,invoker_ghost_walk,invoker_wex,elder_titan_ancestral_spirit\n                    totalAttribute+=ability.movementSpeedPct()/100;\n                }\n            }\n        }\n        return totalAttribute;\n    });\n\n    self.getMovementSpeedPercentReduction = ko.computed(function () {\n        var totalAttribute = 0;\n        for (var i = 0; i < self.abilities().length; i++) {\n            var ability = self._abilities[i];\n            if (ability.level() > 0 && (ability.isActive() || (ability.behavior.indexOf('DOTA_ABILITY_BEHAVIOR_PASSIVE') != -1))) {\n                if (!(ability.name in self.abilityData)) {\n                    for (var j = 0; j < self._abilities[i].attributes.length; j++) {\n                        var attribute = self._abilities[i].attributes[j];\n                        switch(attribute.name) {\n                            // crystal_maiden_freezing_field\n                            case 'movespeed_slow':\n                                if (ability.name == 'crystal_maiden_freezing_field' && !self.hasScepter()) {\n                                    totalAttribute += self.getAbilityAttributeValue(self._abilities[i].attributes, attribute.name, ability.level())/100;\n                                }\n                            break;\n                            case 'movespeed_slow_scepter':\n                                if (ability.name == 'crystal_maiden_freezing_field' && self.hasScepter()) {\n                                    totalAttribute += self.getAbilityAttributeValue(self._abilities[i].attributes, attribute.name, ability.level())/100;\n                                }\n                            break;\n                            // elder_titan_earth_splitter,magnataur_skewer,abaddon_frostmourne \n                            case 'slow_pct':\n                                totalAttribute -= self.getAbilityAttributeValue(self._abilities[i].attributes, attribute.name, ability.level())/100;\n                            break;\n                            // night_stalker_void,crystal_maiden_crystal_nova,ghost_frost_attack,ogre_magi_frost_armor,polar_furbolg_ursa_warrior_thunder_clap\n                            case 'movespeed_slow':\n                                if (ability.name != 'crystal_maiden_freezing_field') {\n                                    totalAttribute += self.getAbilityAttributeValue(self._abilities[i].attributes, attribute.name, ability.level())/100;\n                                }\n                            break;\n                            // lich_frost_armor,lich_frost_nova,enchantress_enchant\n                            case 'slow_movement_speed':\n                            // beastmaster_primal_roar\n                            case 'slow_movement_speed_pct':\n                            // drow_ranger_frost_arrows\n                            case 'frost_arrows_movement_speed':\n                            // skeleton_king_hellfire_blast\n                            case 'blast_slow':\n                            // slardar_slithereen_crush\n                            case 'crush_extra_slow':\n                            // storm_spirit_overload:\n                            case 'overload_move_slow':\n                            // windrunner_windrun\n                            case 'enemy_movespeed_bonus_pct':\n                                totalAttribute += self.getAbilityAttributeValue(self._abilities[i].attributes, attribute.name, ability.level())/100;\n                            break;\n                            // phantom_assassin_stifling_dagger,tusk_frozen_sigil\n                            case 'move_slow':\n                                if (ability.name == 'phantom_assassin_stifling_dagger') {\n                                    totalAttribute += self.getAbilityAttributeValue(self._abilities[i].attributes, attribute.name, ability.level())/100;\n                                }\n                                else if (ability.name == 'tusk_frozen_sigil') {\n                                    totalAttribute -= self.getAbilityAttributeValue(self._abilities[i].attributes, attribute.name, ability.level())/100;\n                                }\n                            break;\n                            // invoker_ice_wall,medusa_stone_gaze,wisp_tether\n                            case 'slow':\n                                if (ability.name == 'medusa_stone_gaze') {\n                                    totalAttribute -= self.getAbilityAttributeValue(self._abilities[i].attributes, attribute.name, ability.level())/100;\n                                }\n                                else {\n                                    totalAttribute += self.getAbilityAttributeValue(self._abilities[i].attributes, attribute.name, ability.level())/100;\n                                }\n                            break;\n                            // broodmother_incapacitating_bite,bounty_hunter_jinada,spectre_spectral_dagger,winter_wyvern_arctic_burn\n                            case 'bonus_movespeed':\n                                if (ability.name == 'broodmother_incapacitating_bite' || ability.name == 'bounty_hunter_jinada' || ability.name == 'winter_wyvern_arctic_burn' || ability.name == 'winter_wyvern_splinter_blast') {\n                                    totalAttribute += self.getAbilityAttributeValue(self._abilities[i].attributes, attribute.name, ability.level())/100;\n                                }\n                                else if (ability.name == 'spectre_spectral_dagger') {\n                                    totalAttribute -= self.getAbilityAttributeValue(self._abilities[i].attributes, attribute.name, ability.level())/100;\n                                }\n                            break;\n                            // omniknight_degen_aura\n                            case 'speed_bonus':\n                                if (ability.name == 'omniknight_degen_aura') {\n                                    totalAttribute += self.getAbilityAttributeValue(self._abilities[i].attributes, attribute.name, ability.level())/100;\n                                }\n                            break;\n                            // tidehunter_gush\n                            case 'movement_speed':\n                                if (ability.name == 'tidehunter_gush') {\n                                    totalAttribute += self.getAbilityAttributeValue(self._abilities[i].attributes, attribute.name, ability.level())/100;\n                                }\n                            break;\n                            // pugna_decrepify,chen_penitence\n                            case 'bonus_movement_speed':\n                                if (ability.name == 'pugna_decrepify' || ability.name == 'chen_penitence') {\n                                    totalAttribute += self.getAbilityAttributeValue(self._abilities[i].attributes, attribute.name, ability.level())/100;\n                                }\n                            break;\n                            // ancient_apparition_ice_vortex,phantom_lancer_spirit_lance,skywrath_mage_concussive_shot,faceless_void_time_walk\n                            case 'movement_speed_pct':\n                                if (ability.name == 'ancient_apparition_ice_vortex' || ability.name == 'phantom_lancer_spirit_lance' || ability.name == 'faceless_void_time_walk') {\n                                    totalAttribute += self.getAbilityAttributeValue(self._abilities[i].attributes, attribute.name, ability.level())/100;\n                                }\n                                else if (ability.name == 'skywrath_mage_concussive_shot') {\n                                    totalAttribute -= self.getAbilityAttributeValue(self._abilities[i].attributes, attribute.name, ability.level())/100;\n                                }\n                            break;\n                            // razor_unstable_current\n                            case 'slow_amount':\n                                if (ability.name == 'razor_unstable_current') {\n                                    totalAttribute += self.getAbilityAttributeValue(self._abilities[i].attributes, attribute.name, ability.level())/100;\n                                }\n                            break;\n                            // brewmaster_drunken_haze,brewmaster_thunder_clap,treant_leech_seed\n                            case 'movement_slow':\n                                if (ability.name == 'brewmaster_drunken_haze' || ability.name == 'brewmaster_thunder_clap') {\n                                    totalAttribute -= self.getAbilityAttributeValue(self._abilities[i].attributes, attribute.name, ability.level())/100;\n                                }\n                                else if (ability.name == 'ursa_earthshock' || ability.name == 'treant_leech_seed') {\n                                    totalAttribute += self.getAbilityAttributeValue(self._abilities[i].attributes, attribute.name, ability.level())/100;\n                                }\n                            break;\n                            // skeleton_king_reincarnation\n                            case 'movespeed':\n                                if (ability.name == 'skeleton_king_reincarnation') {\n                                    totalAttribute += self.getAbilityAttributeValue(self._abilities[i].attributes, attribute.name, ability.level())/100;\n                                }\n                            break;\n                            // kunkka_torrent,visage_grave_chill\n                            case 'movespeed_bonus':\n                                if (ability.name == 'kunkka_torrent') {\n                                    totalAttribute += self.getAbilityAttributeValue(self._abilities[i].attributes, attribute.name, ability.level())/100;\n                                }\n                                else if (ability.name == 'visage_grave_chill') {\n                                    totalAttribute -= self.getAbilityAttributeValue(self._abilities[i].attributes, attribute.name, ability.level())/100;\n                                }\n                            break;\n                        }\n                    }\n                    if (ability.name == 'satyr_trickster_purge') {\n                        totalAttribute -= 80/100;\n                    }\n                    else if (ability.name == 'enraged_wildkin_tornado') {\n                        totalAttribute -= 15/100;\n                    }\n                }\n                else if (ability.movementSpeedPctReduction != undefined) {\n                    // axe_battle_hunger,batrider_sticky_napalm,shredder_chakram,meepo_geostrike,life_stealer_open_wounds,\n                    // venomancer_poison_sting,viper_viper_strike,viper_corrosive_skin,viper_poison_attack,venomancer_venomous_gale,treant_leech_seed\n                    // lich_chain_frost,sniper_shrapnel,centaur_stampede,huskar_life_break,jakiro_dual_breath,meepo_geostrike,sandking_epicenter\n                    // earth_spirit_rolling_boulder,invoker_ghost_walk,invoker_ice_wall,elder_titan_earth_splitter\n                    // undying_flesh_golem,templar_assassin_psionic_trap,nevermore_requiem,queenofpain_shadow_strike\n                    totalAttribute+=ability.movementSpeedPctReduction()/100;\n                }\n            }\n        }\n        return totalAttribute;\n    });\n\n    self.getTurnRateReduction = ko.computed(function () {\n        var totalAttribute = 0;\n        for (var i = 0; i < self.abilities().length; i++) {\n            var ability = self._abilities[i];\n            if (ability.level() > 0 && (ability.isActive() || (ability.behavior.indexOf('DOTA_ABILITY_BEHAVIOR_PASSIVE') != -1))) {\n                if (!(ability.name in self.abilityData)) {\n                    for (var j = 0; j < self._abilities[i].attributes.length; j++) {\n                        var attribute = self._abilities[i].attributes[j];\n                        switch(attribute.name) {\n                            // medusa_stone_gaze\n                            case 'slow':\n                                if (ability.name == 'medusa_stone_gaze') {\n                                    totalAttribute -= self.getAbilityAttributeValue(self._abilities[i].attributes, attribute.name, ability.level())/100;\n                                }\n                            break;\n                        }\n                    }\n                }\n                else if (ability.turnRateReduction != undefined) {\n                    // batrider_sticky_napalm\n                    totalAttribute+=ability.turnRateReduction()/100;\n                }\n            }\n        }\n        return totalAttribute;\n    });\n    \n    self.getVisionRangeNight = ko.computed(function () {\n        var totalAttribute = 0;\n        for (var i = 0; i < self.abilities().length; i++) {\n            var ability = self._abilities[i];\n            if (ability.level() > 0 && (ability.isActive() || (ability.behavior.indexOf('DOTA_ABILITY_BEHAVIOR_PASSIVE') != -1))) {\n                if (!(ability.name in self.abilityData)) {\n                    for (var j = 0; j < self._abilities[i].attributes.length; j++) {\n                        var attribute = self._abilities[i].attributes[j];\n                        switch(attribute.name) {\n                            // winter_wyvern_arctic_burn\n                            case 'night_vision_bonus':\n                            // lycan_shapeshift,luna_lunar_blessing\n                            case 'bonus_night_vision':\n                                totalAttribute += self.getAbilityAttributeValue(self._abilities[i].attributes, attribute.name, ability.level());\n                            break;\n                        }\n                    }\n                }\n                else if (ability.visionnight != undefined) {\n                    // \n                    totalAttribute+=ability.visionnight();\n                }\n            }\n        }\n        return totalAttribute;\n    });\n\n    self.getVisionRangePctReduction = ko.computed(function () {\n        var totalAttribute = 0;\n        for (var i = 0; i < self.abilities().length; i++) {\n            var ability = self._abilities[i];\n            if (ability.level() > 0 && (ability.isActive() || (ability.behavior.indexOf('DOTA_ABILITY_BEHAVIOR_PASSIVE') != -1))) {\n                if (!(ability.name in self.abilityData)) {\n                    for (var j = 0; j < self._abilities[i].attributes.length; j++) {\n                        var attribute = self._abilities[i].attributes[j];\n                        switch(attribute.name) {\n                            // night_stalker_darkness\n                            case 'blind_percentage':\n                                totalAttribute += self.getAbilityAttributeValue(self._abilities[i].attributes, attribute.name, ability.level())/100;\n                            break;\n                        }\n                    }\n                }\n            }\n        }\n        return totalAttribute;\n    });\n\n    self.setEvasion = ko.computed(function () {\n        var totalAttribute = 0;\n        for (var i = 0; i < self.abilities().length; i++) {\n            var ability = self._abilities[i];\n            if (ability.level() > 0 && (ability.isActive() || (ability.behavior.indexOf('DOTA_ABILITY_BEHAVIOR_PASSIVE') != -1))) {\n                if (ability.name == 'windrunner_windrun') {\n                    return 1;\n                }\n            }\n        }\n        return totalAttribute;\n    });\n    \n    self.setMovementSpeed = ko.computed(function () {\n        var MAX_MOVESPEED = 522;\n        var MIN_MOVESPEED = 100;\n        var totalAttribute = 0;\n        for (var i = 0; i < self.abilities().length; i++) {\n            var ability = self._abilities[i];\n            if (ability.level() > 0 && (ability.isActive() || (ability.behavior.indexOf('DOTA_ABILITY_BEHAVIOR_PASSIVE') != -1))) {\n                if (ability.name == 'spirit_breaker_charge_of_darkness') {\n                    return self.getAbilityAttributeValue(ability.attributes, 'movement_speed', ability.level());\n                }\n                if (ability.name == 'dark_seer_surge') {\n                    return MAX_MOVESPEED;\n                }\n                if (ability.name == 'centaur_stampede') {\n                    return MAX_MOVESPEED;\n                }\n                if (ability.name == 'lycan_shapeshift') {\n                    return MAX_MOVESPEED;\n                }\n                if (ability.name == 'lion_voodoo' || ability.name == 'shadow_shaman_voodoo') {\n                    return MIN_MOVESPEED;\n                }\n            }\n        }\n        return totalAttribute;\n    });\n\n    self.getBashSource = function (attacktype) {\n        var sources = {};\n        for (var i = 0; i < self.abilities().length; i++) {\n            var ability = self._abilities[i];\n            if (ability.level() > 0 && (ability.isActive() || (ability.behavior.indexOf('DOTA_ABILITY_BEHAVIOR_PASSIVE') != -1))) {\n                if (!(ability.name in self.abilityData)) {\n                    for (var j = 0; j < self._abilities[i].attributes.length; j++) {\n                        var attribute = self._abilities[i].attributes[j];\n                        switch(attribute.name) {\n                            // sniper_headshot\n                            case 'proc_chance':\n                                if (sources[ability.name] == undefined && ability.name == 'sniper_headshot') {\n                                    sources[ability.name] = {\n                                        'chance': self.getAbilityAttributeValue(ability.attributes, attribute.name, ability.level())/100,\n                                        'damage': self.getAbilityPropertyValue(ability, 'damage'),\n                                        'count': 1,\n                                        'damageType': 'physical',\n                                        'displayname': ability.displayname\n                                    }\n                                }\n                            break;\n                            // slardar_bash\n                            case 'chance':\n                                if (sources[ability.name] == undefined && ability.name == 'slardar_bash') {\n                                    sources[ability.name] = {\n                                        'chance': self.getAbilityAttributeValue(ability.attributes, attribute.name, ability.level())/100,\n                                        'damage': self.getAbilityAttributeValue(ability.attributes, 'bonus_damage', ability.level()),\n                                        'count': 1,\n                                        'damageType': 'physical',\n                                        'displayname': ability.displayname\n                                    }\n                                }\n                            break;\n                        }\n                    }\n                }\n                else if (ability.bashBonusDamage != undefined) {\n                    // faceless_void_time_lock\n                    if (sources[ability.name] == undefined && ability.name == 'faceless_void_time_lock') {\n                        sources[ability.name] = {\n                            'chance': ability.bash()/100,\n                            'damage': ability.bashBonusDamage(),\n                            'count': 1,\n                            'damageType': 'magic',\n                            'displayname': ability.displayname\n                        }\n                    }\n                    // spirit_breaker_greater_bash\n                    if (sources[ability.name] == undefined && ability.name == 'spirit_breaker_greater_bash') {\n                        sources[ability.name] = {\n                            'chance': ability.bash()/100,\n                            'damage': ability.bashBonusDamage()/100,\n                            'count': 1,\n                            'damageType': 'magic',\n                            'displayname': ability.displayname\n                        }\n                    }\n                }\n            }\n        }\n\n        return sources;\n    };\n    \n    self.getOrbSource = function () {\n        var sources = {};\n        for (var i = 0; i < self.abilities().length; i++) {\n            var ability = self._abilities[i];\n            if (ability.level() > 0 && (ability.isActive() || (ability.behavior.indexOf('DOTA_ABILITY_BEHAVIOR_PASSIVE') != -1))) {\n                if (!(ability.name in self.abilityData)) {\n                    for (var j = 0; j < self._abilities[i].attributes.length; j++) {\n                        var attribute = self._abilities[i].attributes[j];\n                        switch(attribute.name) {\n                            // antimage_mana_break\n                            case 'mana_per_hit':\n                                if (sources[ability.name] == undefined && ability.name == 'antimage_mana_break') {\n                                    sources[ability.name] = {\n                                        'damage': self.getAbilityAttributeValue(ability.attributes, attribute.name, ability.level()) \n                                                * self.getAbilityAttributeValue(ability.attributes, 'damage_per_burn', ability.level()),\n                                        'damageType': 'physical',\n                                        'displayname': ability.displayname\n                                    }\n                                }\n                            break;\n                            // clinkz_searing_arrows\n                            case 'damage_bonus':\n                                if (sources[ability.name] == undefined && ability.name == 'clinkz_searing_arrows') {\n                                    sources[ability.name] = {\n                                        'damage': self.getAbilityAttributeValue(ability.attributes, attribute.name, ability.level()),\n                                        'damageType': 'physical',\n                                        'displayname': ability.displayname\n                                    }\n                                }\n                            // silencer_glaives_of_wisdom\n                            case 'intellect_damage_pct':\n                                if (sources[ability.name] == undefined && ability.name == 'silencer_glaives_of_wisdom') {\n                                    sources[ability.name] = {\n                                        'damage': self.getAbilityAttributeValue(ability.attributes, attribute.name, ability.level())/100 * self.hero.totalInt(),\n                                        'damageType': 'pure',\n                                        'displayname': ability.displayname\n                                    }\n                                }\n                            break;\n                        }\n                    }\n                }\n                else if (ability.bonusDamageOrb != undefined) {\n                    // obsidian_destroyer_arcane_orb\n                    if (sources[ability.name] == undefined && ability.name == 'obsidian_destroyer_arcane_orb') {\n                        sources[ability.name] = {\n                            'damage': ability.bonusDamageOrb(),\n                            'damageType': 'pure',\n                            'displayname': ability.displayname\n                        }\n                    }\n                }\n            }\n        }\n        \n        return sources;\n    };\n    \n    self.toggleAbility = function (index, data, event) {\n        if (self.abilities()[index()].behavior.indexOf('DOTA_ABILITY_BEHAVIOR_PASSIVE') < 0) {\n            if (self.abilities()[index()].isActive()) {\n                self.abilities()[index()].isActive(false);\n            }\n            else {\n                self.abilities()[index()].isActive(true);\n            }\n            \n            if (self.abilities()[index()].name == 'lycan_shapeshift') {\n                self.isShapeShiftActive(self.abilities()[index()].isActive());\n            }\n        }\n    }.bind(this);\n\n    self.toggleAbilityDetail = function (index, data, event) {\n        if (self.abilities()[index()].isDetail()) {\n            self.abilities()[index()].isDetail(false);\n        }\n        else {\n            self.abilities()[index()].isDetail(true);\n        }\n    }.bind(this);\n    \n    self.getAbility = function (abilityName) {\n        return self.abilities().find(function(b) {\n            return b.name == abilityName;\n        });\n    }\n}\n\nAbilityModel.prototype.levelUpAbility = function (index, data, event, hero) {\n    var self = this;\n    if (self.abilities()[index()].level() < hero.getAbilityLevelMax(data) && hero.availableSkillPoints() > 0 ) {\n        switch(self.abilities()[index()].abilitytype) {\n            case 'DOTA_ABILITY_TYPE_ULTIMATE':\n                if (hero.heroId() == 'invoker') {\n                    if (\n                        (self.abilities()[index()].level() == 0) && (parseInt(hero.selectedHeroLevel()) >= 2) ||\n                        (self.abilities()[index()].level() == 1) && (parseInt(hero.selectedHeroLevel()) >= 7) ||\n                        (self.abilities()[index()].level() == 2) && (parseInt(hero.selectedHeroLevel()) >= 11) ||\n                        (self.abilities()[index()].level() == 3) && (parseInt(hero.selectedHeroLevel()) >= 17)\n                    ) {\n                        self.abilities()[index()].level(self.abilities()[index()].level()+1);\n                        hero.skillPointHistory.push(index());\n                    }\n                }\n                else if (hero.heroId() == 'meepo') {\n                    if (self.abilities()[index()].level() * 7 + 3 <= parseInt(hero.selectedHeroLevel())) {\n                        self.abilities()[index()].level(self.abilities()[index()].level()+1);\n                        hero.skillPointHistory.push(index());\n                    }\n                }\n                else {\n                    if ((self.abilities()[index()].level()+1) * 5 + 1 <= parseInt(hero.selectedHeroLevel())) {\n                        self.abilities()[index()].level(self.abilities()[index()].level()+1);\n                        hero.skillPointHistory.push(index());\n                    }\n                }\n            break;\n            default:\n                if (self.abilities()[index()].level() * 2 + 1 <= parseInt(hero.selectedHeroLevel())) {\n                    self.abilities()[index()].level(self.abilities()[index()].level()+1);\n                    hero.skillPointHistory.push(index());\n                }\n            break;\n        }\n        switch (self.abilities()[index()].name) {\n            case 'beastmaster_call_of_the_wild':\n            case 'chen_test_of_faith':\n            case 'morphling_morph_agi':\n            case 'shadow_demon_shadow_poison':\n                self.abilities()[index() + 1].level(self.abilities()[index()].level());\n            break;\n            case 'morphling_morph_str':\n                self.abilities()[index() - 1].level(self.abilities()[index()].level());\n            break;\n            case 'keeper_of_the_light_spirit_form':\n                self.abilities()[index() - 1].level(self.abilities()[index()].level());\n                self.abilities()[index() - 2].level(self.abilities()[index()].level());\n            break;\n            case 'nevermore_shadowraze1':\n                self.abilities()[index() + 1].level(self.abilities()[index()].level());\n                self.abilities()[index() + 2].level(self.abilities()[index()].level());\n            break;\n            case 'nevermore_shadowraze2':\n                self.abilities()[index() - 1].level(self.abilities()[index()].level());\n                self.abilities()[index() + 1].level(self.abilities()[index()].level());\n            break;\n            case 'nevermore_shadowraze3':\n                self.abilities()[index() - 1].level(self.abilities()[index()].level());\n                self.abilities()[index() - 2].level(self.abilities()[index()].level());\n            break;\n            case 'ember_spirit_fire_remnant':\n                self.abilities()[index() - 1].level(self.abilities()[index()].level());\n            break;\n            case 'lone_druid_true_form':\n                self.abilities()[index() - 1].level(self.abilities()[index()].level());\n            break;\n        }\n    }\n};\nAbilityModel.prototype.levelDownAbility = function (index, data, event, hero) {\n    var i = ko.utils.unwrapObservable(index);\n    var self = this;\n    if (self.abilities()[i].level() > 0) {\n        self.abilities()[i].level(self.abilities()[i].level() - 1);\n        hero.skillPointHistory.splice(hero.skillPointHistory().lastIndexOf(i), 1);\n        switch (self.abilities()[i].name) {\n            case 'beastmaster_call_of_the_wild':\n            case 'chen_test_of_faith':\n            case 'morphling_morph_agi':\n            case 'shadow_demon_shadow_poison':\n                self.abilities()[i + 1].level(self.abilities()[i].level());\n            break;\n            case 'morphling_morph_str':\n                self.abilities()[i - 1].level(self.abilities()[i].level());\n            break;\n            case 'keeper_of_the_light_spirit_form':\n                self.abilities()[i - 1].level(self.abilities()[i].level());\n                self.abilities()[i - 2].level(self.abilities()[i].level());\n            break;\n            case 'nevermore_shadowraze1':\n                self.abilities()[i + 1].level(self.abilities()[i].level());\n                self.abilities()[i + 2].level(self.abilities()[i].level());\n            break;\n            case 'nevermore_shadowraze2':\n                self.abilities()[i - 1].level(self.abilities()[i].level());\n                self.abilities()[i + 1].level(self.abilities()[i].level());\n            break;\n            case 'nevermore_shadowraze3':\n                self.abilities()[i - 1].level(self.abilities()[i].level());\n                self.abilities()[i - 2].level(self.abilities()[i].level());\n            break;\n            case 'ember_spirit_fire_remnant':\n                self.abilities()[i - 1].level(self.abilities()[i].level());\n            break;\n            case 'lone_druid_true_form':\n                self.abilities()[i - 1].level(self.abilities()[i].level());\n            break;\n        }\n    }\n};\nAbilityModel.prototype.getAbilityAttributeValue = function (attributes, attributeName, level) {\n    for (var i=0; i < attributes.length; i++) {\n        if (attributes[i].name == attributeName) {\n            if (level == 0) {\n                return parseFloat(attributes[i].value[0]);\n            }\n            else if (level > attributes[i].value.length) {\n                return parseFloat(attributes[i].value[0]);\n            }\n            else {\n                return parseFloat(attributes[i].value[level-1]);\n            }\n        }\n    }\n}\nAbilityModel.prototype.getAbilityAttributeTooltip = function (attributes, attributeName) {\n    for (var i=0; i<attributes.length; i++) {\n        if (attributes[i].name == attributeName) {\n            if (attributes[i].hasOwnProperty('tooltip')) {\n                var d = attributes[i].tooltip.replace(/\\\\n/g, '');\n                return d;\n            }\n            else {\n                return '';\n            }\n        }\n    }\n    return '';\n}\n\nmodule.exports = AbilityModel;","'use strict';\nvar ko = require('./herocalc_knockout');\n\nvar AbilityModel = require(\"./AbilityModel\");\nvar InventoryViewModel = require(\"./inventory/InventoryViewModel\");\nvar findWhere = require(\"./util/findWhere\");\nvar buffOptionsArray = require(\"./buffs/buffOptionsArray\");\nvar debuffOptionsArray = require(\"./buffs/debuffOptionsArray\");\n\nvar BuffViewModel = function (itemData, a) {\n    var self = this;\n    AbilityModel.call(this, ko.observableArray([]));\n    self.availableBuffs = ko.observableArray(buffOptionsArray.items);\n    self.availableDebuffs = ko.observableArray(debuffOptionsArray.items);\n    self.selectedBuff = ko.observable(self.availableBuffs()[0]);\n    \n    self.buffs = ko.observableArray([]);\n    self.itemBuffs = new InventoryViewModel(itemData);\n    \n    self.addBuff = function (data, event) {\n        if (findWhere(self.buffs(), { name: self.selectedBuff().buffName }) == undefined) {\n            var a = JSON.parse(JSON.stringify(self.selectedBuff().abilityData));\n            a.level = ko.observable(0);\n            a.isActive = ko.observable(false);\n            a.isDetail = ko.observable(false);\n            a.baseDamage = ko.observable(0);\n            a.bash = ko.observable(0);\n            a.bashBonusDamage = ko.observable(0);\n            a.bonusDamage = ko.observable(0);\n            a.bonusDamageOrb = ko.observable(0);\n            a.bonusDamagePct = ko.observable(0);\n            a.bonusDamagePrecisionAura = ko.observable(0);\n            a.bonusDamageReduction = ko.observable(0);\n            a.bonusHealth = ko.observable(0);\n            a.bonusStrength = ko.observable(0);\n            a.bonusStrength2 = ko.observable(0);\n            a.bonusAgility = ko.observable(0);\n            a.bonusAgility2 = ko.observable(0);\n            a.bonusInt = ko.observable(0);\n            a.bonusAllStatsReduction = ko.observable(0);\n            a.damageAmplification = ko.observable(0);\n            a.damageReduction = ko.observable(0);\n            a.evasion = ko.observable(0);\n            a.magicResist = ko.observable(0);\n            a.manaregen = ko.observable(0);\n            a.manaregenreduction = ko.observable(0);\n            a.missChance = ko.observable(0);\n            a.movementSpeedFlat = ko.observable(0);\n            a.movementSpeedPct = ko.observable(0);\n            a.movementSpeedPctReduction = ko.observable(0);\n            a.turnRateReduction = ko.observable(0);\n            a.attackrange = ko.observable(0);\n            a.attackspeed = ko.observable(0);\n            a.attackspeedreduction = ko.observable(0);\n            a.armor = ko.observable(0);\n            a.armorReduction = ko.observable(0);\n            a.healthregen = ko.observable(0);\n            a.lifesteal = ko.observable(0);\n            a.visionnight = ko.observable(0);\n            a.visionday = ko.observable(0);\n            switch (a.name) {\n                case 'invoker_cold_snap':\n                case 'invoker_ghost_walk':\n                case 'invoker_tornado':\n                case 'invoker_emp':\n                case 'invoker_alacrity':\n                case 'invoker_chaos_meteor':\n                case 'invoker_sun_strike':\n                case 'invoker_forge_spirit':\n                case 'invoker_ice_wall':\n                case 'invoker_deafening_blast':\n                    a.level(1);\n                break;\n            }\n            self.abilities.push(a);\n            self.buffs.push({ name: self.selectedBuff().buffName, hero: self.selectedBuff().hero, data: a });\n        }\n    };\n    \n    self.removeBuff = function (data, event, abilityName) {\n        if (findWhere(self.buffs(), { name: abilityName })  != undefined) {\n                self.buffs.remove(findWhere(self.buffs(), { name: abilityName }));\n                if (self.abilityControlData[abilityName] != undefined) {\n                    for (var i = 0; i < self.abilityControlData[abilityName].data.length; i++) {\n                        if (self.abilityControlData[abilityName].data[i].controlVal.dispose != undefined) {\n                            self.abilityControlData[abilityName].data[i].controlVal.dispose();\n                        }\n                        if (self.abilityControlData[abilityName].data[i].clean != undefined) {\n                            self.abilityControlData[abilityName].data[i].clean.dispose();\n                        }\n                    }\n                    self.abilityControlData[abilityName] = undefined;\n                }\n                for (var i = 0; i < self.abilities().length; i++) {\n                    if (self.abilities()[i].name == abilityName) {\n                        self.abilities()[i].level(0);\n                        self.abilities.remove(self.abilities()[i]);\n                        break;\n                    }\n                }\n        }\n    };\n    self.toggleBuff = function (index, data, event) {\n        if (self.buffs()[index()].data.behavior.indexOf('DOTA_ABILITY_BEHAVIOR_PASSIVE') < 0) {\n            if (self.buffs()[index()].data.isActive()) {\n                self.buffs()[index()].data.isActive(false);\n                self.abilities()[index()].isActive(false);\n            }\n            else {\n                self.buffs()[index()].data.isActive(true);\n                self.abilities()[index()].isActive(true);\n            }\n        }\n    }.bind(this);\n\n    self.toggleBuffDetail = function (index, data, event) {\n        if (self.buffs()[index()].data.isDetail()) {\n            self.buffs()[index()].data.isDetail(false);\n        }\n        else {\n            self.buffs()[index()].data.isDetail(true);\n        }\n    }.bind(this);\n\n    // Overrides the ability module function to remove available skill point check\n    self.levelUpAbility = function (index, data, event, hero) {\n        if (self.abilities()[index()].level() < hero.getAbilityLevelMax(data)) {\n            switch(self.abilities()[index()].abilitytype) {\n                case 'DOTA_ABILITY_TYPE_ULTIMATE':\n                    self.abilities()[index()].level(self.abilities()[index()].level() + 1);\n                break;\n                default:\n                    self.abilities()[index()].level(self.abilities()[index()].level() + 1);\n                break;\n            }\n            switch (self.abilities()[index()].name) {\n                case 'beastmaster_call_of_the_wild':\n                case 'chen_test_of_faith':\n                case 'morphling_morph_agi':\n                case 'shadow_demon_shadow_poison':\n                    self.abilities()[index() + 1].level(self.abilities()[index()].level());\n                break;\n                case 'morphling_morph_str':\n                    self.abilities()[index() - 1].level(self.abilities()[index()].level());\n                break;\n                case 'keeper_of_the_light_spirit_form':\n                    self.abilities()[index() - 1].level(self.abilities()[index()].level());\n                    self.abilities()[index() - 2].level(self.abilities()[index()].level());\n                case 'nevermore_shadowraze1':\n                    self.abilities()[index() + 1].level(self.abilities()[index()].level());\n                    self.abilities()[index() + 2].level(self.abilities()[index()].level());\n                break;\n                case 'nevermore_shadowraze2':\n                    self.abilities()[index() - 1].level(self.abilities()[index()].level());\n                    self.abilities()[index() + 1].level(self.abilities()[index()].level());\n                break;\n                case 'nevermore_shadowraze3':\n                    self.abilities()[index() - 1].level(self.abilities()[index()].level());\n                    self.abilities()[index() - 2].level(self.abilities()[index()].level());\n                break;\n            }\n        }\n    };\n    self.levelDownAbility = function (index, data, event, hero) {\n        if (self.abilities()[index()].level() > 0) {\n            self.abilities()[index()].level(self.abilities()[index()].level() - 1);\n            switch (self.abilities()[index()].name) {\n                case 'beastmaster_call_of_the_wild':\n                case 'chen_test_of_faith':\n                case 'morphling_morph_agi':\n                case 'shadow_demon_shadow_poison':\n                    self.abilities()[index() + 1].level(self.abilities()[index()].level());\n                break;\n                case 'morphling_morph_str':\n                    self.abilities()[index() - 1].level(self.abilities()[index()].level());\n                break;\n                case 'keeper_of_the_light_spirit_form':\n                    self.abilities()[index() - 1].level(self.abilities()[index()].level());\n                    self.abilities()[index() - 2].level(self.abilities()[index()].level());\n                case 'nevermore_shadowraze1':\n                    self.abilities()[index() + 1].level(self.abilities()[index()].level());\n                    self.abilities()[index() + 2].level(self.abilities()[index()].level());\n                break;\n                case 'nevermore_shadowraze2':\n                    self.abilities()[index() - 1].level(self.abilities()[index()].level());\n                    self.abilities()[index() + 1].level(self.abilities()[index()].level());\n                break;\n                case 'nevermore_shadowraze3':\n                    self.abilities()[index() - 1].level(self.abilities()[index()].level());\n                    self.abilities()[index() - 2].level(self.abilities()[index()].level());\n                break;\n                case 'ember_spirit_fire_remnant':\n                    self.abilities()[index() - 1].level(self.abilities()[index()].level());\n                break;\n                case 'lone_druid_true_form':\n                    self.abilities()[index() - 1].level(self.abilities()[index()].level());\n                break;\n            }\n        }\n    };\n    \n    return self;\n}\nBuffViewModel.prototype = Object.create(AbilityModel.prototype);\nBuffViewModel.prototype.constructor = BuffViewModel;\n\nmodule.exports = BuffViewModel;","var findWhere = require(\"../util/findWhere\");\n\nvar BuffModel = function (heroData, unitData, hero, ability) {\n    this.buffName = ability;\n    if (heroData['npc_dota_hero_' + hero] == undefined) {\n        this.hero = hero;\n        this.abilityData = findWhere(unitData[hero].abilities, {name: ability})\n        this.buffDisplayName = unitData[hero].displayname + ' - ' + this.abilityData.displayname;\n    }\n    else {\n        this.hero = 'npc_dota_hero_' + hero;\n        this.abilityData = findWhere(heroData['npc_dota_hero_' + hero].abilities, {name: ability})\n        this.buffDisplayName = heroData['npc_dota_hero_' + hero].displayname + ' - ' + this.abilityData.displayname;        \n        if (ability == 'sven_gods_strength') {\n            this.buffDisplayName += ' (Aura for allies)';\n        }\n    }\n\n};\n\nmodule.exports = BuffModel;","var BuffModel = require(\"./BuffModel\");\n\nvar buffOptionsArray = {};\n\nvar init = function (heroData, unitData) {\n    buffOptionsArray.items = [\n        new BuffModel(heroData, unitData, 'abaddon', 'abaddon_frostmourne'),\n        new BuffModel(heroData, unitData, 'axe', 'axe_culling_blade'),\n        new BuffModel(heroData, unitData, 'beastmaster', 'beastmaster_inner_beast'),\n        new BuffModel(heroData, unitData, 'bloodseeker', 'bloodseeker_bloodrage'),\n        new BuffModel(heroData, unitData, 'bounty_hunter', 'bounty_hunter_track'),\n        new BuffModel(heroData, unitData, 'centaur', 'centaur_stampede'),\n        new BuffModel(heroData, unitData, 'crystal_maiden', 'crystal_maiden_brilliance_aura'),\n        new BuffModel(heroData, unitData, 'dark_seer', 'dark_seer_surge'),\n        new BuffModel(heroData, unitData, 'dazzle', 'dazzle_weave'),\n        new BuffModel(heroData, unitData, 'drow_ranger', 'drow_ranger_trueshot'),\n        new BuffModel(heroData, unitData, 'invoker', 'invoker_alacrity'),\n        new BuffModel(heroData, unitData, 'wisp', 'wisp_tether'),\n        new BuffModel(heroData, unitData, 'wisp', 'wisp_overcharge'),\n        new BuffModel(heroData, unitData, 'kunkka', 'kunkka_ghostship'),\n        new BuffModel(heroData, unitData, 'lich', 'lich_frost_armor'),\n        new BuffModel(heroData, unitData, 'life_stealer', 'life_stealer_open_wounds'),\n        new BuffModel(heroData, unitData, 'luna', 'luna_lunar_blessing'),\n        new BuffModel(heroData, unitData, 'lycan', 'lycan_howl'),\n        new BuffModel(heroData, unitData, 'magnataur', 'magnataur_empower'),\n        new BuffModel(heroData, unitData, 'mirana', 'mirana_leap'),\n        new BuffModel(heroData, unitData, 'ogre_magi', 'ogre_magi_bloodlust'),\n        new BuffModel(heroData, unitData, 'omniknight', 'omniknight_guardian_angel'),\n        new BuffModel(heroData, unitData, 'rubick', 'rubick_null_field'),\n        new BuffModel(heroData, unitData, 'skeleton_king', 'skeleton_king_vampiric_aura'),\n        new BuffModel(heroData, unitData, 'spirit_breaker', 'spirit_breaker_empowering_haste'),\n        new BuffModel(heroData, unitData, 'sven', 'sven_warcry'),\n        new BuffModel(heroData, unitData, 'sven', 'sven_gods_strength'),\n        new BuffModel(heroData, unitData, 'treant', 'treant_living_armor'),\n        new BuffModel(heroData, unitData, 'troll_warlord', 'troll_warlord_battle_trance'),\n        new BuffModel(heroData, unitData, 'vengefulspirit', 'vengefulspirit_command_aura'),\n        new BuffModel(heroData, unitData, 'npc_dota_neutral_alpha_wolf', 'alpha_wolf_critical_strike'),\n        new BuffModel(heroData, unitData, 'npc_dota_neutral_alpha_wolf', 'alpha_wolf_command_aura'),\n        new BuffModel(heroData, unitData, 'npc_dota_neutral_polar_furbolg_ursa_warrior', 'centaur_khan_endurance_aura'),\n        new BuffModel(heroData, unitData, 'npc_dota_neutral_giant_wolf', 'giant_wolf_critical_strike'),\n        new BuffModel(heroData, unitData, 'npc_dota_neutral_kobold_taskmaster', 'kobold_taskmaster_speed_aura'),\n        new BuffModel(heroData, unitData, 'npc_dota_neutral_ogre_magi', 'ogre_magi_frost_armor'),\n        new BuffModel(heroData, unitData, 'npc_dota_neutral_satyr_hellcaller', 'satyr_hellcaller_unholy_aura'),\n        new BuffModel(heroData, unitData, 'npc_dota_neutral_enraged_wildkin', 'enraged_wildkin_toughness_aura'),\n        new BuffModel(heroData, unitData, 'npc_dota_necronomicon_archer_1', 'necronomicon_archer_aoe')\n    ];\n    return buffOptionsArray.items;\n}\n\nbuffOptionsArray.init = init;\n\nmodule.exports = buffOptionsArray;","var BuffModel = require(\"./BuffModel\");\n\nvar debuffOptionsArray = {};\n\nvar init = function (heroData, unitData) {\n    debuffOptionsArray.items = [\n        new BuffModel(heroData, unitData, 'abaddon', 'abaddon_frostmourne'),\n        new BuffModel(heroData, unitData, 'alchemist', 'alchemist_acid_spray'),\n        new BuffModel(heroData, unitData, 'ancient_apparition', 'ancient_apparition_ice_vortex'),\n        new BuffModel(heroData, unitData, 'axe', 'axe_battle_hunger'),\n        new BuffModel(heroData, unitData, 'bane', 'bane_enfeeble'),\n        new BuffModel(heroData, unitData, 'batrider', 'batrider_sticky_napalm'),\n        new BuffModel(heroData, unitData, 'beastmaster', 'beastmaster_primal_roar'),\n        new BuffModel(heroData, unitData, 'bounty_hunter', 'bounty_hunter_jinada'),\n        new BuffModel(heroData, unitData, 'brewmaster', 'brewmaster_thunder_clap'),\n        new BuffModel(heroData, unitData, 'brewmaster', 'brewmaster_drunken_haze'),\n        new BuffModel(heroData, unitData, 'bristleback', 'bristleback_viscous_nasal_goo'),\n        new BuffModel(heroData, unitData, 'broodmother', 'broodmother_incapacitating_bite'),\n        new BuffModel(heroData, unitData, 'centaur', 'centaur_stampede'),\n        new BuffModel(heroData, unitData, 'chen', 'chen_penitence'),\n        new BuffModel(heroData, unitData, 'crystal_maiden', 'crystal_maiden_crystal_nova'),\n        new BuffModel(heroData, unitData, 'crystal_maiden', 'crystal_maiden_freezing_field'),\n        new BuffModel(heroData, unitData, 'dazzle', 'dazzle_weave'),\n        new BuffModel(heroData, unitData, 'drow_ranger', 'drow_ranger_frost_arrows'),\n        new BuffModel(heroData, unitData, 'earth_spirit', 'earth_spirit_rolling_boulder'),\n        new BuffModel(heroData, unitData, 'elder_titan', 'elder_titan_natural_order'),\n        new BuffModel(heroData, unitData, 'elder_titan', 'elder_titan_earth_splitter'),\n        new BuffModel(heroData, unitData, 'enchantress', 'enchantress_untouchable'),\n        new BuffModel(heroData, unitData, 'enchantress', 'enchantress_enchant'),\n        new BuffModel(heroData, unitData, 'faceless_void', 'faceless_void_time_walk'),\n        new BuffModel(heroData, unitData, 'huskar', 'huskar_life_break'),\n        new BuffModel(heroData, unitData, 'invoker', 'invoker_ghost_walk'),\n        new BuffModel(heroData, unitData, 'invoker', 'invoker_ice_wall'),\n        new BuffModel(heroData, unitData, 'wisp', 'wisp_tether'),\n        new BuffModel(heroData, unitData, 'jakiro', 'jakiro_dual_breath'),\n        new BuffModel(heroData, unitData, 'jakiro', 'jakiro_liquid_fire'),\n        new BuffModel(heroData, unitData, 'keeper_of_the_light', 'keeper_of_the_light_blinding_light'),\n        new BuffModel(heroData, unitData, 'kunkka', 'kunkka_torrent'),\n        new BuffModel(heroData, unitData, 'lich', 'lich_frost_nova'),\n        new BuffModel(heroData, unitData, 'lich', 'lich_frost_armor'),\n        new BuffModel(heroData, unitData, 'lich', 'lich_chain_frost'),\n        new BuffModel(heroData, unitData, 'life_stealer', 'life_stealer_open_wounds'),\n        new BuffModel(heroData, unitData, 'lion', 'lion_voodoo'),\n        new BuffModel(heroData, unitData, 'magnataur', 'magnataur_skewer'),\n        new BuffModel(heroData, unitData, 'medusa', 'medusa_stone_gaze'),\n        new BuffModel(heroData, unitData, 'meepo', 'meepo_geostrike'),\n        new BuffModel(heroData, unitData, 'naga_siren', 'naga_siren_rip_tide'),\n        new BuffModel(heroData, unitData, 'night_stalker', 'night_stalker_void'),\n        new BuffModel(heroData, unitData, 'night_stalker', 'night_stalker_crippling_fear'),\n        new BuffModel(heroData, unitData, 'night_stalker', 'night_stalker_darkness'),\n        new BuffModel(heroData, unitData, 'ogre_magi', 'ogre_magi_ignite'),\n        new BuffModel(heroData, unitData, 'omniknight', 'omniknight_degen_aura'),\n        new BuffModel(heroData, unitData, 'phantom_assassin', 'phantom_assassin_stifling_dagger'),\n        new BuffModel(heroData, unitData, 'phantom_lancer', 'phantom_lancer_spirit_lance'),\n        new BuffModel(heroData, unitData, 'pudge', 'pudge_rot'),\n        new BuffModel(heroData, unitData, 'pugna', 'pugna_decrepify'),\n        new BuffModel(heroData, unitData, 'queenofpain', 'queenofpain_shadow_strike'),\n        new BuffModel(heroData, unitData, 'riki', 'riki_smoke_screen'),\n        new BuffModel(heroData, unitData, 'rubick', 'rubick_fade_bolt'),\n        new BuffModel(heroData, unitData, 'sand_king', 'sandking_epicenter'),\n        new BuffModel(heroData, unitData, 'nevermore', 'nevermore_dark_lord'),\n        new BuffModel(heroData, unitData, 'shadow_shaman', 'shadow_shaman_voodoo'),\n        new BuffModel(heroData, unitData, 'skeleton_king', 'skeleton_king_hellfire_blast'),\n        new BuffModel(heroData, unitData, 'skeleton_king', 'skeleton_king_reincarnation'),\n        new BuffModel(heroData, unitData, 'skywrath_mage', 'skywrath_mage_concussive_shot'),\n        new BuffModel(heroData, unitData, 'skywrath_mage', 'skywrath_mage_ancient_seal'),\n        new BuffModel(heroData, unitData, 'slardar', 'slardar_slithereen_crush'),\n        new BuffModel(heroData, unitData, 'slardar', 'slardar_amplify_damage'),\n        new BuffModel(heroData, unitData, 'slark', 'slark_essence_shift'),\n        new BuffModel(heroData, unitData, 'sniper', 'sniper_shrapnel'),\n        new BuffModel(heroData, unitData, 'spectre', 'spectre_spectral_dagger'),\n        new BuffModel(heroData, unitData, 'storm_spirit', 'storm_spirit_overload'),\n        new BuffModel(heroData, unitData, 'templar_assassin', 'templar_assassin_meld'),\n        new BuffModel(heroData, unitData, 'tidehunter', 'tidehunter_gush'),\n        new BuffModel(heroData, unitData, 'tinker', 'tinker_laser'),\n        new BuffModel(heroData, unitData, 'treant', 'treant_leech_seed'),\n        new BuffModel(heroData, unitData, 'tusk', 'tusk_frozen_sigil'),\n        new BuffModel(heroData, unitData, 'undying', 'undying_flesh_golem'),\n        new BuffModel(heroData, unitData, 'ursa', 'ursa_earthshock'),\n        new BuffModel(heroData, unitData, 'vengefulspirit', 'vengefulspirit_wave_of_terror'),\n        new BuffModel(heroData, unitData, 'vengefulspirit', 'vengefulspirit_command_aura'),\n        new BuffModel(heroData, unitData, 'venomancer', 'venomancer_venomous_gale'),\n        new BuffModel(heroData, unitData, 'venomancer', 'venomancer_poison_sting'),\n        new BuffModel(heroData, unitData, 'viper', 'viper_poison_attack'),\n        new BuffModel(heroData, unitData, 'viper', 'viper_corrosive_skin'),\n        new BuffModel(heroData, unitData, 'viper', 'viper_viper_strike'),\n        new BuffModel(heroData, unitData, 'visage', 'visage_grave_chill'),\n        new BuffModel(heroData, unitData, 'warlock', 'warlock_upheaval'),\n        new BuffModel(heroData, unitData, 'weaver', 'weaver_the_swarm'),\n        new BuffModel(heroData, unitData, 'windrunner', 'windrunner_windrun'),\n        new BuffModel(heroData, unitData, 'winter_wyvern', 'winter_wyvern_arctic_burn'),\n        new BuffModel(heroData, unitData, 'winter_wyvern', 'winter_wyvern_splinter_blast'),\n        new BuffModel(heroData, unitData, 'npc_dota_neutral_ghost', 'ghost_frost_attack'),\n        new BuffModel(heroData, unitData, 'npc_dota_neutral_polar_furbolg_ursa_warrior', 'polar_furbolg_ursa_warrior_thunder_clap'),\n        new BuffModel(heroData, unitData, 'npc_dota_neutral_ogre_magi', 'ogre_magi_frost_armor'),\n        new BuffModel(heroData, unitData, 'npc_dota_neutral_satyr_trickster', 'satyr_trickster_purge'),\n        new BuffModel(heroData, unitData, 'npc_dota_neutral_enraged_wildkin', 'enraged_wildkin_tornado')\n    ];\n    return debuffOptionsArray.items;\n}\n\ndebuffOptionsArray.init = init;\n\nmodule.exports = debuffOptionsArray;","var HeroCalcData = (typeof window !== \"undefined\" ? window['HeroCalcData'] : typeof global !== \"undefined\" ? global['HeroCalcData'] : null) || {};\nvar getJSON = require(\"../util/getJSON\");\nvar isEmpty = require(\"../util/isEmpty\");\nvar extend = function(out) {\n  out = out || {};\n\n  for (var i = 1; i < arguments.length; i++) {\n    if (!arguments[i])\n      continue;\n\n    for (var key in arguments[i]) {\n      if (arguments[i].hasOwnProperty(key))\n        out[key] = arguments[i][key];\n    }\n  }\n\n  return out;\n};\n\nvar resourceCounter = 0;\n\nvar onResourceLoaded = function (callback) {\n    resourceCounter--;\n    if (resourceCounter === 0) {\n        fixHeroData(HeroCalcData.heroData);\n        if (callback) callback();\n    }\n}\n\nvar fixHeroData = function (heroData) {\n    heroData['npc_dota_hero_chen'].abilities[2].behavior.push('DOTA_ABILITY_BEHAVIOR_NOT_LEARNABLE');\n    heroData['npc_dota_hero_nevermore'].abilities[1].behavior.push('DOTA_ABILITY_BEHAVIOR_NOT_LEARNABLE');\n    heroData['npc_dota_hero_nevermore'].abilities[2].behavior.push('DOTA_ABILITY_BEHAVIOR_NOT_LEARNABLE');\n    heroData['npc_dota_hero_morphling'].abilities[3].behavior.push('DOTA_ABILITY_BEHAVIOR_NOT_LEARNABLE');\n    heroData['npc_dota_hero_ogre_magi'].abilities[3].behavior.push('DOTA_ABILITY_BEHAVIOR_NOT_LEARNABLE');\n    heroData['npc_dota_hero_techies'].abilities[4].behavior.push('DOTA_ABILITY_BEHAVIOR_NOT_LEARNABLE');\n    heroData['npc_dota_hero_beastmaster'].abilities[2].behavior.push('DOTA_ABILITY_BEHAVIOR_NOT_LEARNABLE');\n\n    var index = heroData['npc_dota_hero_lone_druid'].abilities[3].behavior.indexOf('DOTA_ABILITY_BEHAVIOR_HIDDEN');\n    heroData['npc_dota_hero_lone_druid'].abilities[3].behavior.splice(index, 1);\n\n    index = heroData['npc_dota_hero_abaddon'].abilities[2].behavior.indexOf('DOTA_ABILITY_BEHAVIOR_PASSIVE');\n    heroData['npc_dota_hero_abaddon'].abilities[2].behavior.splice(index, 1);\n\n    index = heroData['npc_dota_hero_riki'].abilities[2].behavior.indexOf('DOTA_ABILITY_BEHAVIOR_PASSIVE');\n    heroData['npc_dota_hero_riki'].abilities[2].behavior.splice(index, 1);\n}\n\nvar init = function (HERODATA_PATH, ITEMDATA_PATH, UNITDATA_PATH, callback) {\n    console.log('init HeroCalcData', HeroCalcData);\n    resourceCounter = 3;\n    \n    if (!HeroCalcData.heroData || isEmpty(HeroCalcData.heroData)) {\n        if (HERODATA_PATH) {\n            getJSON(HERODATA_PATH, function (data) {\n                HeroCalcData.heroData = data;\n                onResourceLoaded(callback);\n            });\n        }\n    }\n    else {\n        onResourceLoaded(callback);\n    }\n    \n    if (!HeroCalcData.itemData || isEmpty(HeroCalcData.itemData)) {\n        if (ITEMDATA_PATH) {\n            getJSON(ITEMDATA_PATH, function (data) {\n                HeroCalcData.itemData = data;\n                onResourceLoaded(callback);\n            });\n        }\n    }\n    else {\n        onResourceLoaded(callback);\n    }\n    \n    if (!HeroCalcData.unitData || isEmpty(HeroCalcData.unitData)) {\n        if (UNITDATA_PATH) {\n            getJSON(UNITDATA_PATH, function (data) {\n                HeroCalcData.unitData = data;\n                onResourceLoaded(callback);\n            });\n        }\n    }\n    else {\n        onResourceLoaded(callback);\n    }\n}\n    \nHeroCalcData.init = init;\n\nmodule.exports = HeroCalcData;","'use strict';\nvar HeroModel = require(\"./HeroModel\");\n\nvar CloneModel = function (heroData, itemData, h,p) {\n    var self = this;\n    HeroModel.call(this, heroData, itemData, h);\n    self.parent = p;\n    return self;\n}\nCloneModel.prototype = Object.create(HeroModel.prototype);\nCloneModel.prototype.constructor = CloneModel;\n\nmodule.exports = CloneModel;","var DamageTypeColor = {\n    'physical': '#979aa2',\n    'pure': 'goldenrod',\n    'magic': '#428bca',\n    'default': '#979aa2'\n}\n\nmodule.exports = DamageTypeColor;","'use strict';\nvar ko = require('../herocalc_knockout');\n    \nvar DamageTypeColor = require(\"./DamageTypeColor\");\nvar extend = require(\"../util/extend\");\n\nvar HeroDamageMixin = function (self, itemData) {\n    self.critInfo = ko.pureComputed(function () {\n        var critSources = self.inventory.getCritSource();\n        extend(critSources, self.ability().getCritSource());\n        extend(critSources, self.buffs.getCritSource());\n        var critSourcesArray = [];\n        for (var prop in critSources) {\n            var el = critSources[prop];\n            el.name = prop\n            critSourcesArray.push(el);\n        }\n        function compareByMultiplier(a,b) {\n            if (a.multiplier < b.multiplier)\n                return 1;\n            if (a.multiplier > b.multiplier)\n                return -1;\n            return 0;\n        }\n\n        critSourcesArray.sort(compareByMultiplier);\n        \n        var result = [];\n        var critTotal = 0;\n        for (var i = 0; i < critSourcesArray.length; i++) {\n            var total = 1;\n            for (var j = 0; j < i; j++) {\n                for (var k = 0; k <critSourcesArray[j].count; k++) {\n                    total *= (1 - critSourcesArray[j].chance);\n                }\n            }\n            var total2 = 1;\n            for (var k = 0; k < critSourcesArray[i].count; k++) {\n                total2 *= (1 - critSourcesArray[i].chance);\n            }\n            total *= (1 - total2);\n            critTotal += total;\n            if (critSourcesArray[i].count > 1) {\n                result.push({\n                    'name':critSourcesArray[i].displayname + ' x' + critSourcesArray[i].count,\n                    'chance':critSourcesArray[i].chance,\n                    'multiplier':critSourcesArray[i].multiplier,\n                    'count':critSourcesArray[i].count,\n                    'totalChance':total\n                });\n            }\n            else {\n                result.push({\n                    'name':critSourcesArray[i].displayname,\n                    'chance':critSourcesArray[i].chance,\n                    'multiplier':critSourcesArray[i].multiplier,\n                    'count':critSourcesArray[i].count,\n                    'totalChance':total\n                });\n            }\n        }\n        return { sources: result, total: critTotal };\n    });\n\n    self.cleaveInfo = ko.pureComputed(function () {\n        var cleaveSources = self.inventory.getCleaveSource();\n        extend(cleaveSources, self.ability().getCleaveSource());\n        extend(cleaveSources, self.buffs.getCleaveSource());\n        var cleaveSourcesArray = [];\n        for (var prop in cleaveSources) {\n            var el = cleaveSources[prop];\n            el.name = prop\n            cleaveSourcesArray.push(el);\n        }\n        function compareByRadius(a,b) {\n            if (a.radius < b.radius)\n                return 1;\n            if (a.radius > b.radius)\n                return -1;\n            return 0;\n        }\n\n        cleaveSourcesArray.sort(compareByRadius);\n        var cleaveSourcesByRadius = {};\n        for (var i = 0; i < cleaveSourcesArray.length; i++) {\n            var total = 0;\n            for (var j = 0; j <cleaveSourcesArray.length; j++) {\n                if (cleaveSourcesArray[j].radius >= cleaveSourcesArray[i].radius) {\n                    total += cleaveSourcesArray[j].magnitude * cleaveSourcesArray[j].count;\n                }\n            }\n            cleaveSourcesByRadius[cleaveSourcesArray[i].radius] = total;\n        }\n        var result = [];\n        for (var prop in cleaveSourcesByRadius) {\n            result.push({\n                'radius':prop,\n                'magnitude':cleaveSourcesByRadius[prop]\n            });\n        }\n        return result;\n    });\n    \n    self.bashInfo = ko.pureComputed(function () {\n        var attacktype = self.heroData().attacktype;\n        var bashSources = self.inventory.getBashSource(attacktype);\n        extend(bashSources, self.ability().getBashSource());\n        var bashSourcesArray = [];\n        for (var prop in bashSources) {\n            var el = bashSources[prop];\n            el.name = prop\n            bashSourcesArray.push(el);\n        }\n        function compareByDuration(a, b) {\n            if (a.duration < b.duration)\n                return 1;\n            if (a.duration > b.duration)\n                return -1;\n            return 0;\n        }\n\n        //bashSourcesArray.sort(compareByDuration);\n        \n        var result = [];\n        var bashTotal = 0;\n        for (var i = 0;i < bashSourcesArray.length; i++) {\n            var total = 1;\n            for (var j = 0; j < i; j++) {\n                for (var k = 0; k < bashSourcesArray[j].count; k++) {\n                    total *= (1 - bashSourcesArray[j].chance);\n                }\n            }\n            var total2 = 1;\n            for (var k = 0; k < bashSourcesArray[i].count; k++) {\n                total2 *= (1 - bashSourcesArray[i].chance);\n            }\n            total *= (1 - total2);\n            bashTotal += total;\n            if (bashSourcesArray[i].name === 'spirit_breaker_greater_bash') {\n                var d = bashSourcesArray[i].damage * self.totalMovementSpeed();\n            }\n            else {\n                var d = bashSourcesArray[i].damage;\n            }\n            if (bashSourcesArray[i].count > 1) {\n                result.push({\n                    'name':bashSourcesArray[i].displayname, // + ' x' + bashSourcesArray[i].count,\n                    'chance':bashSourcesArray[i].chance,\n                    'damage':d,\n                    'count':bashSourcesArray[i].count,\n                    'damageType':bashSourcesArray[i].damageType,\n                    'totalChance':total\n                });\n            }\n            else {\n                result.push({\n                    'name':bashSourcesArray[i].displayname,\n                    'chance':bashSourcesArray[i].chance,\n                    'damage':d,\n                    'count':bashSourcesArray[i].count,\n                    'damageType':bashSourcesArray[i].damageType,\n                    'totalChance':total\n                });\n            }\n\n        }\n        return { sources: result, total: bashTotal };\n    });\n    \n    self.orbProcInfo = ko.pureComputed(function () {\n        var attacktype = self.heroData().attacktype;\n        var damageSources = self.inventory.getOrbProcSource();\n        var damageSourcesArray = [];\n        for (var prop in damageSources) {\n            var el = damageSources[prop];\n            el.name = prop\n            damageSourcesArray.push(el);\n        }\n        function compareByDamage(a, b) {\n            if (a.priority > b.priority) {\n                return 1;\n            }\n            if (a.priority < b.priority) {\n                return -1;\n            }\n            if (a.damage < b.damage)\n                return 1;\n            if (a.damage > b.damage)\n                return -1;\n            return 0;\n        }\n\n        damageSourcesArray.sort(compareByDamage);\n        \n        var result = [];\n        var damageTotal = 0;\n        for (var i=0 ; i < damageSourcesArray.length; i++) {\n            var total = 1;\n            for (var j = 0; j < i; j++) {\n                for (var k = 0; k < damageSourcesArray[j].count; k++) {\n                    total *= (1 - damageSourcesArray[j].chance);\n                }\n            }\n            var total2 = 1;\n            for (var k = 0; k < damageSourcesArray[i].count; k++) {\n                total2 *= (1 - damageSourcesArray[i].chance);\n            }\n            total *= (1 - total2);\n            damageTotal += total;\n            if (damageSourcesArray[i].count > 1) {\n                result.push({\n                    'name':damageSourcesArray[i].displayname + ' x' + damageSourcesArray[i].count,\n                    'chance':damageSourcesArray[i].chance,\n                    'damage':damageSourcesArray[i].damage,\n                    'count':damageSourcesArray[i].count,\n                    'damageType':damageSourcesArray[i].damageType,\n                    'totalChance':total\n                });\n            }\n            else {\n                result.push({\n                    'name':damageSourcesArray[i].displayname,\n                    'chance':damageSourcesArray[i].chance,\n                    'damage':damageSourcesArray[i].damage,\n                    'count':damageSourcesArray[i].count,\n                    'damageType':damageSourcesArray[i].damageType,\n                    'totalChance':total\n                });\n            }\n        }\n        return { sources: result, total: damageTotal };\n    });\n    \n    self.getReducedDamage = function (value, type) {\n        var result = value;\n        switch (type) {\n            case 'physical':\n                result = value * (1 - (0.06 * self.enemy().totalArmorPhysical()) / (1 + 0.06 * Math.abs(self.enemy().totalArmorPhysical())));\n            break;\n            case 'magic':\n                result = value * (1 - self.enemy().totalMagicResistance() / 100);\n            break;\n            case 'pure':\n                result = value;\n            break;\n            case 'composite':\n                result = value * (1 - (0.06 * self.enemy().totalArmorPhysical()) / (1 + 0.06 * Math.abs(self.enemy().totalArmorPhysical())));\n                result *= (1 - self.enemy().totalMagicResistance() / 100);\n            break;\n        }\n        result *= self.ability().getDamageAmplification() * self.debuffs.getDamageAmplification();\n        result *= self.enemy().ability().getDamageReduction() * self.enemy().buffs.getDamageReduction();\n        return result;\n    }\n    \n    self.damageTotalInfo = ko.pureComputed(function () {\n        var bonusDamageArray = [\n            self.ability().getBonusDamage().sources,\n            self.buffs.getBonusDamage().sources\n        ],\n        bonusDamagePctArray = [\n            self.ability().getBonusDamagePercent().sources,\n            self.buffs.getBonusDamagePercent().sources\n        ],\n        itemBonusDamage = self.inventory.getBonusDamage().sources,\n        itemBonusDamagePct = self.buffs.itemBuffs.getBonusDamagePercent(self.inventory.getBonusDamagePercent()).sources,\n        critSources = self.critInfo(),\n        abilityOrbSources = self.ability().getOrbSource(),\n        itemOrbSources = self.inventory.getOrbSource(),\n        itemProcOrbSources = self.orbProcInfo(),\n        bashSources = self.bashInfo(),\n        \n        attackSources = [];\n        \n        attackSources.push({\n            name: 'Base Attack',\n            cooldown: 1\n        });\n        \n        // weaver_geminate_attack\n        if (self.heroId() === 'weaver') {\n            var a = self.ability().abilities().find(function (ability) {\n                return ability.name === 'weaver_geminate_attack';\n            });\n            if (a) {\n                if (a.level() > 0) {\n                    var cd = a.cooldown[a.level() - 1];\n                    attackSources.push({\n                        name: a.displayname,\n                        cooldown: (1/cd)\n                    });\n                }\n            }\n        }\n        \n        // echo_sabre\n        var item = self.inventory.items().find(function (o) { return o.item === \"echo_sabre\" && o.enabled(); });\n        if (item && self.heroData().attacktype === 'DOTA_UNIT_CAP_MELEE_ATTACK') {\n            var item_echo_sabre = itemData['item_echo_sabre'];\n            attackSources.push({\n                name: item_echo_sabre.displayname,\n                cooldown: (1/item_echo_sabre.cooldown)\n            });\n        }\n\n        var attacks = attackSources.map(function (a) {\n            var baseDamage = (self.baseDamage()[0] + self.baseDamage()[1]) / 2,\n            totalDamage = 0,\n            totalCritableDamage = 0,\n            totalCrit = 0,\n            geminateAttack = { damage: 0, damageReduced: 0, cooldown: 6, active: false },\n            echoSabreAttack = { damage: 0, damageReduced: 0, cooldown: itemData['item_echo_sabre'].cooldown[0], active: false },\n            damage = {\n                pure: 0,\n                physical: 0,\n                magic: 0\n            },\n            result = [],\n            crits = [];\n            \n            // base damage\n            result.push({\n                name: 'Base Damage',\n                damage: baseDamage,\n                damageType: 'physical',\n                damageReduced: self.getReducedDamage(baseDamage, 'physical'),\n                enabled: ko.observable(true)\n            });\n            totalDamage += baseDamage;\n            totalCritableDamage += baseDamage;\n            damage.physical += baseDamage;\n            \n            // bonus damage from items\n            for (i in itemBonusDamage) {\n                var d = itemBonusDamage[i].damage*itemBonusDamage[i].count * self.ability().getSelfBaseDamageReductionPct() * self.enemy().ability().getBaseDamageReductionPct() * self.debuffs.itemBuffs.getBaseDamageReductionPct();\n                result.push({\n                    name: itemBonusDamage[i].displayname + (itemBonusDamage[i].count > 1 ? ' x' + itemBonusDamage[i].count : ''),\n                    damage: d,\n                    damageType: itemBonusDamage[i].damageType,\n                    damageReduced: self.getReducedDamage(d, itemBonusDamage[i].damageType),\n                    enabled: ko.observable(true)\n                });\n                totalDamage += d;\n                totalCritableDamage += d;\n                damage[itemBonusDamage[i].damageType] += d;\n            }\n\n            // bonus damage percent from items\n            for (i in itemBonusDamagePct) {\n                var d = baseDamage * itemBonusDamagePct[i].damage;\n                result.push({\n                    name: itemBonusDamagePct[i].displayname,\n                    damage: d,\n                    damageType: itemBonusDamagePct[i].damageType,\n                    damageReduced: self.getReducedDamage(d, itemBonusDamagePct[i].damageType),\n                    enabled: ko.observable(true)\n                });\n                totalDamage += d;\n                totalCritableDamage += d;\n                damage[itemBonusDamagePct[i].damageType] += d;\n            }\n            \n            // bonus damage from abilities and buffs\n            for (var i = 0; i < bonusDamageArray.length; i++) {\n                for (j in bonusDamageArray[i]) {\n                    var d = bonusDamageArray[i][j].damage;\n                    result.push({\n                        name: bonusDamageArray[i][j].displayname,\n                        damage: d,\n                        damageType: bonusDamageArray[i][j].damageType,\n                        damageReduced: self.getReducedDamage(d, bonusDamageArray[i][j].damageType),\n                        enabled: ko.observable(true)\n                    });\n                    totalDamage += d;\n                    totalCritableDamage += d;\n                    damage[bonusDamageArray[i][j].damageType] += d;\n                }\n            }\n            \n            // bonus damage percent from abilities and buffs\n            for (var i = 0; i < bonusDamagePctArray.length; i++) {\n                for (j in bonusDamagePctArray[i]) {\n                    var d = baseDamage * bonusDamagePctArray[i][j].damage;\n                    result.push({\n                        name: bonusDamagePctArray[i][j].displayname,\n                        damage: d,\n                        damageType: bonusDamagePctArray[i][j].damageType,\n                        damageReduced: self.getReducedDamage(d, bonusDamagePctArray[i][j].damageType),\n                        enabled: ko.observable(true)\n                    });\n                    totalDamage += d;\n                    totalCritableDamage += d;\n                    damage[bonusDamagePctArray[i][j].damageType] += d;\n                }\n            }\n            // drow_ranger_trueshot\n            if (self.heroData().attacktype === 'DOTA_UNIT_CAP_RANGED_ATTACK') {\n                if (self.heroId() === 'drow_ranger') {\n                    var s = self.ability().getBonusDamagePrecisionAura().sources;\n                    var index = 0;\n                }\n                else {\n                    var s = self.buffs.getBonusDamagePrecisionAura().sources;\n                    var index = 1;\n                }\n                if (s[index] != undefined) {\n                    if (self.heroId() === 'drow_ranger') {\n                        var d = s[index].damage * self.totalAgi();\n                    }\n                    else {\n                        var d = s[index].damage;\n                    }\n                    result.push({\n                        name: s[index].displayname,\n                        damage: d,\n                        damageType: 'physical',\n                        damageReduced: self.getReducedDamage(d, 'physical'),\n                        enabled: ko.observable(true)\n                    });\n                    totalDamage += d;\n                    totalCritableDamage += d;\n                    damage.physical += d;                    \n                }\n            }\n            \n            // riki_backstab\n            if (self.heroId() === 'riki') {\n                var s = self.ability().getBonusDamageBackstab().sources;\n                var index = 0;\n            }\n            else {\n                var s = self.buffs.getBonusDamageBackstab().sources;\n                var index = 1;\n            }\n            if (s[index] != undefined) {\n                if (self.heroId() === 'riki') {\n                    var d = s[index].damage * self.totalAgi();\n                }\n                else {\n                    var d = s[index].damage;\n                }\n                result.push({\n                    name: s[index].displayname,\n                    damage: d,\n                    damageType: 'physical',\n                    damageReduced: self.getReducedDamage(d, 'physical'),\n                    enabled: ko.observable(true)\n                });\n                totalDamage += d;\n                //totalCritableDamage += d;\n                damage.physical += d;                    \n            }\n\n            // bash damage\n            for (var i = 0; i < bashSources.sources.length; i++) {\n                var o = bashSources.sources[i];\n                var d = bashSources.sources[i].damage;\n                var cd = self.attacksPerSecond();\n                if (o.cooldown) {\n                    cd = Math.max(1/o.cooldown, cd);\n                }\n                for (var j = 0; j < bashSources.sources[i].count; j++) {\n                    result.push({\n                        name: bashSources.sources[i].name,\n                        damage: d,\n                        damageType: bashSources.sources[i].damageType,\n                        damageReduced: self.getReducedDamage(d, bashSources.sources[i].damageType),\n                        dps: d * cd * bashSources.sources[i].chance,\n                        dpsReduced: self.getReducedDamage(d, bashSources.sources[i].damageType) * cd * bashSources.sources[i].chance,\n                        enabled: ko.observable(true)\n                    });\n                    totalDamage += d;\n                    damage[bashSources.sources[i].damageType] += d;\n                }\n\n            }\n            \n            // %-based orbs\n            for (var i = 0; i < itemProcOrbSources.sources.length; i++) {\n                var d = itemProcOrbSources.sources[i].damage * (1 - Math.pow(1 - itemProcOrbSources.sources[i].chance, itemProcOrbSources.sources[i].count));\n                result.push({\n                    name: itemProcOrbSources.sources[i].name,\n                    damage: d,\n                    damageType: itemProcOrbSources.sources[i].damageType,\n                    damageReduced: self.getReducedDamage(d, itemProcOrbSources.sources[i].damageType),\n                    enabled: ko.observable(true)\n                });\n                totalDamage += d;\n                damage[itemProcOrbSources.sources[i].damageType] += d;\n            }\n            \n            // ability orbs\n            for (var orb in abilityOrbSources) {\n                var d = abilityOrbSources[orb].damage * (1 - itemProcOrbSources.total);\n                result.push({\n                    name: abilityOrbSources[orb].displayname,\n                    damage: d,\n                    damageType: abilityOrbSources[orb].damageType,\n                    damageReduced: self.getReducedDamage(d, abilityOrbSources[orb].damageType),\n                    enabled: ko.observable(true)\n                });\n                totalDamage += d;\n                damage[abilityOrbSources[orb].damageType] += d;\n            }\n            \n            // item orbs\n            if (Object.keys(abilityOrbSources).length === 0) {\n                for (var orb in itemOrbSources) {\n                    var d = itemOrbSources[orb].damage * (1 - itemProcOrbSources.total);\n                    result.push({\n                        name: itemOrbSources[orb].displayname,\n                        damage: d,\n                        damageType: itemOrbSources[orb].damageType,\n                        damageReduced: self.getReducedDamage(d, itemOrbSources[orb].damageType),\n                        enabled: ko.observable(true)\n                    });\n                    totalDamage += d;\n                    damage[itemOrbSources[orb].damageType] += d;\n                }            \n            }\n            \n            // crit damage\n            for (var i = 0; i < critSources.sources.length; i++) {\n                var d = totalCritableDamage * (critSources.sources[i].multiplier - 1);// * critSources.sources[i].totalChance;\n                crits.push({\n                    name: critSources.sources[i].name + ', ' + critSources.sources[i].multiplier + 'x, ' + (critSources.sources[i].totalChance * 100).toFixed(1) + '%',\n                    damage: d,\n                    damageType: 'physical',\n                    damageReduced: self.getReducedDamage(d, 'physical'),\n                    enabled: ko.observable(true),\n                    chance: critSources.sources[i].totalChance\n                });\n                totalCrit += d;\n            }\n\n            var totalReduced = self.getReducedDamage(damage.pure, 'pure') \n                    + self.getReducedDamage(damage.physical, 'physical')\n                    + self.getReducedDamage(damage.magic, 'magic'),\n                totalCritReduced = self.getReducedDamage(totalCrit, 'physical'),\n                dps = {\n                    base: totalDamage * self.attacksPerSecond(),\n                    crit: totalCrit * self.attacksPerSecond(),\n                    geminateAttack: geminateAttack.active ? geminateAttack.damage / geminateAttack.cooldown : 0,\n                    reduced: {\n                        base: totalReduced * self.attacksPerSecond(),\n                        crit: totalCritReduced * self.attacksPerSecond(),\n                        geminateAttack: geminateAttack.active ? self.getReducedDamage(geminateAttack.damage, 'physical') / geminateAttack.cooldown : 0,\n                    }\n                }\n                \n            crits.forEach(function (o) {\n                if (!o.dps) {\n                    o.dps = o.damage * (o.cooldown || self.attacksPerSecond()) * o.chance;\n                }\n                if (!o.dpsReduced) {\n                    o.dpsReduced = o.damageReduced * (o.cooldown || self.attacksPerSecond()) * o.chance;\n                }\n            });\n                \n            result.forEach(function (o) {\n                if (!o.dps) {\n                    o.dps = o.damage * (o.cooldown || self.attacksPerSecond());\n                }\n                if (!o.dpsReduced) {\n                    o.dpsReduced = o.damageReduced * (o.cooldown || self.attacksPerSecond());\n                }\n            });\n            \n            var totalCritChance = crits.reduce(function (memo, o) { return memo + o.chance }, 0);\n                \n            var t1Crit = ko.computed(function () {\n                var c = crits.find(function (o) { return o.enabled(); });\n                return c ? c.damage : 0;\n            });\n            var t2Crit = ko.computed(function () {\n                var c = crits.find(function (o) { return o.enabled(); });\n                return c ? c.damageReduced : 0;\n            });\n            var t3Crit = ko.computed(function () {\n                return crits.filter(function (o) { return o.enabled(); }).reduce(function (memo, o) { return memo + o.dps }, 0);\n            });\n            var t4Crit = ko.computed(function () {\n                return crits.filter(function (o) { return o.enabled(); }).reduce(function (memo, o) { return memo + o.dpsReduced }, 0);\n            });\n                \n            var t1 = ko.computed(function () {\n                return result.filter(function (o) { return o.enabled(); }).reduce(function (memo, o) { return memo + o.damage }, 0) + t1Crit();\n            });\n            var t2 = ko.computed(function () {\n                return result.filter(function (o) { return o.enabled(); }).reduce(function (memo, o) { return memo + o.damageReduced }, 0) + t2Crit();\n            });\n            var t3 = ko.computed(function () {\n                return (result.filter(function (o) { return o.enabled(); }).reduce(function (memo, o) { return memo + o.dps }, 0) + t3Crit()) * a.cooldown;\n            });\n            var t4 = ko.computed(function () {\n                return (result.filter(function (o) { return o.enabled(); }).reduce(function (memo, o) { return memo + o.dpsReduced }, 0) + t4Crit()) * a.cooldown;\n            });\n            \n            var totalCritRow = [t1Crit, t2Crit, t3Crit, t4Crit];\n            \n            var totalRow = [t1, t2, t3, t4];\n\n            return {\n                name: a.name + ' Subtotal',\n                cooldown: a.cooldown,\n                enabled: ko.observable(true),\n                visible: ko.observable(true),\n                totalCritChance: totalCritChance,\n                totalCritRow: totalCritRow,\n                totalRow: totalRow,\n                sources: result,\n                sourcesCrit: crits,\n                total: totalDamage,\n                totalCrit: totalCrit,\n                totalGeminateAttack: totalDamage + geminateAttack.damage,\n                totalGeminateAttackReduced: totalReduced + geminateAttack.damageReduced,\n                geminateAttack: geminateAttack,\n                totalCritReduced: totalCritReduced,\n                totalReduced: totalReduced,\n                sumTotal: totalDamage + totalCrit,\n                sumTotalReduced: totalReduced + totalCritReduced,\n                dps: {\n                    base: dps.base,\n                    crit: dps.base + dps.crit,\n                    geminateAttack: dps.base + dps.geminateAttack,\n                    total: dps.base + dps.crit + dps.geminateAttack,\n                    reduced: {\n                        base: dps.reduced.base,\n                        crit: dps.reduced.base + dps.reduced.crit,\n                        geminateAttack: dps.reduced.base + dps.reduced.geminateAttack,\n                        total: dps.reduced.base + dps.reduced.crit + dps.reduced.geminateAttack\n                    }\n                }\n            };\n        });\n        \n        var t1 = ko.computed(function () {\n            return attacks.filter(function (o) { return o.enabled(); }).reduce(function (memo, o) { return memo + o.totalRow[0]() }, 0);\n        });\n        var t2 = ko.computed(function () {\n            return attacks.filter(function (o) { return o.enabled(); }).reduce(function (memo, o) { return memo + o.totalRow[1]() }, 0);\n        });\n        var t3 = ko.computed(function () {\n            return attacks.filter(function (o) { return o.enabled(); }).reduce(function (memo, o) { return memo + o.totalRow[2]() }, 0);\n        });\n        var t4 = ko.computed(function () {\n            return attacks.filter(function (o) { return o.enabled(); }).reduce(function (memo, o) { return memo + o.totalRow[3]() }, 0);\n        });\n            \n        return {\n            attacks: attacks,\n            totalRow: [t1, t2, t3, t4]\n        }\n    });\n    \n    self.getDamageTypeColor = function (damageType) {\n        return DamageTypeColor[damageType] || DamageTypeColor['default'];\n    }\n    \n}\n\nmodule.exports = HeroDamageMixin;","'use strict';\nvar ko = require('../herocalc_knockout');\n\nvar AbilityModel = require(\"../AbilityModel\");\nvar BuffViewModel = require(\"../BuffViewModel\");\nvar InventoryViewModel = require(\"../inventory/InventoryViewModel\");\nvar diffProperties = require(\"./diffProperties\");\nvar HeroDamageMixin = require(\"./HeroDamageMixin\");\n\nvar totalExp = require(\"./totalExp\");\nvar nextLevelExp = require(\"./nextLevelExp\");\n\nvar HeroModel = function (heroData, itemData, h) {\n    var self = this;\n    self.heroId = ko.observable(h);\n    self.selectedHeroLevel = ko.observable(1);\n    self.inventory = new InventoryViewModel(itemData, self);\n    self.selectedInventory = ko.observable(-1);\n    self.buffs = new BuffViewModel(itemData);\n    self.buffs.hasScepter = self.inventory.hasScepter;\n    self.debuffs = new BuffViewModel(itemData);\n    self.heroData = ko.computed(function () {\n      return heroData['npc_dota_hero_' + self.heroId()];\n    });\n    self.heroCompare = ko.observable(self);\n    self.enemy = ko.observable(self);\n    self.unit = ko.observable(self);\n    self.clone = ko.observable(self);\n    \n    self.skillPointHistory = ko.observableArray();\n    \n    self.ability = ko.computed(function () {\n        var a = new AbilityModel(ko.observableArray(JSON.parse(JSON.stringify(self.heroData().abilities))), self);\n        switch (self.heroId()) {\n            case 'earth_spirit':\n            case 'ogre_magi':\n                a._abilities[3].level(1);\n            break;\n            case 'invoker':\n                for (var i = 6; i < 16; i++) {\n                    a._abilities[i].level(1);\n                }\n            break;\n        }\n        self.skillPointHistory.removeAll();\n        a.hasScepter = self.inventory.hasScepter\n        return a;\n    });\n\n    self.availableSkillPoints = ko.computed(function () {\n        var c = self.selectedHeroLevel();\n        for (var i = 0; i < self.ability().abilities().length; i++) {\n            switch(self.ability().abilities()[i].abilitytype) {\n                case 'DOTA_ABILITY_TYPE_ULTIMATE':\n                    if (self.heroId() === 'invoker') {\n                        while (\n                            ((self.ability().abilities()[i].level() == 1) && (parseInt(self.selectedHeroLevel()) < 2)) ||\n                            ((self.ability().abilities()[i].level() == 2) && (parseInt(self.selectedHeroLevel()) < 7)) ||\n                            ((self.ability().abilities()[i].level() == 3) && (parseInt(self.selectedHeroLevel()) < 11)) ||\n                            ((self.ability().abilities()[i].level() == 4) && (parseInt(self.selectedHeroLevel()) < 17))\n                        ) {\n                            self.ability().levelDownAbility(i, null, null, self);\n                        }\n                    }\n                    else if (self.heroId() === 'meepo') {\n                        while ((self.ability().abilities()[i].level()-1) * 7 + 3 > parseInt(self.selectedHeroLevel())) {\n                            self.ability().levelDownAbility(i, null, null, self);\n                        }\n                    }\n                    else {\n                        while (self.ability().abilities()[i].level() * 5 + 1 > parseInt(self.selectedHeroLevel())) {\n                            self.ability().levelDownAbility(i, null, null, self);\n                        }\n                    }\n                break;\n                default:\n                    while (self.ability().abilities()[i].level() * 2 - 1 > parseInt(self.selectedHeroLevel())) {\n                        self.ability().levelDownAbility(i, null, null, self);\n                    }\n                break;\n            }\n        }\n        while (self.skillPointHistory().length > c) {\n            self.ability().levelDownAbility(self.skillPointHistory()[self.skillPointHistory().length-1], null, null, self);\n        }\n        return c-self.skillPointHistory().length;\n    }, this);\n    self.primaryAttribute = ko.pureComputed(function () {\n        var v = self.heroData().attributeprimary;\n        if (v === 'DOTA_ATTRIBUTE_AGILITY') return 'agi';\n        if (v === 'DOTA_ATTRIBUTE_INTELLECT') return 'int';\n        if (v === 'DOTA_ATTRIBUTE_STRENGTH') return 'str';\n        return '';\n    });\n    self.totalExp = ko.pureComputed(function () {\n        return totalExp[self.selectedHeroLevel() - 1];\n    });\n    self.nextLevelExp = ko.pureComputed(function () {\n        return nextLevelExp[self.selectedHeroLevel() - 1];\n    });\n    self.startingArmor = ko.pureComputed(function () {\n        return (self.heroData().attributebaseagility * .14 + self.heroData().armorphysical).toFixed(2);\n    });\n    self.respawnTime = ko.pureComputed(function () {\n        return 5 + 3.8 * self.selectedHeroLevel();\n    });\n    self.totalAttribute = function (a) {\n        if (a === 'agi') return parseFloat(self.totalAgi());\n        if (a === 'int') return parseFloat(self.totalInt());\n        if (a === 'str') return parseFloat(self.totalStr());\n        return 0;\n    };\n    self.totalAgi = ko.pureComputed(function () {\n        return (self.heroData().attributebaseagility\n                + self.heroData().attributeagilitygain * (self.selectedHeroLevel() - 1) \n                + self.inventory.getAttributes('agi') \n                + self.ability().getAttributeBonusLevel() * 2\n                + self.ability().getAgility()\n                + self.enemy().ability().getAllStatsReduction()\n                + self.debuffs.getAllStatsReduction()\n               ).toFixed(2);\n    });\n    self.intStolen = ko.observable(0).extend({ numeric: 0 });\n    self.totalInt = ko.pureComputed(function () {\n        return (self.heroData().attributebaseintelligence \n                + self.heroData().attributeintelligencegain * (self.selectedHeroLevel() - 1) \n                + self.inventory.getAttributes('int') \n                + self.ability().getAttributeBonusLevel() * 2\n                + self.ability().getIntelligence()\n                + self.enemy().ability().getAllStatsReduction()\n                + self.debuffs.getAllStatsReduction() + self.intStolen()\n               ).toFixed(2);\n    });\n    self.totalStr = ko.pureComputed(function () {\n        return (self.heroData().attributebasestrength \n                + self.heroData().attributestrengthgain * (self.selectedHeroLevel() - 1) \n                + self.inventory.getAttributes('str') \n                + self.ability().getAttributeBonusLevel() * 2\n                + self.ability().getStrength()\n                + self.enemy().ability().getStrengthReduction()\n                + self.enemy().ability().getAllStatsReduction()\n                + self.debuffs.getAllStatsReduction()\n               ).toFixed(2);\n    });\n    self.health = ko.pureComputed(function () {\n        return (self.heroData().statushealth + Math.floor(self.totalStr()) * 20 \n                + self.inventory.getHealth()\n                + self.ability().getHealth()).toFixed(2);\n    });\n    self.healthregen = ko.pureComputed(function () {\n        var healthRegenAura = [self.inventory.getHealthRegenAura, self.buffs.itemBuffs.getHealthRegenAura].reduce(function (memo, fn) {\n            var obj = fn(memo.excludeList);\n            obj.value += memo.value;\n            return obj;\n        }, {value: 0, excludeList: []});\n        return (self.heroData().statushealthregen + self.totalStr() * .03 \n                + self.inventory.getHealthRegen() \n                + self.ability().getHealthRegen()\n                + self.buffs.getHealthRegen()\n                + healthRegenAura.value\n                ).toFixed(2);\n    });\n    self.mana = ko.pureComputed(function () {\n        return (self.heroData().statusmana\n                + self.totalInt() * 12\n                + self.inventory.getMana()\n                + self.ability().getMana()).toFixed(2);\n    });\n    self.manaregen = ko.pureComputed(function () {\n        return ((self.heroData().statusmanaregen \n                + self.totalInt() * .04 \n                + self.ability().getManaRegen()) \n                * (1 + self.inventory.getManaRegenPercent()) \n                + (self.heroId() === 'crystal_maiden' ? self.ability().getManaRegenArcaneAura() * 2 : self.buffs.getManaRegenArcaneAura())\n                + self.inventory.getManaRegenBloodstone()\n                + self.inventory.getManaRegen()\n                - self.enemy().ability().getManaRegenReduction()).toFixed(2);\n    });\n    self.totalArmorPhysical = ko.pureComputed(function () {\n        var armorAura = [self.inventory.getArmorAura, self.buffs.itemBuffs.getArmorAura].reduce(function (memo, fn) {\n            var obj = fn(memo.attributes);\n            return obj;\n        }, {value:0, attributes:[]});\n        var armorReduction = [self.enemy().inventory.getArmorReduction, self.debuffs.itemBuffs.getArmorReduction].reduce(function (memo, fn) {\n            var obj = fn(memo.excludeList);\n            obj.value += memo.value;\n            return obj;\n        }, {value: 0, excludeList: []});\n        return (self.enemy().ability().getArmorBaseReduction() * self.debuffs.getArmorBaseReduction() * (self.heroData().armorphysical + self.totalAgi() * .14)\n                + self.inventory.getArmor()\n                //+ self.inventory.getArmorAura().value\n                //+ self.enemy().inventory.getArmorReduction()\n                + self.ability().getArmor()\n                + self.enemy().ability().getArmorReduction()\n                + self.buffs.getArmor()\n                + self.buffs.itemBuffs.getArmor()\n                + self.debuffs.getArmorReduction()\n                //+ self.buffs.itemBuffs.getArmorAura().value\n                + armorAura.value\n                + armorReduction.value\n                //+ self.debuffs.getArmorReduction()\n                ).toFixed(2);\n    });\n    self.totalArmorPhysicalReduction = ko.pureComputed(function () {\n        var totalArmor = self.totalArmorPhysical();\n        if (totalArmor >= 0) {\n            return ((0.06 * self.totalArmorPhysical()) / (1 + 0.06 * self.totalArmorPhysical()) * 100).toFixed(2);\n        }\n        else {\n            return -((0.06 * -self.totalArmorPhysical()) / (1 + 0.06 * -self.totalArmorPhysical()) * 100).toFixed(2);\n        }\n    });\n    self.totalMovementSpeed = ko.pureComputed(function () {\n        var MIN_MOVESPEED = 100;\n        var ms = (self.ability().setMovementSpeed() > 0 ? self.ability().setMovementSpeed() : self.buffs.setMovementSpeed());\n        if (ms > 0) {\n            return ms;\n        }\n        else {\n            var movementSpeedPercent = [self.inventory.getMovementSpeedPercent, self.buffs.itemBuffs.getMovementSpeedPercent].reduce(function (memo, fn) {\n                var obj = fn(memo.excludeList);\n                obj.value += memo.value;\n                return obj;\n            }, {value:0, excludeList:[]});\n            var movementSpeedPercentReduction = [self.enemy().inventory.getMovementSpeedPercentReduction, self.debuffs.itemBuffs.getMovementSpeedPercentReduction].reduce(function (memo, fn) {\n                var obj = fn(memo.excludeList);\n                obj.value += memo.value;\n                return obj;\n            }, {value:0, excludeList:[]});\n            return Math.max(\n                self.enemy().inventory.isSheeped() || self.debuffs.itemBuffs.isSheeped() ? 140 :\n                (self.heroData().movementspeed + self.inventory.getMovementSpeedFlat()+ self.ability().getMovementSpeedFlat()) * \n                (1 //+ self.inventory.getMovementSpeedPercent() \n                   + movementSpeedPercent.value\n                   + movementSpeedPercentReduction.value\n                   + self.ability().getMovementSpeedPercent() \n                   //+ self.enemy().inventory.getMovementSpeedPercentReduction() \n                   + self.enemy().ability().getMovementSpeedPercentReduction() \n                   + self.buffs.getMovementSpeedPercent() \n                   + self.debuffs.getMovementSpeedPercentReduction()\n                   + self.unit().ability().getMovementSpeedPercent() \n                )\n            , MIN_MOVESPEED).toFixed(2);\n        }\n    });\n    self.totalTurnRate = ko.pureComputed(function () {\n        return (self.heroData().movementturnrate \n                * (1 + self.enemy().ability().getTurnRateReduction()\n                     + self.debuffs.getTurnRateReduction())).toFixed(2);\n    });\n    self.baseDamage = ko.pureComputed(function () {\n        var totalAttribute = self.totalAttribute(self.primaryAttribute()),\n            abilityBaseDamage = self.ability().getBaseDamage(),\n            minDamage = self.heroData().attackdamagemin,\n            maxDamage = self.heroData().attackdamagemax;\n        return [Math.floor((minDamage + totalAttribute + abilityBaseDamage.total) * self.ability().getSelfBaseDamageReductionPct() * self.enemy().ability().getBaseDamageReductionPct() * self.debuffs.getBaseDamageReductionPct() * self.debuffs.itemBuffs.getBaseDamageReductionPct() * abilityBaseDamage.multiplier),\n                Math.floor((maxDamage + totalAttribute + abilityBaseDamage.total) * self.ability().getSelfBaseDamageReductionPct() * self.enemy().ability().getBaseDamageReductionPct() * self.debuffs.getBaseDamageReductionPct() * self.debuffs.itemBuffs.getBaseDamageReductionPct() * abilityBaseDamage.multiplier)];\n    });\n    self.baseDamageAvg = ko.pureComputed(function () {\n        return (self.baseDamage()[0] + self.baseDamage()[1]) / 2;\n    });\n    self.baseDamageMin = ko.pureComputed(function () {\n        return self.baseDamage()[0];\n    });\n    self.baseDamageMax = ko.pureComputed(function () {\n        return self.baseDamage()[1];\n    });\n    self.bonusDamage = ko.pureComputed(function () {\n        return ((self.inventory.getBonusDamage().total\n                + self.ability().getBonusDamage().total\n                + self.buffs.getBonusDamage().total\n                + Math.floor((self.baseDamage()[0] + self.baseDamage()[1]) / 2 \n                              * (self.buffs.itemBuffs.getBonusDamagePercent(self.inventory.getBonusDamagePercent()).total\n                                 + self.ability().getBonusDamagePercent().total\n                                 + self.buffs.getBonusDamagePercent().total\n                                )\n                            )\n                + Math.floor(\n                    (self.heroData().attacktype == 'DOTA_UNIT_CAP_RANGED_ATTACK' \n                        ? ((self.heroId() == 'drow_ranger') ? self.ability().getBonusDamagePrecisionAura().total[0] * self.totalAgi() : self.buffs.getBonusDamagePrecisionAura().total[1])\n                        : 0)\n                  )\n                + Math.floor(\n                    ((self.heroId() == 'riki') ? self.ability().getBonusDamageBackstab().total[0] * self.totalAgi() : 0)\n                  )\n                ) * self.ability().getSelfBaseDamageReductionPct()\n                  * self.enemy().ability().getBaseDamageReductionPct()\n                  * self.debuffs.itemBuffs.getBaseDamageReductionPct());\n    });\n    self.bonusDamageReduction = ko.pureComputed(function () {\n        return Math.abs(self.enemy().ability().getBonusDamageReduction() + self.debuffs.getBonusDamageReduction());\n    });\n    self.damageAvg = ko.pureComputed(function () {\n        return (self.baseDamage()[0] + self.baseDamage()[1]) / 2 + self.bonusDamage();\n    });\n    self.damageMin = ko.pureComputed(function () {\n        return self.baseDamage()[0] + self.bonusDamage();\n    });\n    self.damageMax = ko.pureComputed(function () {\n        return self.baseDamage()[1] + self.bonusDamage();\n    });\n    self.damage = ko.pureComputed(function () {\n        return [self.baseDamage()[0] + self.bonusDamage(),\n                self.baseDamage()[1] + self.bonusDamage()];\n    });\n    self.totalMagicResistanceProduct = ko.pureComputed(function () {\n        return (1 - self.heroData().magicalresistance / 100) \n                * self.inventory.getMagicResist()\n                * self.ability().getMagicResist()\n                * self.buffs.getMagicResist()\n                * self.inventory.getMagicResistReductionSelf()\n                * self.enemy().inventory.getMagicResistReduction()\n                * self.enemy().ability().getMagicResistReduction()\n                * self.debuffs.getMagicResistReduction()\n                * self.debuffs.itemBuffs.getMagicResistReduction();\n    });\n    self.totalMagicResistance = ko.pureComputed(function () {\n        return ((1 - self.totalMagicResistanceProduct()) * 100).toFixed(2);\n    });\n    self.bat = ko.pureComputed(function () {\n        var abilityBAT = self.ability().getBAT();\n        if (abilityBAT > 0) {\n            return abilityBAT;\n        }\n        return self.heroData().attackrate;\n    });\n    self.ias = ko.pureComputed(function () {\n        var attackSpeed = [self.inventory.getAttackSpeed, self.buffs.itemBuffs.getAttackSpeed].reduce(function (memo, fn) {\n            var obj = fn(memo.excludeList);\n            obj.value += memo.value;\n            return obj;\n        }, {value:0, excludeList:[]});\n        var attackSpeedReduction = [self.enemy().inventory.getAttackSpeedReduction, self.debuffs.itemBuffs.getAttackSpeedReduction].reduce(function (memo, fn) {\n            var obj = fn(memo.excludeList);\n            obj.value += memo.value;\n            return obj;\n        }, {value:0, excludeList: []});\n        var val = parseFloat(self.totalAgi()) \n                //+ self.inventory.getAttackSpeed() \n                + attackSpeed.value\n                + attackSpeedReduction.value\n                //+ self.enemy().inventory.getAttackSpeedReduction() \n                + self.ability().getAttackSpeed() \n                + self.enemy().ability().getAttackSpeedReduction() \n                + self.buffs.getAttackSpeed() \n                + self.debuffs.getAttackSpeedReduction()\n                + self.unit().ability().getAttackSpeed(); \n        if (val < -80) {\n            return -80;\n        }\n        else if (val > 500) {\n            return 500;\n        }\n        return val.toFixed(2);\n    });\n    self.attackTime = ko.pureComputed(function () {\n        return (self.bat() / (1 + self.ias() / 100)).toFixed(2);\n    });\n    self.attacksPerSecond = ko.pureComputed(function () {\n        return ((1 + self.ias() / 100) / self.bat()).toFixed(2);\n    });\n    self.evasion = ko.pureComputed(function () {\n        if (self.enemy().inventory.isSheeped() || self.debuffs.itemBuffs.isSheeped()) return 0;\n        var e = self.ability().setEvasion();\n        if (e) {\n            return (e * 100).toFixed(2);\n        }\n        else {\n            return ((1-(self.inventory.getEvasion() * self.ability().getEvasion() * self.ability().getEvasionBacktrack() * self.buffs.itemBuffs.getEvasion())) * 100).toFixed(2);\n        }\n    });\n    self.ehpPhysical = ko.pureComputed(function () {\n        var evasion = self.enemy().inventory.isSheeped() || self.debuffs.itemBuffs.isSheeped() ? 1 : self.inventory.getEvasion() * self.ability().getEvasion() * self.buffs.itemBuffs.getEvasion();\n        if (self.totalArmorPhysical() >= 0) {\n            var ehp = self.health() * (1 + .06 * self.totalArmorPhysical());\n        }\n        else {\n            var ehp = self.health() * (1 - .06 * self.totalArmorPhysical()) / (1 - .12 * self.totalArmorPhysical());\n        }\n        ehp /= (1 - (1 - (evasion * self.ability().getEvasionBacktrack())));\n        ehp /= (1 - parseFloat(self.enemy().missChance()) / 100);\n        ehp *= (self.inventory.activeItems().some(function (item) {return item.item == 'mask_of_madness';}) ? (1 / 1.3) : 1);\n        ehp *= (1 / self.ability().getDamageReduction());\n        ehp *= (1 / self.buffs.getDamageReduction());\n        ehp *= (1 / self.enemy().ability().getDamageAmplification());\n        ehp *= (1 / self.debuffs.getDamageAmplification());\n        return ehp.toFixed(2);\n    });\n    self.ehpMagical = ko.pureComputed(function () {\n        var ehp = self.health() / self.totalMagicResistanceProduct();\n        ehp *= (self.inventory.activeItems().some(function (item) {return item.item == 'mask_of_madness';}) ? (1 / 1.3) : 1);\n        ehp *= (1 / self.ability().getDamageReduction());\n        ehp *= (1 / self.buffs.getDamageReduction());\n        ehp *= (1 / self.ability().getEvasionBacktrack());\n        ehp *= (1 / self.enemy().ability().getDamageAmplification());\n        ehp *= (1 / self.debuffs.getDamageAmplification());\n        return ehp.toFixed(2);\n    });\n    self.bash = ko.pureComputed(function () {\n        var attacktype = self.heroData().attacktype;\n        return ((1 - (self.inventory.getBash(attacktype) * self.ability().getBash())) * 100).toFixed(2);\n    });\n    \n    self.critChance = ko.pureComputed(function () {\n        return ((1 - (self.inventory.getCritChance() * self.ability().getCritChance())) * 100).toFixed(2);\n    });\n\n    HeroDamageMixin(self, itemData);\n    \n    /*self.critDamage = ko.computed(function () {\n        self.critInfo();\n        return 0;\n    });*/\n    self.missChance = ko.pureComputed(function () {\n        var missDebuff = [self.enemy().inventory.getMissChance, self.debuffs.itemBuffs.getMissChance].reduce(function (memo, fn) {\n            var obj = fn(memo.excludeList);\n            obj.value *= memo.value;\n            return obj;\n        }, {value:1, excludeList:[]});\n        return ((1 - (self.enemy().ability().getMissChance() * self.debuffs.getMissChance() * missDebuff.value)) * 100).toFixed(2);\n    });\n    self.totalattackrange = ko.pureComputed(function () {\n        var attacktype = self.heroData().attacktype;\n        return self.heroData().attackrange + self.ability().getAttackRange() + self.inventory.getAttackRange(attacktype).value;\n    });\n    self.visionrangeday = ko.pureComputed(function () {\n        return (self.heroData().visiondaytimerange) * (1 + self.enemy().ability().getVisionRangePctReduction() + self.debuffs.getVisionRangePctReduction());\n    });\n    self.visionrangenight = ko.pureComputed(function () {\n        return (self.heroData().visionnighttimerange + self.inventory.getVisionRangeNight() + self.ability().getVisionRangeNight()) * (1 + self.enemy().ability().getVisionRangePctReduction() + self.debuffs.getVisionRangePctReduction());\n    });\n    self.lifesteal = ko.pureComputed(function () {\n        var total = self.inventory.getLifesteal() + self.ability().getLifesteal() + self.buffs.getLifesteal();\n        if (self.heroData().attacktype == 'DOTA_UNIT_CAP_MELEE_ATTACK') {\n            var lifestealAura = [self.inventory.getLifestealAura, self.buffs.itemBuffs.getLifestealAura].reduce(function (memo, fn) {\n                var obj = fn(memo.excludeList);\n                obj.value += memo.value;\n                return obj;\n            }, {value: 0, excludeList: []});\n            total += lifestealAura.value;\n        }\n        return (total).toFixed(2);\n    });\n    \n    self.diffProperties = diffProperties;\n    self.diff = {};\n\n    for (var i = 0; i < self.diffProperties.length; i++) {\n        var index = i;\n        self.diff[self.diffProperties[index]] = self.getDiffFunction(self.diffProperties[index]);\n    }\n};\n\nHeroModel.prototype.getDiffFunction = function (prop) {\n    var self = this;\n    return ko.computed(function () {\n        if (prop == 'baseDamage') {\n            return [self[prop]()[0] - self.heroCompare()[prop]()[0], self[prop]()[1] - self.heroCompare()[prop]()[1]];\n        }\n        else {\n            return self[prop]() - self.heroCompare()[prop]();\n        }\n    }, this, { deferEvaluation: true });\n}\n\nHeroModel.prototype.getAbilityLevelMax = function (data) {\n    if (data.abilitytype === 'DOTA_ABILITY_TYPE_ATTRIBUTES') {\n        return 10;\n    }\n    else if (data.name === 'invoker_quas' || data.name === 'invoker_wex' || data.name === 'invoker_exort') {\n        return 7;\n    }\n    else if (data.name === 'invoker_invoke') {\n        return 4;\n    }\n    else if (data.name === 'earth_spirit_stone_caller' || data.name === 'ogre_magi_unrefined_fireblast') {\n        return 1;\n    }\n    else if (data.abilitytype === 'DOTA_ABILITY_TYPE_ULTIMATE' || data.name === 'keeper_of_the_light_recall' ||\n             data.name === 'keeper_of_the_light_blinding_light' || data.name === 'ember_spirit_activate_fire_remnant' ||\n             data.name === 'lone_druid_true_form_battle_cry') {\n        return 3;\n    }\n    else if (data.name === 'puck_ethereal_jaunt'  || data.name === 'shadow_demon_shadow_poison_release' ||\n             data.name === 'templar_assassin_trap' || data.name === 'spectre_reality') {\n        return 0;\n    }\n    else if (data.name === 'invoker_cold_snap'  || data.name === 'invoker_ghost_walk' || data.name === 'invoker_tornado' || \n             data.name === 'invoker_emp' || data.name === 'invoker_alacrity' || data.name === 'invoker_chaos_meteor' || \n             data.name === 'invoker_sun_strike' || data.name === 'invoker_forge_spirit' || data.name === 'invoker_ice_wall' || \n             data.name === 'invoker_deafening_blast') {\n        return 0;\n    }\n    else if (data.name === 'techies_minefield_sign' || data.name === 'techies_focused_detonate') {\n        return 0;\n    }\n    else {\n        return 4;\n    }\n};\n\nmodule.exports = HeroModel;","var HeroOption = function (name, displayname, hero) {\n    this.heroName = name;\n    this.heroDisplayName = displayname;\n    this.hero = hero;\n};\n\nmodule.exports = HeroOption;","'use strict';\nvar HeroModel = require(\"./HeroModel\");\nvar illusionData = require(\"../illusion/illusionData\");\nvar findWhere = require(\"../util/findWhere\");\n\nvar IllusionModel = function (heroData, itemData, h,p, abilityLevel) {\n    var self = this;\n    HeroModel.call(this, heroData, itemData, h);\n    self.illusionAbilityLevel = ko.observable(abilityLevel);\n    self.parent = p;\n    \n    self.totalAgi = ko.computed(function () {\n        return (self.heroData().attributebaseagility\n                + self.heroData().attributeagilitygain * (self.selectedHeroLevel() - 1) \n                + self.inventory.getAttributes('agi') \n                + self.ability().getAttributeBonusLevel() * 2\n                + self.ability().getAgility()\n                + self.enemy().ability().getAllStatsReduction()\n                + self.debuffs.getAllStatsReduction()\n               ).toFixed(2);\n    });\n    self.intStolen = ko.observable(0).extend({ numeric: 0 });\n    self.totalInt = ko.computed(function () {\n        return (self.heroData().attributebaseintelligence \n                + self.heroData().attributeintelligencegain * (self.selectedHeroLevel() - 1) \n                + self.inventory.getAttributes('int') \n                + self.ability().getAttributeBonusLevel() * 2\n                + self.ability().getIntelligence()\n                + self.enemy().ability().getAllStatsReduction()\n                + self.debuffs.getAllStatsReduction() + self.intStolen()\n               ).toFixed(2);\n    });\n    self.totalStr = ko.computed(function () {\n        return (self.heroData().attributebasestrength \n                + self.heroData().attributestrengthgain * (self.selectedHeroLevel() - 1) \n                + self.inventory.getAttributes('str') \n                + self.ability().getAttributeBonusLevel() * 2\n                + self.ability().getStrength()\n                + self.enemy().ability().getAllStatsReduction()\n                + self.debuffs.getAllStatsReduction()\n               ).toFixed(2);\n    });\n    \n    self.getAbilityAttributeValue = function(hero, ability, attributeName, level) {\n        if (ability == 'item_manta') {\n            var abilityObj = itemData[ability];\n        }\n        else {\n            var abilityObj = findWhere(heroData['npc_dota_hero_' + hero].abilities, {name: ability});\n        }\n        var attribute = findWhere(abilityObj.attributes, {name: attributeName});\n        if (level == 0) {\n            return parseFloat(attribute.value[0]);\n        }\n        else if (level > attribute.length) {\n            return parseFloat(attribute.value[0]);\n        }\n        else {\n            return parseFloat(attribute.value[level - 1]);\n        }\n    }\n    \n    self.getIncomingDamageMultiplier = function(illusionType, hasScepter, attackType) {\n        if (illusionType == 'item_manta') {\n            if (attackType == 'DOTA_UNIT_CAP_MELEE_ATTACK') {\n                return (1 + self.getAbilityAttributeValue(illusionData[self.illusionType()].hero, self.illusionType(), illusionData[illusionType].incoming_damage_melee, self.illusionAbilityLevel())/100)\n            }\n            else {\n                return (1 + self.getAbilityAttributeValue(illusionData[self.illusionType()].hero, self.illusionType(), illusionData[illusionType].incoming_damage_ranged, self.illusionAbilityLevel())/100)\n            }\n        }\n        else {\n            return (1 + self.getAbilityAttributeValue(illusionData[self.illusionType()].hero, self.illusionType(), illusionData[illusionType].incoming_damage, self.illusionAbilityLevel())/100)\n        }\n    }\n    self.getOutgoingDamageMultiplier = function(illusionType, hasScepter, attackType) {\n        if (illusionType == 'item_manta') {\n            if (attackType == 'DOTA_UNIT_CAP_MELEE_ATTACK') {\n                return (1 + self.getAbilityAttributeValue(illusionData[self.illusionType()].hero, self.illusionType(), illusionData[illusionType].outgoing_damage_melee, self.illusionAbilityLevel())/100);\n            }\n            else {\n                return (1 + self.getAbilityAttributeValue(illusionData[self.illusionType()].hero, self.illusionType(), illusionData[illusionType].outgoing_damage_ranged, self.illusionAbilityLevel())/100);\n            }\n        }\n        else {\n            return (1 + self.getAbilityAttributeValue(illusionData[self.illusionType()].hero, self.illusionType(), illusionData[illusionType].outgoing_damage, self.illusionAbilityLevel())/100);\n        }\n    }\n\n    self.baseDamage = ko.computed(function() {\n        return [Math.floor(heroData['npc_dota_hero_' + self.heroId()].attackdamagemin + self.totalAttribute(self.primaryAttribute()) + self.ability().getBaseDamage().total)\n                * self.getOutgoingDamageMultiplier(self.illusionType(), false, self.heroData().attacktype),\n                Math.floor(heroData['npc_dota_hero_' + self.heroId()].attackdamagemax + self.totalAttribute(self.primaryAttribute()) + self.ability().getBaseDamage().total)\n                * self.getOutgoingDamageMultiplier(self.illusionType(), false, self.heroData().attacktype)];\n    });\n    \n    self.damage = ko.computed(function() {\n        return [self.baseDamage()[0],\n                self.baseDamage()[1]];\n    });\n    \n    self.ehpPhysical = ko.computed(function() {\n        var ehp = (self.health() * (1 + .06 * self.totalArmorPhysical())) / (1 - (1 - (self.inventory.getEvasion() * self.ability().getEvasion())))\n        ehp *= (self.inventory.activeItems().some(function(item) {return item.item == 'mask_of_madness';}) ? (1 / 1.3) : 1);\n        ehp *= (1 / self.getIncomingDamageMultiplier(self.illusionType(), false, self.heroData().attacktype));\n        return ehp.toFixed(2);\n    });\n    self.ehpMagical = ko.computed(function() {\n        var ehp = self.health() / self.totalMagicResistanceProduct();\n        ehp *= (1 / self.getIncomingDamageMultiplier(self.illusionType(), false, self.heroData().attacktype));\n        return ehp.toFixed(2);\n    });\n    \n    self.totalArmorPhysical = ko.computed(function() {\n        return (self.enemy().ability().getArmorBaseReduction() * self.debuffs.getArmorBaseReduction() * (heroData['npc_dota_hero_' + self.heroId()].armorphysical + self.totalAgi() * .14)\n                + self.ability().getArmor() + self.enemy().ability().getArmorReduction() + self.buffs.getArmor() + self.debuffs.getArmorReduction()).toFixed(2);\n    });\n    \n    self.ias = ko.computed(function() {\n        var val = parseFloat(self.totalAgi()) \n                + self.ability().getAttackSpeed() \n                + self.enemy().ability().getAttackSpeedReduction() \n                + self.buffs.getAttackSpeed() \n                + self.debuffs.getAttackSpeedReduction()\n                + self.unit().ability().getAttackSpeed(); \n        if (val < -80) {\n            return -80;\n        }\n        else if (val > 400) {\n            return 400;\n        }\n        return val.toFixed(2);\n    });\n    \n    return self;\n}\nIllusionModel.prototype = Object.create(HeroModel.prototype);\nIllusionModel.prototype.constructor = IllusionModel;\n\nmodule.exports = IllusionModel;","'use strict';\nvar ko = require('../herocalc_knockout');\n\nvar AbilityModel = require(\"../AbilityModel\");\nvar HeroModel = require(\"./HeroModel\");\n\nvar UnitModel = function (heroData, itemData, unitData, h, p) {\n    var self = this;\n    HeroModel.call(this, heroData, itemData, 'abaddon');\n    self.parent = p;\n    self.unitId = ko.observable(h);\n    self.unitLevel = ko.observable(1);\n\n    self.heroData = ko.computed(function() {\n        return unitData[self.unitId()];\n    });\n    self.getAbilityLevelMax = function(data) {\n        if (data.abilitytype == 'DOTA_ABILITY_TYPE_ATTRIBUTES') {\n            return 10;\n        }\n        else if (data.name == 'necronomicon_archer_mana_burn' || data.name == 'necronomicon_archer_aoe'\n            || data.name == 'necronomicon_warrior_mana_burn' || data.name == 'necronomicon_warrior_last_will') {\n            return 3;\n        }\n        else if (data.name == 'necronomicon_warrior_sight') {\n            return 1;\n        }\n        else {\n            return 4;\n        }\n    };\n    self.availableSkillPoints.dispose();\n    self.ability = ko.computed(function() {\n        var a = new AbilityModel(ko.observableArray(JSON.parse(JSON.stringify(self.heroData().abilities))), self);\n        a.hasScepter = self.inventory.hasScepter\n        switch (self.unitId()) {\n            case 'npc_dota_necronomicon_archer_1':\n            case 'npc_dota_necronomicon_warrior_1':\n                a.abilities()[0].level(1);\n                a.abilities()[1].level(1);\n            break;\n            case 'npc_dota_necronomicon_archer_2':\n            case 'npc_dota_necronomicon_warrior_2':\n                a.abilities()[0].level(2);\n                a.abilities()[1].level(2);\n            break;\n            case 'npc_dota_necronomicon_archer_3':\n                a.abilities()[0].level(3);\n                a.abilities()[1].level(3);\n            break;\n            case 'npc_dota_necronomicon_warrior_3':\n                a.abilities()[0].level(3);\n                a.abilities()[1].level(3);\n                a.abilities()[2].level(1);\n            break;\n        }\n        a.levelUpAbility = function(index, data, event, hero) {\n            var i = ko.utils.unwrapObservable(index);\n            switch (a.abilities()[i].name) {\n                case 'necronomicon_archer_mana_burn':\n                case 'necronomicon_archer_aoe':\n                case 'necronomicon_warrior_mana_burn':\n                case 'necronomicon_warrior_last_will':\n                case 'necronomicon_warrior_sight':\n                break;\n                default:\n                    if (a.abilities()[i].level() < hero.getAbilityLevelMax(data)) {\n                        a.abilities()[i].level(a.abilities()[i].level()+1);\n                    }                    \n                break;\n            }\n\n        };\n        a.levelDownAbility = function(index, data, event, hero) {            \n            var i = ko.utils.unwrapObservable(index);\n            switch (a.abilities()[i].name) {\n                case 'necronomicon_archer_mana_burn':\n                case 'necronomicon_archer_aoe':\n                case 'necronomicon_warrior_mana_burn':\n                case 'necronomicon_warrior_last_will':\n                case 'necronomicon_warrior_sight':\n                break;\n                default:\n                    if (a.abilities()[i].level()>0) {\n                        a.abilities()[i].level(a.abilities()[i].level()-1);\n                    }\n                break;\n            }\n        };\n        return a;\n    });        \n    self.primaryAttribute = ko.computed(function() {\n        //var v = unitData[self.unitId()].attributeprimary;\n        var v = 0;\n        if (v == 'DOTA_ATTRIBUTE_AGILITY') {\n            return 'agi'\n        }\n        else if (v == 'DOTA_ATTRIBUTE_INTELLECT') {\n            return 'int'\n        }\n        else if (v == 'DOTA_ATTRIBUTE_STRENGTH') {\n            return 'str'\n        }\n        else {\n            return ''\n        }\n    });\n    self.totalAttribute = function(a) {\n        if (a == 'agi') {\n            return parseFloat(self.totalAgi());\n        }\n        if (a == 'int') {\n            return parseFloat(self.totalInt());\n        }\n        if (a == 'str') {\n            return parseFloat(self.totalStr());\n        }\n        return 0;\n    };\n    self.totalAgi = ko.computed(function() {\n        return (unitData[self.unitId()].attributebaseagility\n                + unitData[self.unitId()].attributeagilitygain * (self.selectedHeroLevel() - 1) \n                //+ self.inventory.getAttributes('agi') \n                + self.ability().getAttributeBonusLevel()*2\n                + self.ability().getAgility()\n                + self.enemy().ability().getAllStatsReduction()\n                + self.debuffs.getAllStatsReduction()\n               ).toFixed(2);\n    });\n    self.totalInt = ko.computed(function() {\n        return (unitData[self.unitId()].attributebaseintelligence \n                + unitData[self.unitId()].attributeintelligencegain * (self.selectedHeroLevel() - 1) \n                //+ self.inventory.getAttributes('int') \n                + self.ability().getAttributeBonusLevel()*2\n                + self.ability().getIntelligence()\n                + self.enemy().ability().getAllStatsReduction()\n                + self.debuffs.getAllStatsReduction()\n               ).toFixed(2);\n    });\n    self.totalStr = ko.computed(function() {\n        return (unitData[self.unitId()].attributebasestrength \n                + unitData[self.unitId()].attributestrengthgain * (self.selectedHeroLevel() - 1) \n                //+ self.inventory.getAttributes('str') \n                + self.ability().getAttributeBonusLevel()*2\n                + self.ability().getStrength()\n                + self.enemy().ability().getAllStatsReduction()\n                + self.debuffs.getAllStatsReduction()\n               ).toFixed(2);\n    });\n    /*self.health = ko.computed(function() {\n        return (unitData[self.unitId()].statushealth + self.totalStr()*19 \n                + self.inventory.getHealth()\n                + self.ability().getHealth()).toFixed(2);\n    });\n    self.healthregen = ko.computed(function() {\n        return (unitData[self.unitId()].statushealthregen + self.totalStr()*.03 \n                + self.inventory.getHealthRegen() \n                + self.ability().getHealthRegen()\n                + self.buffs.getHealthRegen()).toFixed(2);\n    });\n    self.mana = ko.computed(function() {\n        return (unitData[self.unitId()].statusmana + self.totalInt()*13 + self.inventory.getMana()).toFixed(2);\n    });\n    self.manaregen = ko.computed(function() {\n        return ((unitData[self.unitId()].statusmanaregen \n                + self.totalInt()*.04 \n                + self.ability().getManaRegen()) \n                * (1 + self.inventory.getManaRegenPercent()) \n                + (self.selectedHero().heroName == 'crystal_maiden' ? self.ability().getManaRegenArcaneAura() * 2 : self.buffs.getManaRegenArcaneAura())\n                + self.inventory.getManaRegenBloodstone()\n                - self.enemy().ability().getManaRegenReduction()).toFixed(2);\n    });\n    self.totalArmorPhysical = ko.computed(function() {\n        return (self.enemy().ability().getArmorBaseReduction() * self.debuffs.getArmorBaseReduction() * (unitData[self.unitId()].armorphysical + self.totalAgi()*.14)\n                + self.inventory.getArmor() + self.ability().getArmor() + self.enemy().ability().getArmorReduction() + self.buffs.getArmor() + self.debuffs.getArmorReduction()).toFixed(2);\n    });\n    self.totalArmorPhysicalReduction = ko.computed(function() {\n        return ((0.06 * self.totalArmorPhysical()) / (1 + 0.06 * self.totalArmorPhysical()) * 100).toFixed(2);\n    });\n    self.totalMovementSpeed = ko.computed(function() {\n        if (self.parent.ability().isShapeShiftActive()) {\n            return 522;\n        }\n        var ms = (self.ability().setMovementSpeed() > 0 ? self.ability().setMovementSpeed() : self.buffs.setMovementSpeed());\n        if (ms > 0) {\n            return ms;\n        }\n        else {\n            return ((unitData[self.unitId()].movementspeed + self.inventory.getMovementSpeedFlat()+ self.ability().getMovementSpeedFlat()) * \n                    (1 + self.inventory.getMovementSpeedPercent() \n                       + self.ability().getMovementSpeedPercent() \n                       + self.enemy().inventory.getMovementSpeedPercentReduction() \n                       + self.enemy().ability().getMovementSpeedPercentReduction() \n                       + self.buffs.getMovementSpeedPercent() \n                       + self.debuffs.getMovementSpeedPercentReduction()\n                    )).toFixed(2);\n        }\n    });\n    self.totalTurnRate = ko.computed(function() {\n        return (unitData[self.unitId()].movementturnrate \n                * (1 + self.enemy().ability().getTurnRateReduction()\n                     + self.debuffs.getTurnRateReduction())).toFixed(2);\n    });\n    */\n    self.baseDamage = ko.computed(function() {\n        return [Math.floor(unitData[self.unitId()].attackdamagemin + self.totalAttribute(self.primaryAttribute()) + self.ability().getBaseDamage().total),\n                Math.floor(unitData[self.unitId()].attackdamagemax + self.totalAttribute(self.primaryAttribute()) + self.ability().getBaseDamage().total)];\n    });\n    /*self.bonusDamage = ko.computed(function() {\n        return self.inventory.getBonusDamage().total\n                + self.ability().getBonusDamage().total\n                + self.buffs.getBonusDamage().total\n                + Math.floor((self.baseDamage()[0] + self.baseDamage()[1])/2 \n                              * (self.inventory.getBonusDamagePercent().total\n                                 + self.ability().getBonusDamagePercent().total\n                                 + self.buffs.getBonusDamagePercent().total\n                                )\n                            )\n                + Math.floor(\n                    (self.hero().attacktype() == 'DOTA_UNIT_CAP_RANGED_ATTACK' \n                        ? ((self.selectedHero().heroName == 'drow_ranger') ? self.ability().getBonusDamagePrecisionAura().total[0] * self.totalAgi() : self.buffs.getBonusDamagePrecisionAura().total[1])\n                        : 0)\n                  );\n    });*/\n    /*self.bonusDamageReduction = ko.computed(function() {\n        return Math.abs(self.enemy().ability().getBonusDamageReduction() + self.debuffs.getBonusDamageReduction());\n    });\n    self.damage = ko.computed(function() {\n        return [self.baseDamage()[0] + self.bonusDamage()[0],\n                self.baseDamage()[1] + self.bonusDamage()[1]];\n    });*/\n    self.totalMagicResistanceProduct = ko.computed(function() {\n        return (1 - unitData[self.unitId()].magicalresistance / 100) \n                   * (1 - self.inventory.getMagicResist() / 100) \n                   * (1 - self.ability().getMagicResist() / 100) \n                   * (1 - self.buffs.getMagicResist() / 100) \n                   * self.enemy().inventory.getMagicResistReduction()\n                   * self.enemy().ability().getMagicResistReduction() \n                   * self.debuffs.getMagicResistReduction();\n    });\n    self.totalMagicResistance = ko.computed(function() {\n        return (1 - self.totalMagicResistanceProduct());\n    });\n    self.bat = ko.computed(function() {\n        var abilityBAT = self.ability().getBAT();\n        if (abilityBAT > 0) {\n            return abilityBAT;\n        }\n        return unitData[self.unitId()].attackrate;\n    });\n    /*\n    self.ias = ko.computed(function() {\n        var val = parseFloat(self.totalAgi()) \n                + self.inventory.getAttackSpeed() \n                + self.ability().getAttackSpeed() \n                + self.enemy().ability().getAttackSpeedReduction() \n                + self.buffs.getAttackSpeed() \n                + self.debuffs.getAttackSpeedReduction();\n        if (val < -80) {\n            return -80;\n        }\n        else if (val > 400) {\n            return 400;\n        }\n        return (val).toFixed(2);\n    });*/\n    self.attackTime = ko.computed(function() {\n        return (self.bat() / (1 + self.ias() / 100)).toFixed(2);\n    });\n    self.attacksPerSecond = ko.computed(function() {\n        return (1 + self.ias() / 100) / self.bat();\n    });\n    self.evasion = ko.computed(function() {\n        var e = self.ability().setEvasion();\n        if (e) {\n            return (e * 100).toFixed(2) + '%';\n        }\n        else {\n            return ((1-(self.inventory.getEvasion() * self.ability().getEvasion())) * 100).toFixed(2) + '%';\n        }\n    });\n    self.ehpPhysical = ko.computed(function() {\n        return ((self.health() * (1 + .06 * self.totalArmorPhysical())) / (1-(1-(self.inventory.getEvasion() * self.ability().getEvasion())))).toFixed(2);\n    });\n    self.ehpMagical = ko.computed(function() {\n        return (self.health() / self.totalMagicResistanceProduct()).toFixed(2);\n    });\n    self.heroId(h);\n    self.unitId.subscribe(function (newValue) {\n        self.heroId(newValue);\n    });\n    return self;\n}\nUnitModel.prototype = Object.create(HeroModel.prototype);\nUnitModel.prototype.constructor = UnitModel;\n\nmodule.exports = UnitModel;","var diffProperties = [\n    'totalAgi',\n    'totalInt',\n    'totalStr',\n    'health',\n    'healthregen',\n    'mana',\n    'manaregen',\n    'totalArmorPhysical',\n    'totalArmorPhysicalReduction',\n    'totalMovementSpeed',\n    'totalTurnRate',\n    'baseDamage',\n    'bonusDamage',\n    'bonusDamageReduction',\n    'damage',\n    'totalMagicResistanceProduct',\n    'totalMagicResistance',\n    'bat',\n    'ias',\n    'attackTime',\n    'attacksPerSecond',\n    'evasion',\n    'ehpPhysical',\n    'ehpMagical',\n    'bash',\n    'critChance',\n    //'critDamage',\n    'missChance',\n    'totalattackrange',\n    'visionrangeday',\n    'visionrangenight',\n    'lifesteal'\n];\n\nmodule.exports = diffProperties;","var HeroOption = require(\"./HeroOption\");\n\nvar heroOptionsArray = {};\n\nvar init = function (heroData) {\n    heroOptionsArray.items = [];\n    for (var h in heroData) {\n        heroOptionsArray.items.push(new HeroOption(h.replace('npc_dota_hero_', ''), heroData[h].displayname));\n    }\n    return heroOptionsArray.items;\n}\n\nheroOptionsArray.init = init;\n\nmodule.exports = heroOptionsArray;","var nextLevelExp = [200, 300, 400, 500, 600, 600, 800, 1000, 1000, 600, 2200, 800, 1400, 1500, 1600, 1700, 1800, 1900, 2000, 2100, 2200, 2300, 2400, 2500, '&mdash;'];\n\nmodule.exports = nextLevelExp;","var totalExp = [0, 200, 500, 900, 1400, 2000, 2600, 3400, 4400, 5400, 6000, 8200, 9000, 10400, 11900, 13500, 15200, 17000, 18900, 20900, 23000, 25200, 27500, 29900, 32400];\n\nmodule.exports = totalExp;","var abilityData = {\n    'alchemist_acid_spray': [\n        {\n            label: 'Duration',\n            controlType: 'input'\n        },\n        {\n            attributeName: 'damage',\n            label: 'Total Damage',\n            controlType: 'text',\n            fn: function (v, a, parent, index, abilityModel, ability) {\n                return v*a;\n            }\n        },\n        {\n            attributeName: 'armor_reduction',\n            label: 'Total Damage',\n            controlType: 'text',\n            fn: function (v, a, parent, index, abilityModel, ability) {\n                return -a;\n            },\n            returnProperty: 'armorReduction'\n        }\n    ],\n    'alchemist_unstable_concoction': [\n        {\n            label: 'Brew Time',\n            controlType: 'input'\n        },\n        {\n            attributeName: 'max_damage',\n            label: 'Total Damage',\n            controlType: 'text',\n            fn: function (v, a, parent, index, abilityModel, ability) {\n                return v*a/5;\n            }\n        },\n        {\n            attributeName: 'max_stun',\n            label: 'Total Stun',\n            controlType: 'text',\n            fn: function (v, a, parent, index, abilityModel, ability) {\n                return v*a/5;\n            }\n        }\n    ],\n    'ancient_apparition_cold_feet': [\n        {\n            label: 'Duration',\n            controlType: 'input'\n        },\n        {\n            attributeName: 'damage',\n            label: 'Total Damage',\n            controlType: 'text',\n            fn: function (v, a, parent, index, abilityModel, ability) {\n                return v*a;\n            }\n        },\n        {\n            attributeName: 'stun_duration',\n            label: 'Total Stun',\n            controlType: 'text',\n            fn: function (v, a, parent, index, abilityModel, ability) {\n                return a;\n            }\n        }\n    ],\n    'ancient_apparition_ice_blast': [\n        {\n            label: 'Duration',\n            controlType: 'input'\n        },\n        {\n            attributeName: 'dot_damage',\n            label: 'Total Damage',\n            controlType: 'text',\n            fn: function (v, a, parent, index, abilityModel, ability) {\n                return abilityModel.getAbilityPropertyValue(ability, 'damage')+v*a;\n            }\n        }\n    ],\n    'antimage_mana_void': [\n        {\n            label: 'Enemy Missing Mana',\n            controlType: 'input'\n        },\n        {\n            attributeName: 'mana_void_damage_per_mana',\n            label: 'Total Damage',\n            controlType: 'text',\n            fn: function (v, a, parent, index, abilityModel, ability) {\n                return v*a;\n            }\n        }\n    ],\n    'axe_battle_hunger': [\n        {\n            label: 'Battle Hungered Enemies',\n            controlType: 'input'\n        },\n        {\n            attributeName: 'speed_bonus',\n            label: 'Movement Speed Bonus',\n            controlType: 'text',\n            noLevel: true,\n            fn: function (v, a, parent, index, abilityModel, ability) {\n                return v*a;\n            },\n            returnProperty: 'movementSpeedPct'\n        },\n        {\n            attributeName: 'slow',\n            label: 'Movement Speed Bonus',\n            controlType: 'text',\n            noLevel: true,\n            fn: function (v, a, parent, index, abilityModel, ability) {\n                return a;\n            },\n            returnProperty: 'movementSpeedPctReduction'\n        }\n    ],\n    'bane_nightmare': [\n        {\n            label: 'Duration',\n            controlType: 'input'\n        },\n        {\n            label: 'DAMAGE:',\n            controlType: 'text',\n            fn: function (v, a, parent, index, abilityModel, ability) {\n                return abilityModel.getAbilityPropertyValue(ability, 'damage')*v;\n            }\n        }\n    ],\n    'bane_fiends_grip': [\n        {\n            label: 'Duration',\n            controlType: 'input'\n        },\n        {\n            label: 'Enemy Max Mana',\n            controlType: 'input'\n        },\n        {\n            attributeName: 'fiend_grip_damage',\n            label: 'Total Damage',\n            controlType: 'text',\n            controls: [0,1],\n            fn: function (v, a, parent, index, abilityModel, ability) {\n                if (parent.inventory.hasScepter()) {\n                    return v[0]*abilityModel.getAbilityAttributeValue(ability.attributes, 'fiend_grip_damage_scepter',ability.level());\n                }\n                else {\n                    return v[0]*a;\n                }\n            }\n        },\n        {\n            attributeName: 'fiend_grip_mana_drain',\n            label: 'Total Mana Drain',\n            controlType: 'text',\n            controls: [0,1],\n            noLevel: true,\n            fn: function (v, a, parent, index, abilityModel, ability) {\n                if (parent.inventory.hasScepter()) {\n                    return v[0]*v[1]*abilityModel.getAbilityAttributeValue(ability.attributes, 'fiend_grip_mana_drain_scepter',ability.level())/100;\n                }\n                else {\n                    return v[0]*v[1]*a/100;\n                }\n            }\n        }\n    ],\n    'batrider_sticky_napalm': [\n        {\n            label: 'Stacks',\n            controlType: 'input'\n        },\n        {\n            attributeName: 'damage',\n            label: 'Total Bonus Damage',\n            controlType: 'text',\n            fn: function (v, a, parent, index, abilityModel, ability) {\n                return v*a;\n            },\n            returnProperty: 'bonusDamage'\n        },\n        {\n            attributeName: 'movement_speed_pct',\n            label: 'Enemy Movement Speed Slow',\n            controlType: 'text',\n            fn: function (v, a, parent, index, abilityModel, ability) {\n                return v*a;\n            },\n            returnProperty: 'movementSpeedPctReduction'\n        },\n        {\n            attributeName: 'turn_rate_pct',\n            label: 'Enemy Turn Rate Slow',\n            controlType: 'text',\n            fn: function (v, a, parent, index, abilityModel, ability) {\n                return a;\n            },\n            returnProperty: 'turnRateReduction'\n        }\n    ],\n    'batrider_firefly': [\n        {\n            label: 'Duration',\n            controlType: 'input'\n        },\n        {\n            attributeName: 'damage_per_second',\n            label: 'Total Damage',\n            controlType: 'text',\n            fn: function (v, a, parent, index, abilityModel, ability) {\n                return v*a;\n            }\n        }\n    ],\n    'bloodseeker_rupture': [\n        {\n            label: 'Enemy Distance Traveled',\n            controlType: 'input'\n        },\n        {\n            attributeName: 'movement_damage_pct',\n            label: 'DAMAGE:',\n            ignoreTooltip: true,\n            controlType: 'text',\n            fn: function (v, a, parent, index, abilityModel, ability) {\n                return abilityModel.getAbilityPropertyValue(ability, 'damage') + v*a/100;\n            }\n        }\n    ],\n    'bristleback_viscous_nasal_goo': [\n        {\n            label: 'Stacks',\n            controlType: 'input'\n        },\n        {\n            attributeName: 'armor_per_stack',\n            label: 'Enemy Armor Reduction',\n            controlType: 'text',\n            fn: function (v, a, parent, index, abilityModel, ability) {\n                return -v*a;\n            },\n            returnProperty: 'armorReduction'\n        },\n        {\n            attributeName: 'move_slow_per_stack',\n            label: '%SLOW:',\n            ignoreTooltip: true,\n            controlType: 'text',\n            fn: function (v, a, parent, index, abilityModel, ability) {\n                return -(abilityModel.getAbilityAttributeValue(ability.attributes, 'base_move_slow',0)+v*a);\n            },\n            returnProperty: 'movementSpeedPctReduction'\n        }\n    ],\n    'bristleback_quill_spray': [\n        {\n            label: 'Stacks',\n            controlType: 'input'\n        },\n        {\n            attributeName: 'quill_stack_damage',\n            label: 'DAMAGE',\n            controlType: 'text',\n            fn: function (v, a, parent, index, abilityModel, ability) {\n                var total = abilityModel.getAbilityAttributeValue(ability.attributes, 'quill_base_damage',ability.level())+v*a,\n                damage_cap = abilityModel.getAbilityAttributeValue(ability.attributes, 'max_damage',0);\n                if (total > damage_cap) {\n                    total = damage_cap;\n                }\n                return total;\n            }\n        }\n    ],\n    'bristleback_bristleback': [\n        {\n            label: 'Damage From',\n            controlType: 'radio',\n            controlValueType: 'string',\n            controlOptions: [\n                {text: 'Back', value: 'back'},\n                {text: 'Side', value: 'side'}\n            ]\n        },\n        {\n            attributeName: 'back_damage_reduction',\n            label: '%DAMAGE REDUCTION:',\n            ignoreTooltip: true,\n            controlType: 'text',\n            fn: function (v, a, parent, index, abilityModel, ability) {\n                var ability = abilityModel.abilities().find(function(b) {\n                    return b.name == 'bristleback_bristleback';\n                });\n                if (v == 'back') {\n                    var total = abilityModel.getAbilityAttributeValue(ability.attributes, 'back_damage_reduction', ability.level());\n                }\n                else {\n                    var total = abilityModel.getAbilityAttributeValue(ability.attributes, 'side_damage_reduction', ability.level());\n                }\n                return -total;\n            },\n            returnProperty: 'damageReduction'\n        }\n    ],\n    'bristleback_warpath': [\n        {\n            label: 'Stacks',\n            controlType: 'input'\n        },\n        {\n            attributeName: 'damage_per_stack',\n            label: 'BONUS DAMAGE:',\n            ignoreTooltip: true,\n            controlType: 'text',\n            fn: function (v, a, parent, index, abilityModel, ability) {\n                if (v < 1) {\n                    return 0;\n                }\n                else {\n                    return abilityModel.getAbilityAttributeValue(ability.attributes, 'base_damage',ability.level())+(v-1)*a;\n                }\n            }\n        },\n        {\n            attributeName: 'move_speed_per_stack',\n            label: '%MOVEMENT:',\n            ignoreTooltip: true,\n            controlType: 'text',\n            fn: function (v, a, parent, index, abilityModel, ability) {\n                if (v < 1) {\n                    return 0;\n                }\n                else {\n                    return abilityModel.getAbilityAttributeValue(ability.attributes, 'base_move_speed',ability.level())+(v-1)*a;\n                }\n            },\n            returnProperty: 'movementSpeedPct'\n        }\n    ],\n    'centaur_return': [\n        {\n            label: 'Strength',\n            controlType: 'input'\n        },\n        {\n            attributeName: 'strength_pct',\n            label: 'DAMAGE:',\n            controlType: 'text',\n            fn: function (v, a, parent, index, abilityModel, ability) {\n                return abilityModel.getAbilityAttributeValue(ability.attributes, 'return_damage',ability.level()) + v*a/100;\n            }\n        }\n    ],\n    'centaur_stampede': [\n        {\n            label: 'Strength',\n            controlType: 'input'\n        },\n        {\n            attributeName: 'strength_damage',\n            label: 'DAMAGE:',\n            ignoreTooltip: true,\n            controlType: 'text',\n            fn: function (v, a, parent, index, abilityModel, ability) {\n                return v*a;\n            }\n        },\n        {\n            attributeName: 'slow_movement_speed',\n            label: 'Enemy Movement Speed Slow',\n            controlType: 'text',\n            fn: function (v, a, parent, index, abilityModel, ability) {\n                return -a;\n            },\n            returnProperty: 'movementSpeedPctReduction'\n        }\n    ],\n    'clinkz_death_pact': [\n        {\n            label: 'Consumed Unit HP',\n            controlType: 'input'\n        },\n        {\n            attributeName: 'damage_gain_pct',\n            label: 'BASE DAMAGE GAIN:',\n            ignoreTooltip: true,\n            controlType: 'text',\n            fn: function (v, a, parent, index, abilityModel, ability) {\n                return v*a/100;\n            },\n            returnProperty: 'baseDamage'\n        },\n        {\n            attributeName: 'health_gain_pct',\n            label: 'HEALTH GAIN:',\n            ignoreTooltip: true,\n            controlType: 'text',\n            fn: function (v, a, parent, index, abilityModel, ability) {\n                return v*a/100;\n            },\n            returnProperty: 'bonusHealth'\n        }\n    ],\n    'crystal_maiden_frostbite': [\n        {\n            label: 'Duration',\n            controlType: 'input'\n        },\n        {\n            label: 'DAMAGE:',\n            controlType: 'text',\n            fn: function (v, a, parent, index, abilityModel, ability) {\n                return abilityModel.getAbilityPropertyValue(ability, 'damage')*v;\n            }\n        }\n    ],\n    'dark_seer_ion_shell': [\n        {\n            label: 'Duration',\n            controlType: 'input'\n        },\n        {\n            attributeName: 'damage_per_second',\n            label: 'Total Damage',\n            controlType: 'text',\n            fn: function (v, a, parent, index, abilityModel, ability) {\n                return v*a;\n            }\n        }\n    ],\n    'dazzle_shadow_wave': [\n        {\n            label: 'Targets',\n            controlType: 'input'\n        },\n        {\n            label: 'DAMAGE:',\n            controlType: 'text',\n            fn: function (v, a, parent, index, abilityModel, ability) {\n                return abilityModel.getAbilityPropertyValue(ability, 'damage')*v;\n            }\n        }\n    ],\n    'dazzle_weave': [\n        {\n            label: 'Duration',\n            controlType: 'input'\n        },\n        {\n            attributeName: 'armor_per_second',\n            label: 'ARMOR',\n            ignoreTooltip: true,\n            controlType: 'text',\n            fn: function (v, a, parent, index, abilityModel, ability) {\n                return v*a;\n            },\n            returnProperty: 'armor'\n        },\n        {\n            attributeName: 'armor_per_second',\n            label: 'ARMOR REDUCTION:',\n            ignoreTooltip: true,\n            controlType: 'text',\n            fn: function (v, a, parent, index, abilityModel, ability) {\n                return -v*a;\n            },\n            returnProperty: 'armorReduction'\n        }\n    ],\n    'death_prophet_exorcism': [\n        {\n            label: 'Damage Dealt',\n            controlType: 'input'\n        },\n        {\n            attributeName: 'heal_percent',\n            label: 'Total Armor',\n            controlType: 'text',\n            fn: function (v, a, parent, index, abilityModel, ability) {\n                return v*a/100;\n            }\n        }\n    ],\n    'disruptor_static_storm': [\n        {\n            label: 'Duration',\n            controlType: 'input'\n        },\n        {\n            label: 'DAMAGE:',\n            controlType: 'text',\n            fn: function (v, a, parent, index, abilityModel, ability) {\n                var damagevalue = 0.25 * (130 + 40 * ability.level()) * (1/20),\n                mult = (v*4)*((v*4)+1)/2;\n                return damagevalue * mult;\n            }\n        }\n    ],\n    'doom_bringer_scorched_earth': [\n        {\n            label: 'Duration',\n            controlType: 'input'\n        },\n        {\n            attributeName: 'damage_per_second',\n            label: 'Total Damage',\n            controlType: 'text',\n            fn: function (v, a, parent, index, abilityModel, ability) {\n                return v*a;\n            }\n        },\n        {\n            attributeName: 'bonus_movement_speed_pct',\n            label: 'Total Damage',\n            controlType: 'text',\n            fn: function (v, a, parent, index, abilityModel, ability) {\n                return a;\n            },\n            returnProperty: 'movementSpeedPct'\n        },\n        {\n            attributeName: 'damage_per_second',\n            label: 'HP REGEN:',\n            ignoreTooltip: true,\n            controlType: 'text',\n            fn: function (v, a, parent, index, abilityModel, ability) {\n                return a;\n            },\n            returnProperty: 'healthregen'\n        }\n    ],\n    'doom_bringer_doom': [\n        {\n            label: 'Duration',\n            controlType: 'input'\n        },\n        {\n            attributeName: 'damage',\n            label: 'Total Damage',\n            controlType: 'text',\n            fn: function (v, a, parent, index, abilityModel, ability) {\n                if (parent.inventory.hasScepter()) {\n                    return v*abilityModel.getAbilityAttributeValue(ability.attributes, 'damage_scepter',ability.level());\n                }\n                else {\n                    return v*a;\n                }\n            }\n        }\n    ],\n    'dragon_knight_elder_dragon_form': [\n        {\n            label: 'Duration',\n            controlType: 'input'\n        },\n        {\n            attributeName: 'bonus_attack_range',\n            label: 'Total Damage',\n            controlType: 'text',\n            fn: function (v, a, parent, index, abilityModel, ability) {\n                return a;\n            },\n            returnProperty: 'attackrange'\n        },\n        {\n            attributeName: 'bonus_movement_speed',\n            label: 'Total Damage',\n            controlType: 'text',\n            fn: function (v, a, parent, index, abilityModel, ability) {\n                return a;\n            },\n            returnProperty: 'movementSpeedFlat'\n        }\n    ],\n    'drow_ranger_trueshot': [\n        {\n            label: 'Drow\\'s Agility',\n            controlType: 'input',\n            display: 'buff'\n        },\n        {\n            attributeName: 'trueshot_ranged_damage',\n            label: 'DAMAGE BONUS:',\n            ignoreTooltip: true,\n            controlType: 'text',\n            display: 'buff',\n            fn: function (v, a, parent, index, abilityModel, ability) {\n                return v*a/100;\n            },\n            returnProperty: 'bonusDamagePrecisionAura'\n        }\n    ],\n    'earth_spirit_rolling_boulder': [\n        {\n            label: 'Using Stone',\n            controlType: 'checkbox'\n        },\n        {\n            attributeName: 'move_slow',\n            label: 'Total Damage',\n            controlType: 'text',\n            fn: function (v, a, parent, index, abilityModel, ability) {\n                if (v) {\n                    return -a;\n                }\n                else {\n                    return 0;\n                }\n            },\n            returnProperty: 'movementSpeedPctReduction'\n        }\n    ],\n    'earthshaker_enchant_totem': [\n        {\n            label: 'Activated',\n            controlType: 'checkbox'\n        },\n        {\n            attributeName: 'totem_damage_percentage',\n            label: 'DAMAGE',\n            controlType: 'text',\n            fn: function (v, a, parent, index, abilityModel, ability) {\n                if (v) {\n                    return a;\n                }\n                else {\n                    return 0;\n                }\n            },\n            returnProperty: 'baseDamageMultiplier'\n        }\n    ],\n    'earthshaker_echo_slam': [\n        {\n            label: 'Enemies in Range',\n            controlType: 'input'\n        },\n        {\n            attributeName: 'echo_slam_echo_damage',\n            label: 'Total Damage',\n            controlType: 'text',\n            fn: function (v, a, parent, index, abilityModel, ability) {\n                return v*a;\n            }\n        }\n    ],\n    'elder_titan_ancestral_spirit': [\n        {\n            label: 'HEROES PASSED THROUGH',\n            controlType: 'input'\n        },\n        {\n            label: 'CREEPS PASSED THROUGH',\n            controlType: 'input'\n        },\n        {\n            attributeName: 'damage_creeps',\n            label: 'DAMAGE:',\n            ignoreTooltip: true,\n            controlType: 'text',\n            controls: [0,1],\n            fn: function (v, a, parent, index, abilityModel, ability) {\n                return v[0]*abilityModel.getAbilityAttributeValue(ability.attributes, 'damage_heroes',ability.level()) + v[1]*a;\n            },\n            returnProperty: 'bonusDamage'\n        },\n        {\n            attributeName: 'move_pct_creeps',\n            label: '%BONUS SPEED:',\n            ignoreTooltip: true,\n            controlType: 'text',\n            controls: [0,1],\n            fn: function (v, a, parent, index, abilityModel, ability) {\n                return v[0]*abilityModel.getAbilityAttributeValue(ability.attributes, 'move_pct_heroes',ability.level()) + v[1]*a;\n            },\n            returnProperty: 'movementSpeedPct'\n        }\n    ],\n    'elder_titan_earth_splitter': [\n        {\n            label: 'Enemy Max Health',\n            controlType: 'input'\n        },\n        {\n            attributeName: 'damage_pct',\n            label: 'Total Damage',\n            controlType: 'text',\n            fn: function (v, a, parent, index, abilityModel, ability) {\n                return v*a/100;\n            }\n        },\n        {\n            attributeName: 'slow_pct',\n            label: 'Total Damage',\n            controlType: 'text',\n            fn: function (v, a, parent, index, abilityModel, ability) {\n                return -a;\n            },\n            returnProperty: 'movementSpeedPctReduction'\n        }\n    ],\n    'enchantress_natures_attendants': [\n        {\n            label: 'Duration',\n            controlType: 'input'\n        },\n        {\n            attributeName: 'heal',\n            label: 'HEAL:',\n            ignoreTooltip: true,\n            controlType: 'text',\n            fn: function (v, a, parent, index, abilityModel, ability) {\n                return abilityModel.getAbilityAttributeValue(ability.attributes, 'wisp_count',ability.level())*v*a;\n            }\n        }\n    ],\n    'enigma_malefice': [\n        {\n            label: 'Hits',\n            controlType: 'input'\n        },\n        {\n            attributeName: 'damage',\n            label: 'DAMAGE:',\n            ignoreTooltip: true,\n            controlType: 'text',\n            fn: function (v, a, parent, index, abilityModel, ability) {\n                return v*a;\n            }\n        },\n        {\n            attributeName: 'stun_duration',\n            label: 'Total Damage',\n            controlType: 'text',\n            fn: function (v, a, parent, index, abilityModel, ability) {\n                return v*a;\n            }\n        }\n    ],\n    'enigma_midnight_pulse': [\n        {\n            label: 'Duration',\n            controlType: 'input'\n        },\n        {\n            label: 'Enemy Max Health',\n            controlType: 'input'\n        },\n        {\n            attributeName: 'damage_percent',\n            label: 'DAMAGE:',\n            ignoreTooltip: true,\n            controlType: 'text',\n            controls: [0,1],\n            fn: function (v, a, parent, index, abilityModel, ability) {\n                return v[0]*v[1]*a/100;\n            }\n        }\n    ],\n    'enigma_black_hole': [\n        {\n            label: 'Duration',\n            controlType: 'input'\n        },\n        {\n            attributeName: 'far_damage',\n            label: 'Total Damage',\n            controlType: 'text',\n            fn: function (v, a, parent, index, abilityModel, ability) {\n                return v*a;\n            }\n        },\n        {\n            attributeName: 'near_damage',\n            label: 'Total Damage',\n            controlType: 'text',\n            fn: function (v, a, parent, index, abilityModel, ability) {\n                return v*a;\n            }\n        }\n    ],\n    'faceless_void_time_lock': [\n        {\n            label: 'In Chronosphere',\n            controlType: 'checkbox'\n        },\n        {\n            attributeName: 'bonus_damage',\n            label: '%MOVESPEED AS DAMAGE',\n            controlType: 'text',\n            fn: function (v, a, parent, index, abilityModel, ability) {\n                if (v) {\n                    return a*2;\n                }\n                else {\n                    return a;\n                }\n            },\n            returnProperty: 'bashBonusDamage'\n        },\n        {\n            attributeName: 'duration',\n            label: 'Total Damage',\n            controlType: 'text',\n            fn: function (v, a, parent, index, abilityModel, ability) {\n                return a;\n            }\n        },\n        {\n            attributeName: 'chance_pct',\n            label: 'Total Damage',\n            controlType: 'text',\n            fn: function (v, a, parent, index, abilityModel, ability) {\n                return a;\n            },\n            returnProperty: 'bash'\n        }\n    ],\n    'gyrocopter_rocket_barrage': [\n        {\n            label: 'Rockets',\n            controlType: 'input'\n        },\n        {\n            attributeName: 'rockets_per_second',\n            label: 'Total Damage',\n            controlType: 'text',\n            fn: function (v, a, parent, index, abilityModel, ability) {\n                return a;\n            }\n        },\n        {\n            label: 'DAMAGE:',\n            controlType: 'text',\n            fn: function (v, a, parent, index, abilityModel, ability) {\n                return abilityModel.getAbilityPropertyValue(ability, 'damage')*v;\n            }\n        }\n    ],\n/*        'gyrocopter_homing_missile': [\n        {\n            label: 'Distance Traveled',\n            controlType: 'input'\n        },\n        {\n            attributeName: 'damage',\n            label: 'Total Damage',\n            controlType: 'text',\n            fn: function (v, a, parent, index, abilityModel, ability) {\n                return v*a;\n            }\n        }\n    ],\n    'gyrocopter_flak_cannon': [\n        {\n            label: 'Attacks',\n            controlType: 'input'\n        },\n        {\n            attributeName: 'damage',\n            label: 'Total Damage',\n            controlType: 'text',\n            fn: function (v, a, parent, index, abilityModel, ability) {\n                return v*a;\n            }\n        }\n    ],*/\n    'huskar_burning_spear': [\n        {\n            label: 'Stacks',\n            controlType: 'input'\n        },\n        {\n            attributeName: 'health_cost',\n            label: 'Total Damage',\n            controlType: 'text',\n            fn: function (v, a, parent, index, abilityModel, ability) {\n                return v*a;\n            }\n        },\n        {\n            label: 'DAMAGE:',\n            controlType: 'text',\n            fn: function (v, a, parent, index, abilityModel, ability) {\n                return abilityModel.getAbilityPropertyValue(ability, 'damage')*v;\n            }\n        }\n    ],\n    'huskar_berserkers_blood': [\n        {\n            label: '%HP',\n            controlType: 'input'\n        },\n        {\n            attributeName: 'hp_threshold_max',\n            label: 'Health at given %HP:',\n            ignoreTooltip: true,\n            controlType: 'text',\n            fn: function (v, a, parent, index, abilityModel, ability) {\n                return parent.health()*v/100;\n            }\n        },\n        {\n            attributeName: 'hp_threshold_max',\n            label: 'Total Damage',\n            controlType: 'text',\n            fn: function (v, a, parent, index, abilityModel, ability) {\n                return a;\n            }\n        },\n        {\n            attributeName: 'maximum_resistance',\n            label: 'MAGIC RESISTANCE BONUS:',\n            ignoreTooltip: true,\n            controlType: 'text',\n            fn: function (v, a, parent, index, abilityModel, ability) {\n                var v = Math.min(v, 100);\n                v = Math.max(v, 10);\n                var hp_threshold_max = abilityModel.getAbilityAttributeValue(ability.attributes, 'hp_threshold_max',0);\n                var d = 100 - hp_threshold_max;\n                var c = (v - hp_threshold_max) / d;\n                c = 1 - c;\n                return c*a;\n            },\n            returnProperty: 'magicResist'\n        },\n        {\n            attributeName: 'maximum_attack_speed',\n            label: 'ATTACK SPEED BONUS:',\n            ignoreTooltip: true,\n            controlType: 'text',\n            fn: function (v, a, parent, index, abilityModel, ability) {\n                var v = Math.min(v, 100);\n                v = Math.max(v, 10);\n                var hp_threshold_max = abilityModel.getAbilityAttributeValue(ability.attributes, 'hp_threshold_max',0);\n                var d = 100 - hp_threshold_max;\n                var c = (v - hp_threshold_max) / d;\n                c = 1 - c;\n                return c*a;\n            },\n            returnProperty: 'attackspeed'\n        }\n    ],\n    'huskar_life_break': [\n        {\n            label: 'Enemy Current HP',\n            controlType: 'input'\n        },\n        {\n            attributeName: 'health_damage',\n            label: 'DAMAGE:',\n            ignoreTooltip: true,\n            controlType: 'text',\n            fn: function (v, a, parent, index, abilityModel, ability) {\n                return v*a;\n            }\n        },\n        {\n            label: 'Huskar Current HP',\n            controlType: 'input'\n        },\n        {\n            attributeName: 'health_cost_percent',\n            label: 'DAMAGE TAKEN:',\n            ignoreTooltip: true,\n            controlType: 'text',\n            fn: function (v, a, parent, index, abilityModel, ability) {\n                return v*a;\n            }\n        },\n        {\n            attributeName: 'movespeed',\n            label: 'Total Damage',\n            controlType: 'text',\n            fn: function (v, a, parent, index, abilityModel, ability) {\n                return a;\n            },\n            returnProperty: 'movementSpeedPctReduction'\n        }\n    ],\n    'invoker_quas': [\n        {\n            label: 'Instances',\n            controlType: 'input'\n        },\n        {\n            attributeName: 'bonus_strength',\n            label: 'Total Damage',\n            controlType: 'text',\n            fn: function (v, a, parent, index, abilityModel, ability) {\n                return a;\n            },\n            returnProperty: 'bonusStrength'\n        },\n        {\n            attributeName: 'health_regen_per_instance',\n            label: 'HP REGEN:',\n            ignoreTooltip: true,\n            controlType: 'text',\n            fn: function (v, a, parent, index, abilityModel, ability) {\n                return v*a;\n            },\n            returnProperty: 'healthregen'\n        }\n    ],\n    'invoker_wex': [\n        {\n            label: 'Instances',\n            controlType: 'input'\n        },\n        {\n            attributeName: 'bonus_agility',\n            label: 'Total Damage',\n            controlType: 'text',\n            fn: function (v, a, parent, index, abilityModel, ability) {\n                return a;\n            },\n            returnProperty: 'bonusAgility'\n        },\n        {\n            attributeName: 'move_speed_per_instance',\n            label: '%MOVE SPEED:',\n            ignoreTooltip: true,\n            controlType: 'text',\n            fn: function (v, a, parent, index, abilityModel, ability) {\n                return v*a;\n            },\n            returnProperty: 'movementSpeedPct'\n        },\n        {\n            attributeName: 'attack_speed_per_instance',\n            label: '%ATTACK SPEED:',\n            ignoreTooltip: true,\n            controlType: 'text',\n            fn: function (v, a, parent, index, abilityModel, ability) {\n                return v*a;\n            },\n            returnProperty: 'attackspeed'\n        }\n    ],\n    'invoker_exort': [\n        {\n            label: 'Instances',\n            controlType: 'input'\n        },\n        {\n            attributeName: 'bonus_intelligence',\n            label: 'Total Damage',\n            controlType: 'text',\n            fn: function (v, a, parent, index, abilityModel, ability) {\n                return a;\n            },\n            returnProperty: 'bonusInt'\n        },\n        {\n            attributeName: 'bonus_damage_per_instance',\n            label: 'DAMAGE:',\n            ignoreTooltip: true,\n            controlType: 'text',\n            fn: function (v, a, parent, index, abilityModel, ability) {\n                return v*a;\n            },\n            returnProperty: 'bonusDamage'\n        }\n    ],\n    'invoker_ghost_walk': [\n        {\n            label: 'Quas Level',\n            controlType: 'input'\n        },\n        {\n            attributeName: 'enemy_slow',\n            label: 'Total Damage',\n            controlType: 'text',\n            fn: function (v, a, parent, index, abilityModel, ability) {\n                if (v == 0) {\n                    return 0;\n                }\n                return abilityModel.getAbilityAttributeValue(ability.attributes, 'enemy_slow',v);\n            },\n            returnProperty: 'movementSpeedPctReduction'\n        },\n        {\n            label: 'Wex Level',\n            controlType: 'input',\n            display: 'ability'\n        },\n        {\n            attributeName: 'self_slow',\n            label: 'Total Damage',\n            controlType: 'text',\n            display: 'ability',\n            fn: function (v, a, parent, index, abilityModel, ability) {\n                if (v == 0) {\n                    return 0;\n                }\n                return abilityModel.getAbilityAttributeValue(ability.attributes, 'self_slow',v);\n            },\n            returnProperty: 'movementSpeedPct'\n        }\n    ],\n    'invoker_alacrity': [\n        {\n            label: 'Wex Level',\n            controlType: 'input'\n        },\n        {\n            attributeName: 'bonus_attack_speed',\n            label: 'Total Damage',\n            controlType: 'text',\n            fn: function (v, a, parent, index, abilityModel, ability) {\n                if (v == 0) {\n                    return 0;\n                }\n                return abilityModel.getAbilityAttributeValue(ability.attributes, 'bonus_attack_speed',v);\n            },\n            returnProperty: 'attackspeed'\n        },\n        {\n            label: 'Exort Level',\n            controlType: 'input',\n        },\n        {\n            attributeName: 'bonus_damage',\n            label: 'Total Damage',\n            controlType: 'text',\n            fn: function (v, a, parent, index, abilityModel, ability) {\n                if (v == 0) {\n                    return 0;\n                }\n                return abilityModel.getAbilityAttributeValue(ability.attributes, 'bonus_damage',v);\n            },\n            returnProperty: 'bonusDamage'\n        }\n    ],\n    'invoker_ice_wall': [\n        {\n            label: 'Quas Level',\n            controlType: 'input'\n        },\n        {\n            attributeName: 'slow',\n            label: 'Total Damage',\n            controlType: 'text',\n            fn: function (v, a, parent, index, abilityModel, ability) {\n                if (v == 0) {\n                    return 0;\n                }\n                return abilityModel.getAbilityAttributeValue(ability.attributes, 'slow',v);\n            },\n            returnProperty: 'movementSpeedPctReduction'\n        },\n        {\n            label: 'Exort Level',\n            controlType: 'input',\n            display: 'ability'\n        },\n        {\n            label: 'Duration',\n            controlType: 'input',\n            display: 'ability'\n        },\n        {\n            attributeName: 'damage_per_second',\n            label: 'DAMAGE:',\n            ignoreTooltip: true,\n            controlType: 'text',\n            display: 'ability',\n            controls: [1,2],\n            fn: function (v, a, parent, index, abilityModel, ability) {\n                if (v[0] == 0) {\n                    return 0;\n                }\n                return abilityModel.getAbilityAttributeValue(ability.attributes, 'damage_per_second',v[0])*v[1];\n            }\n        }\n    ],\n    'jakiro_dual_breath': [\n        {\n            label: 'Duration',\n            controlType: 'input'\n        },\n        {\n            label: 'DAMAGE:',\n            controlType: 'text',\n            fn: function (v, a, parent, index, abilityModel, ability) {\n                return abilityModel.getAbilityPropertyValue(ability, 'damage')*2 + \n                abilityModel.getAbilityAttributeValue(ability.attributes, 'burn_damage',ability.level())*v;\n            }\n        },\n        {\n            attributeName: 'slow_movement_speed_pct',\n            label: 'Total Damage',\n            controlType: 'text',\n            fn: function (v, a, parent, index, abilityModel, ability) {\n                return a;\n            },\n            returnProperty: 'movementSpeedPctReduction'\n        },\n        {\n            attributeName: 'slow_attack_speed_pct',\n            label: '%ATTACK SLOW:',\n            ignoreTooltip: true,\n            controlType: 'text',\n            fn: function (v, a, parent, index, abilityModel, ability) {\n                return a;\n            },\n            returnProperty: 'attackspeedreduction'\n        }\n    ],\n    'jakiro_liquid_fire': [\n        {\n            label: 'Duration',\n            controlType: 'input'\n        },\n        {\n            attributeName: 'damage',\n            label: 'Total Damage',\n            controlType: 'text',\n            fn: function (v, a, parent, index, abilityModel, ability) {\n                return v*a;\n            }\n        },\n        {\n            attributeName: 'slow_attack_speed_pct',\n            label: 'Total Damage',\n            controlType: 'text',\n            fn: function (v, a, parent, index, abilityModel, ability) {\n                return a;\n            },\n            returnProperty: 'attackspeedreduction'\n        }\n    ],\n    'jakiro_macropyre': [\n        {\n            label: 'Duration',\n            controlType: 'input'\n        },\n        {\n            attributeName: 'damage',\n            label: 'Total Damage',\n            controlType: 'text',\n            fn: function (v, a, parent, index, abilityModel, ability) {\n                return v*a;\n            }\n        }\n    ],\n    'juggernaut_blade_fury': [\n        {\n            label: 'Duration',\n            controlType: 'input'\n        },\n        {\n            label: 'DAMAGE:',\n            controlType: 'text',\n            fn: function (v, a, parent, index, abilityModel, ability) {\n                return abilityModel.getAbilityPropertyValue(ability, 'damage')*v;\n            }\n        }\n    ],\n    'juggernaut_healing_ward': [\n        {\n            label: 'Duration',\n            controlType: 'input'\n        },\n        {\n            label: 'Max Health',\n            controlType: 'input'\n        },\n        {\n            attributeName: 'healing_ward_heal_amount',\n            label: 'HEAL OVER TIME:',\n            ignoreTooltip: true,\n            controlType: 'text',\n            controls: [0,1],\n            fn: function (v, a, parent, index, abilityModel, ability) {\n                return v[0]*v[1]*a/100;\n            }\n        }\n    ],\n    'juggernaut_omni_slash': [\n        {\n            label: 'Jumps',\n            controlType: 'input'\n        },\n        {\n            label: 'MIN DAMAGE:',\n            ignoreTooltip: true,\n            controlType: 'text',\n            fn: function (v, a, parent, index, abilityModel, ability) {\n                return abilityModel.getAbilityAttributeValue(ability.attributes, 'omni_slash_damage',1)*v;\n            }\n        },\n        {\n            label: 'MAX DAMAGE:',\n            ignoreTooltip: true,\n            controlType: 'text',\n            fn: function (v, a, parent, index, abilityModel, ability) {\n                return abilityModel.getAbilityAttributeValue(ability.attributes, 'omni_slash_damage',2)*v;\n            }\n        }\n    ],\n    'keeper_of_the_light_illuminate': [\n        {\n            label: 'Duration',\n            controlType: 'input'\n        },\n        {\n            attributeName: 'damage_per_second',\n            label: 'DAMAGE:',\n            ignoreTooltip: true,\n            controlType: 'text',\n            fn: function (v, a, parent, index, abilityModel, ability) {\n                return v*a;\n            }\n        }\n    ],\n    'keeper_of_the_light_mana_leak': [\n        {\n            label: 'Distance Moved',\n            controlType: 'input'\n        },\n        {\n            label: 'Enemy Max Mana',\n            controlType: 'input'\n        },\n        {\n            attributeName: 'mana_leak_pct',\n            label: 'MANA LEAKED:',\n            ignoreTooltip: true,\n            controlType: 'text',\n            controls: [0,1],\n            fn: function (v, a, parent, index, abilityModel, ability) {\n                return v[0]/100*v[1]*a/100;\n            }\n        }\n    ],\n    'legion_commander_duel': [\n        {\n            label: 'Duel Wins',\n            controlType: 'input'\n        },\n        {\n            attributeName: 'reward_damage',\n            label: 'Total Damage:',\n            ignoreTooltip: true,\n            controlType: 'text',\n            fn: function (v, a, parent, index, abilityModel, ability) {\n                return v*a;\n            },\n            returnProperty: 'bonusDamage'\n        }\n    ],\n    'leshrac_pulse_nova': [\n        {\n            label: 'Duration',\n            controlType: 'input'\n        },\n        {\n            attributeName: 'damage',\n            label: 'Total Damage',\n            controlType: 'text',\n            fn: function (v, a, parent, index, abilityModel, ability) {\n                return v*a;\n            }\n        },\n        {\n            attributeName: 'mana_cost_per_second',\n            label: 'MANA COST:',\n            ignoreTooltip: true,\n            controlType: 'text',\n            fn: function (v, a, parent, index, abilityModel, ability) {\n                return v*a;\n            }\n        }\n    ],\n    'lich_chain_frost': [\n        {\n            label: 'Bounce Hits',\n            controlType: 'input'\n        },\n        {\n            attributeName: 'damage',\n            label: 'Total Damage',\n            controlType: 'text',\n            fn: function (v, a, parent, index, abilityModel, ability) {\n                return v*a;\n            }\n        },\n        {\n            attributeName: 'slow_movement_speed',\n            label: 'Enemy Movement Speed Slow',\n            controlType: 'text',\n            fn: function (v, a, parent, index, abilityModel, ability) {\n                return a;\n            },\n            returnProperty: 'movementSpeedPctReduction'\n        },\n        {\n            attributeName: 'slow_attack_speed',\n            label: 'Total Damage',\n            controlType: 'text',\n            fn: function (v, a, parent, index, abilityModel, ability) {\n                return a;\n            },\n            returnProperty: 'attackspeedreduction'\n        }\n    ],\n    'life_stealer_feast': [\n        {\n            label: 'Enemy Current HP',\n            controlType: 'input'\n        },\n        {\n            attributeName: 'hp_leech_percent',\n            label: 'Total Damage',\n            controlType: 'text',\n            fn: function (v, a, parent, index, abilityModel, ability) {\n                return v*a/100;\n            },\n            returnProperty: 'bonusDamage'\n        }\n    ],\n    'life_stealer_open_wounds': [\n        {\n            label: 'Duration',\n            controlType: 'input'\n        },\n        {\n            attributeName: 'heal_percent',\n            label: 'Total Damage',\n            controlType: 'text',\n            fn: function (v, a, parent, index, abilityModel, ability) {\n                return a;\n            },\n            returnProperty: 'lifesteal'\n        },\n        {\n            attributeName: 'slow_steps',\n            label: '%SLOW:',\n            ignoreTooltip: true,\n            controlType: 'text',\n            noLevel: true,\n            fn: function (v, a, parent, index, abilityModel, ability) {\n                return abilityModel.getAbilityAttributeValue(ability.attributes, 'slow_steps',v+1);\n            },\n            returnProperty: 'movementSpeedPctReduction'\n        }\n    ],\n    'lina_fiery_soul': [\n        {\n            label: 'Duration',\n            controlType: 'input'\n        },\n        {\n            attributeName: 'fiery_soul_move_speed_bonus',\n            label: 'Enemy Movement Speed Slow',\n            controlType: 'text',\n            fn: function (v, a, parent, index, abilityModel, ability) {\n                return v*a;\n            },\n            returnProperty: 'movementSpeedPct'\n        },\n        {\n            attributeName: 'fiery_soul_attack_speed_bonus',\n            label: 'Total Damage',\n            controlType: 'text',\n            fn: function (v, a, parent, index, abilityModel, ability) {\n                return v*a;\n            },\n            returnProperty: 'attackspeed'\n        }\n    ],\n    'lion_mana_drain': [\n        {\n            label: 'Duration',\n            controlType: 'input'\n        },\n        {\n            attributeName: 'mana_per_second',\n            label: 'MANA DRAINED:',\n            ignoreTooltip: true,\n            controlType: 'text',\n            fn: function (v, a, parent, index, abilityModel, ability) {\n                return v*a;\n            }\n        }\n    ],\n    'luna_moon_glaive': [\n        {\n            label: 'Damage',\n            controlType: 'input'\n        },\n        {\n            attributeName: 'damage_reduction_percent',\n            label: 'BOUNCE DAMAGE:',\n            ignoreTooltip: true,\n            controlType: 'text',\n            fn: function (v, a, parent, index, abilityModel, ability) {\n                var result = [];\n                for (var i = 1; i < 6; i++) {\n                    result.push((v*Math.pow(a/100,i)).toFixed(2))\n                }\n                return result.join('<br>');\n            }\n        }\n    ],\n    'luna_eclipse': [\n        {\n            label: 'Beam Count',\n            controlType: 'input'\n        },\n        {\n            attributeName: 'beams',\n            label: 'Total Damage',\n            controlType: 'text',\n            fn: function (v, a, parent, index, abilityModel, ability) {\n                var lucentBeamAbility = abilityModel.abilities().find(function(b) {\n                    return b.name == 'luna_lucent_beam';\n                });\n                if (lucentBeamAbility.level() == 0) return 0;\n                var damage = abilityModel.getAbilityPropertyValue(lucentBeamAbility, 'damage');\n                return v*damage;\n            }\n        }\n    ],\n    'medusa_mystic_snake': [\n        {\n            label: 'Jump Count',\n            controlType: 'input'\n        },\n        {\n            attributeName: 'snake_damage',\n            label: 'Damage Per Jump:',\n            ignoreTooltip: true,\n            controlType: 'method',\n            display: 'none',\n            fn: function (v, a, parent, index, abilityModel, ability) {\n                var snake_jumps = abilityModel.getAbilityAttributeValue(ability.attributes, 'snake_jumps',ability.level());\n                var snake_scale = abilityModel.getAbilityAttributeValue(ability.attributes, 'snake_scale',0);\n                var damage = [];\n                for (var i = 0; i < snake_jumps; i++) {\n                    damage.push(a + a * i * snake_scale/100);\n                }\n                return damage;\n            }\n        },\n        {\n            attributeName: 'snake_damage',\n            label: 'Damage Per Jump:',\n            ignoreTooltip: true,\n            controlType: 'text',\n            controls: [0,1],\n            fn: function (v, a, parent, index, abilityModel, ability) {\n                return v[1].join(' / ');\n            }\n        },\n        {\n            attributeName: 'snake_damage',\n            label: 'Total Damage:',\n            ignoreTooltip: true,\n            controlType: 'text',\n            controls: [0,1],\n            fn: function (v, a, parent, index, abilityModel, ability) {\n                return v[1].slice(0, v[0]).reduce(function (memo, o) { return memo + o }, 0);\n            }\n        },\n        {\n            attributeName: 'snake_damage',\n            label: 'Max Damage:',\n            ignoreTooltip: true,\n            controlType: 'text',\n            controls: [0,1],\n            fn: function (v, a, parent, index, abilityModel, ability) {\n                return v[1].reduce(function (memo, o) { return memo + o }, 0);\n            }\n        }\n    ],\n    'medusa_mana_shield': [\n        {\n            label: 'Damage',\n            controlType: 'input'\n        },\n        {\n            attributeName: 'damage_per_mana',\n            label: 'MANA USED:',\n            ignoreTooltip: true,\n            controlType: 'text',\n            fn: function (v, a, parent, index, abilityModel, ability) {\n                return (v/a).toFixed(2);\n            }\n        },\n        {\n            attributeName: 'absorption_tooltip',\n            label: '%DAMAGE REDUCTION:',\n            ignoreTooltip: true,\n            controlType: 'text',\n            fn: function (v, a, parent, index, abilityModel, ability) {\n                return -a;\n            },\n            returnProperty: 'damageReduction'\n        }\n    ],\n    'meepo_poof': [\n        {\n            label: 'Meepo Count',\n            controlType: 'input'\n        },\n        {\n            label: 'DAMAGE:',\n            controlType: 'text',\n            fn: function (v, a, parent, index, abilityModel, ability) {\n                return abilityModel.getAbilityPropertyValue(ability, 'damage')*v;\n            }\n        }\n    ],\n    'meepo_geostrike': [\n        {\n            label: 'Stacks',\n            controlType: 'input'\n        },\n        {\n            label: 'DAMAGE:',\n            ignoreTooltip: true,\n            controlType: 'text',\n            fn: function (v, a, parent, index, abilityModel, ability) {\n                return abilityModel.getAbilityPropertyValue(ability, 'damage')*v;\n            }\n        },\n        {\n            attributeName: 'slow',\n            label: '%SLOW:',\n            ignoreTooltip: true,\n            controlType: 'text',\n            noLevel: true,\n            fn: function (v, a, parent, index, abilityModel, ability) {\n                return abilityModel.getAbilityAttributeValue(ability.attributes, 'slow',ability.level())*v;\n            },\n            returnProperty: 'movementSpeedPctReduction'\n        }\n    ],\n    'mirana_arrow': [\n        {\n            label: 'Arrow Travel Distance',\n            controlType: 'input'\n        },\n        {\n            attributeName: 'arrow_max_stun',\n            label: 'STUN DURATION:',\n            ignoreTooltip: true,\n            controlType: 'text',\n            fn: function (v, a, parent, index, abilityModel, ability) {\n                var arrow_min_stun = abilityModel.getAbilityAttributeValue(ability.attributes, 'arrow_min_stun',0);\n                var arrow_max_stunrange = abilityModel.getAbilityAttributeValue(ability.attributes, 'arrow_max_stunrange',0);\n                var scale = Math.min(v, arrow_max_stunrange) / arrow_max_stunrange;\n                return Math.max(arrow_min_stun, Math.floor(a * scale / 0.1) * 0.1);\n            }\n        },\n        {\n            attributeName: 'arrow_bonus_damage',\n            label: 'TOTAL DAMAGE:',\n            ignoreTooltip: true,\n            controlType: 'text',\n            fn: function (v, a, parent, index, abilityModel, ability) {\n                var ability = ability;\n                var damage = ability.damage()[ability.level()-1];\n                var arrow_max_stunrange = abilityModel.getAbilityAttributeValue(ability.attributes, 'arrow_max_stunrange',0);\n                var scale = Math.min(v, arrow_max_stunrange) / arrow_max_stunrange;\n                var bonus_damage = Math.floor(a * scale / 2.8) * 2.8;\n                return damage + ' + ' + bonus_damage + ' = ' + (damage + bonus_damage);\n            }\n        }\n    ],\n    'morphling_morph_agi': [\n        {\n            label: 'Shifts',\n            controlType: 'input'\n        },\n        {\n            attributeName: 'points_per_tick',\n            label: 'AGI SHIFT GAIN:',\n            ignoreTooltip: true,\n            controlType: 'text',\n            fn: function (v, a, parent, index, abilityModel, ability) {\n                return v*a;\n            },\n            returnProperty: 'bonusAgility'\n        },\n        {\n            attributeName: 'points_per_tick',\n            label: 'STR SHIFT LOSS:',\n            ignoreTooltip: true,\n            controlType: 'text',\n            fn: function (v, a, parent, index, abilityModel, ability) {\n                return -v*a;\n            },\n            returnProperty: 'bonusStrength'\n        },\n        {\n            attributeName: 'bonus_attributes',\n            label: 'SHIFT TIME:',\n            controlType: 'text',\n            fn: function (v, a, parent, index, abilityModel, ability) {\n                return a;\n            },\n            returnProperty: 'bonusAgility2'\n        },\n        {\n            attributeName: 'morph_cooldown',\n            label: 'SHIFT TIME:',\n            ignoreTooltip: true,\n            controlType: 'text',\n            fn: function (v, a, parent, index, abilityModel, ability) {\n                return v*a;\n            }\n        },\n        {\n            attributeName: 'mana_cost',\n            label: 'SHIFT MANA COST:',\n            ignoreTooltip: true,\n            controlType: 'text',\n            fn: function (v, a, parent, index, abilityModel, ability) {\n                return v*a*abilityModel.getAbilityAttributeValue(ability.attributes, 'morph_cooldown',ability.level());\n            }\n        }\n    ],\n    'morphling_morph_str': [\n        {\n            label: 'Shifts',\n            controlType: 'input'\n        },\n        {\n            attributeName: 'points_per_tick',\n            label: 'STR SHIFT GAIN:',\n            ignoreTooltip: true,\n            controlType: 'text',\n            fn: function (v, a, parent, index, abilityModel, ability) {\n                return v*a;\n            },\n            returnProperty: 'bonusStrength'\n        },\n        {\n            attributeName: 'points_per_tick',\n            label: 'AGI SHIFT LOSS:',\n            ignoreTooltip: true,\n            controlType: 'text',\n            fn: function (v, a, parent, index, abilityModel, ability) {\n                return -v*a;\n            },\n            returnProperty: 'bonusAgility'\n        },\n        {\n            attributeName: 'bonus_attributes',\n            label: 'SHIFT TIME:',\n            controlType: 'text',\n            fn: function (v, a, parent, index, abilityModel, ability) {\n                return a;\n            },\n            returnProperty: 'bonusStrength2'\n        },\n        {\n            attributeName: 'morph_cooldown',\n            label: 'SHIFT TIME:',\n            ignoreTooltip: true,\n            controlType: 'text',\n            fn: function (v, a, parent, index, abilityModel, ability) {\n                return v*a;\n            }\n        },\n        {\n            attributeName: 'mana_cost',\n            label: 'SHIFT MANA COST:',\n            ignoreTooltip: true,\n            controlType: 'text',\n            fn: function (v, a, parent, index, abilityModel, ability) {\n                return v*a*abilityModel.getAbilityAttributeValue(ability.attributes, 'morph_cooldown',ability.level());\n            }\n        }\n    ],\n    'furion_wrath_of_nature': [\n        {\n            label: 'Duration',\n            controlType: 'input'\n        },\n        {\n            attributeName: 'damage',\n            label: 'Total Damage',\n            controlType: 'text',\n            fn: function (v, a, parent, index, abilityModel, ability) {\n                return v*a;\n            }\n        }\n    ],\n    'necrolyte_heartstopper_aura': [\n        {\n            label: 'Duration',\n            controlType: 'input'\n        },\n        {\n            label: 'Enemy Max Health',\n            controlType: 'input'\n        },\n        {\n            attributeName: 'aura_damage',\n            label: 'HEALTH LOST:',\n            ignoreTooltip: true,\n            controlType: 'text',\n            controls: [0,1],\n            fn: function (v, a, parent, index, abilityModel, ability) {\n                return v[0]*v[1]*a/100;\n            }\n        }\n    ],\n    'necrolyte_sadist': [\n        {\n            label: 'Unit Kills',\n            controlType: 'input'\n        },\n        {\n            label: 'Hero Kills',\n            controlType: 'input'\n        },\n        {\n            attributeName: 'health_regen',\n            label: 'Total Damage',\n            controlType: 'text',\n            controls: [0,1],\n            fn: function (v, a, parent, index, abilityModel, ability) {\n                var hero_multiplier = abilityModel.getAbilityAttributeValue(ability.attributes, 'hero_multiplier',0)\n                return (v[0]+v[1]*hero_multiplier)*a;\n            },\n            returnProperty: 'healthregen'\n        },\n        {\n            attributeName: 'mana_regen',\n            label: 'Total Damage',\n            controlType: 'text',\n            controls: [0,1],\n            fn: function (v, a, parent, index, abilityModel, ability) {\n                var hero_multiplier = abilityModel.getAbilityAttributeValue(ability.attributes, 'hero_multiplier',0)\n                return (v[0]+v[1]*hero_multiplier)*a;\n            },\n            returnProperty: 'manaregen'\n        }\n    ],\n    'night_stalker_crippling_fear': [\n        {\n            label: 'Is Night',\n            controlType: 'checkbox'\n        },\n        {\n            attributeName: 'miss_rate_night',\n            label: '%CHANCE TO MISS:',\n            ignoreTooltip: true,\n            controlType: 'text',\n            fn: function (v, a, parent, index, abilityModel, ability) {\n                if (v) {\n                    return abilityModel.getAbilityAttributeValue(ability.attributes, 'miss_rate_night',ability.level());\n                }\n                else {\n                    return abilityModel.getAbilityAttributeValue(ability.attributes, 'miss_rate_day',ability.level());\n                }\n            },\n            returnProperty: 'missChance'\n        }\n    ],    \n    'night_stalker_hunter_in_the_night': [\n        {\n            label: 'Is Night',\n            controlType: 'checkbox'\n        },\n        {\n            attributeName: 'bonus_attack_speed_night',\n            label: 'Total Damage',\n            controlType: 'text',\n            fn: function (v, a, parent, index, abilityModel, ability) {\n                if (v) {\n                    return a;\n                }\n                else {\n                    return 0;\n                }\n            },\n            returnProperty: 'attackspeed'\n        },\n        {\n            attributeName: 'bonus_movement_speed_pct_night',\n            label: 'Total Damage',\n            controlType: 'text',\n            fn: function (v, a, parent, index, abilityModel, ability) {\n                if (v) {\n                    return a;\n                }\n                else {\n                    return 0;\n                }\n            },\n            returnProperty: 'movementSpeedPct'\n        }\n    ],    \n    'obsidian_destroyer_arcane_orb': [\n        {\n            label: 'Current Mana',\n            controlType: 'input'\n        },\n        {\n            attributeName: 'mana_pool_damage_pct',\n            label: 'Total Damage',\n            controlType: 'text',\n            fn: function (v, a, parent, index, abilityModel, ability) {\n                return v*a/100;\n            },\n            returnProperty: 'bonusDamageOrb'\n        }\n    ],\n    'ogre_magi_ignite': [\n        {\n            label: 'Duration',\n            controlType: 'input'\n        },\n        {\n            attributeName: 'burn_damage',\n            label: 'Total Damage',\n            controlType: 'text',\n            fn: function (v, a, parent, index, abilityModel, ability) {\n                return v*a;\n            }\n        },\n        {\n            attributeName: 'slow_movement_speed_pct',\n            label: 'Total Damage',\n            controlType: 'text',\n            fn: function (v, a, parent, index, abilityModel, ability) {\n                return a;\n            },\n            returnProperty: 'movementSpeedPctReduction'\n        }\n    ],\n    'pudge_rot': [\n        {\n            label: 'Duration',\n            controlType: 'input'\n        },\n        {\n            label: 'DAMAGE:',\n            controlType: 'text',\n            fn: function (v, a, parent, index, abilityModel, ability) {\n                return abilityModel.getAbilityPropertyValue(ability, 'damage')*v;\n            }\n        },\n        {\n            attributeName: 'rot_slow',\n            label: 'Total Damage',\n            controlType: 'text',\n            fn: function (v, a, parent, index, abilityModel, ability) {\n                return a;\n            },\n            returnProperty: 'movementSpeedPctReduction'\n        }\n    ],\n    'pudge_flesh_heap': [\n        {\n            label: 'Stacks',\n            controlType: 'input'\n        },\n        {\n            attributeName: 'flesh_heap_strength_buff_amount',\n            label: 'Total Damage',\n            controlType: 'text',\n            fn: function (v, a, parent, index, abilityModel, ability) {\n                return v*a;\n            },\n            returnProperty: 'bonusStrength'\n        },\n        {\n            attributeName: 'flesh_heap_magic_resist',\n            label: 'Total Damage',\n            controlType: 'text',\n            fn: function (v, a, parent, index, abilityModel, ability) {\n                return a;\n            },\n            returnProperty: 'magicResist'\n        }\n    ],\n    'pudge_dismember': [\n        {\n            label: 'Duration',\n            controlType: 'input'\n        },\n        {\n            attributeName: 'dismember_damage',\n            label: 'Total Damage',\n            controlType: 'text',\n            fn: function (v, a, parent, index, abilityModel, ability) {\n                return v*a;\n            }\n        }\n    ],\n    'pugna_nether_ward': [\n        {\n            label: 'Enemy Mana Spent',\n            controlType: 'input'\n        },\n        {\n            attributeName: 'mana_multiplier',\n            label: 'DAMAGE:',\n            ignoreTooltip: true,\n            controlType: 'text',\n            fn: function (v, a, parent, index, abilityModel, ability) {\n                return v*a;\n            }\n        },\n        {\n            attributeName: 'mana_regen',\n            label: 'Total Damage',\n            controlType: 'text',\n            fn: function (v, a, parent, index, abilityModel, ability) {\n                return a;\n            },\n            returnProperty: 'manaregenreduction'\n        }\n    ],\n    'pugna_life_drain': [\n        {\n            label: 'Duration',\n            controlType: 'input'\n        },\n        {\n            attributeName: 'health_drain',\n            label: 'HEALTH DRAINED:',\n            ignoreTooltip: true,\n            controlType: 'text',\n            fn: function (v, a, parent, index, abilityModel, ability) {\n                return v*a;\n            }\n        }\n    ],\n    'queenofpain_shadow_strike': [\n        {\n            label: 'Duration',\n            controlType: 'input'\n        },\n        {\n            attributeName: 'movement_slow',\n            label: 'Total Damage',\n            controlType: 'text',\n            fn: function (v, a, parent, index, abilityModel, ability) {\n                return a;\n            },\n            returnProperty: 'movementSpeedPctReduction'\n        },\n        {\n            attributeName: 'strike_damage',\n            label: 'Total Damage:',\n            ignoreTooltip: true,\n            controlType: 'text',\n            fn: function (v, a, parent, index, abilityModel, ability) {\n                var duration_damage = abilityModel.getAbilityAttributeValue(ability.attributes, 'duration_damage',ability.level());\n                var ticks = Math.floor(v/3);\n                return a + duration_damage * ticks;\n            }\n        }\n    ],\n    'razor_plasma_field': [\n        {\n            label: 'Distance',\n            controlType: 'input'\n        },\n        {\n            attributeName: 'radius',\n            label: 'MIN DISTANCE:',\n            ignoreTooltip: true,\n            controlType: 'text',\n            fn: function (v, a, parent, index, abilityModel, ability) {\n                return 200;\n            }\n        },\n        {\n            attributeName: 'radius',\n            label: 'MAX DISTANCE:',\n            ignoreTooltip: true,\n            controlType: 'text',\n            fn: function (v, a, parent, index, abilityModel, ability) {\n                return 200 + a;\n            }\n        },\n        {\n            attributeName: 'radius',\n            label: 'Instance Damage',\n            ignoreTooltip: true,\n            controlType: 'text',\n            fn: function (v, a, parent, index, abilityModel, ability) {\n                var max_radius = a + 200;\n                var scale = (Math.min(Math.max(v, 200), max_radius) - 200) / (max_radius - 200);\n                var damage_min = abilityModel.getAbilityAttributeValue(ability.attributes, 'damage_min',ability.level());\n                var damage_max = abilityModel.getAbilityAttributeValue(ability.attributes, 'damage_max',ability.level());\n                return damage_min + (damage_max - damage_min) * scale;\n            }\n        }\n    ],\n    'razor_static_link': [\n        {\n            label: 'Duration',\n            controlType: 'input'\n        },\n        {\n            attributeName: 'drain_length',\n            label: 'Damage Drained:',\n            ignoreTooltip: true,\n            controlType: 'text',\n            fn: function (v, a, parent, index, abilityModel, ability) {\n                var tick_duration = Math.floor(v * 4) + 1;\n                var ticks = Math.min(a * 4 + 1, tick_duration);\n                var drain_rate = abilityModel.getAbilityAttributeValue(ability.attributes, 'drain_rate',ability.level());\n                return ticks * drain_rate/4;\n            },\n            returnProperty: 'bonusDamage'\n        },\n        {\n            attributeName: 'drain_length',\n            label: 'Enemy Damage Lost:',\n            ignoreTooltip: true,\n            controlType: 'text',\n            display: 'hidden',\n            fn: function (v, a, parent, index, abilityModel, ability) {\n                var tick_duration = Math.floor(v * 4) + 1;\n                var ticks = Math.min(a * 4 + 1, tick_duration);\n                var drain_rate = abilityModel.getAbilityAttributeValue(ability.attributes, 'drain_rate',ability.level());\n                return ticks * drain_rate/4;\n            },\n            returnProperty: 'bonusDamageReduction'\n        }\n    ],\n    'razor_eye_of_the_storm': [\n        {\n            label: 'Duration',\n            controlType: 'input'\n        },\n        {\n            attributeName: 'damage',\n            label: 'Total Damage',\n            controlType: 'text',\n            fn: function (v, a, parent, index, abilityModel, ability) {\n                return v*a;\n            }\n        }\n    ],\n    'rubick_fade_bolt': [\n        {\n            label: 'Jumps',\n            controlType: 'input'\n        },\n        {\n            attributeName: 'damage',\n            label: 'Total Damage',\n            controlType: 'text',\n            fn: function (v, a, parent, index, abilityModel, ability) {\n                return a * (1 - v*abilityModel.getAbilityAttributeValue(ability.attributes, 'jump_damage_reduction_pct',ability.level())/100);\n            }\n        },\n        {\n            attributeName: 'hero_attack_damage_reduction',\n            label: 'Total Damage',\n            controlType: 'text',\n            fn: function (v, a, parent, index, abilityModel, ability) {\n                return a;\n            },\n            returnProperty: 'bonusDamageReduction'\n        }\n    ],\n    'sandking_sand_storm': [\n        {\n            label: 'Duration',\n            controlType: 'input'\n        },\n        {\n            label: 'DAMAGE:',\n            controlType: 'text',\n            fn: function (v, a, parent, index, abilityModel, ability) {\n                return abilityModel.getAbilityPropertyValue(ability, 'damage')*v;\n            }\n        }\n    ],\n    'sandking_epicenter': [\n        {\n            label: 'Pulses',\n            controlType: 'input'\n        },\n        {\n            attributeName: 'epicenter_damage',\n            label: 'DAMAGE:',\n            ignoreTooltip: true,\n            controlType: 'text',\n            fn: function (v, a, parent, index, abilityModel, ability) {\n                return v*a;\n            }\n        },\n        {\n            attributeName: 'epicenter_slow',\n            label: 'Total Damage',\n            controlType: 'text',\n            fn: function (v, a, parent, index, abilityModel, ability) {\n                return a;\n            },\n            returnProperty: 'movementSpeedPctReduction'\n        },\n        {\n            attributeName: 'epicenter_slow_as',\n            label: '%ATTACK SLOW:',\n            ignoreTooltip: true,\n            controlType: 'text',\n            fn: function (v, a, parent, index, abilityModel, ability) {\n                return a;\n            },\n            returnProperty: 'attackspeedreduction'\n        }\n    ],\n    'shadow_demon_shadow_poison': [\n        {\n            label: 'Duration',\n            controlType: 'input'\n        },\n        {\n            attributeName: 'stack_damage',\n            label: 'Total Damage',\n            controlType: 'text',\n            fn: function (v, a, parent, index, abilityModel, ability) {\n                var stackmult = [1,2,4,8];\n                if (v > 4) {\n                    return a * stackmult[3] + 50 * (v - 4);\n                }\n                else if (v <= 0) {\n                    return 0\n                }\n                else {\n                    return a * stackmult[v-1]\n                }\n            }\n        }\n    ],\n    'nevermore_necromastery': [\n        {\n            label: 'Souls',\n            controlType: 'input'\n        },\n        {\n            attributeName: 'necromastery_damage_per_soul',\n            label: 'DAMAGE:',\n            ignoreTooltip: true,\n            controlType: 'text',\n            fn: function (v, a, parent, index, abilityModel, ability) {\n                return v*a;\n            },\n            returnProperty: 'bonusDamage'\n        }\n    ],\n    'nevermore_requiem': [\n        {\n            label: 'Line Hit Count',\n            controlType: 'input'\n        },\n        {\n            attributeName: 'requiem_reduction_damage',\n            label: 'Damage:',\n            ignoreTooltip: true,\n            controlType: 'text',\n            fn: function (v, a, parent, index, abilityModel, ability) {\n                return abilityModel.getAbilityPropertyValue(ability, 'damage')*v;\n            }\n        },\n        {\n            label: 'Return Line Hit Count (Scepter)',\n            controlType: 'input'\n        },\n        {\n            attributeName: 'requiem_damage_pct_scepter',\n            label: 'Damage/Heal:',\n            ignoreTooltip: true,\n            controlType: 'text',\n            fn: function (v, a, parent, index, abilityModel, ability) {\n                return abilityModel.getAbilityPropertyValue(ability, 'damage')*v*a/100;\n            }\n        },\n        {\n            attributeName: 'requiem_damage_pct_scepter',\n            label: 'Total Damage:',\n            ignoreTooltip: true,\n            controlType: 'text',\n            controls: [0,1],\n            fn: function (v, a, parent, index, abilityModel, ability) {\n                var damage = abilityModel.getAbilityPropertyValue(ability, 'damage');\n                return damage*v[0] + damage*v[1]*a/100;\n            }\n        },\n        {\n            attributeName: 'requiem_reduction_damage',\n            label: '%DAMAGE REDUCTION:',\n            ignoreTooltip: true,\n            controlType: 'text',\n            fn: function (v, a, parent, index, abilityModel, ability) {\n                return a;\n            },\n            returnProperty: 'baseDamageReductionPct'\n        },\n        {\n            attributeName: 'requiem_reduction_ms',\n            label: '%DAMAGE REDUCTION:',\n            controlType: 'text',\n            fn: function (v, a, parent, index, abilityModel, ability) {\n                return a;\n            },\n            returnProperty: 'movementSpeedPctReduction'\n        }\n    ],\n    'shadow_shaman_shackles': [\n        {\n            label: 'Duration',\n            controlType: 'input'\n        },\n        {\n            label: 'DAMAGE:',\n            controlType: 'text',\n            fn: function (v, a, parent, index, abilityModel, ability) {\n                return abilityModel.getAbilityPropertyValue(ability, 'damage')*v;\n            }\n        }\n    ],\n    'silencer_curse_of_the_silent': [\n        {\n            label: 'Duration',\n            controlType: 'input'\n        },\n        {\n            attributeName: 'damage',\n            label: 'Total Damage',\n            controlType: 'text',\n            fn: function (v, a, parent, index, abilityModel, ability) {\n                return Math.floor(v)*a;\n            }\n        },\n        {\n            attributeName: 'movespeed',\n            label: 'Total Damage',\n            controlType: 'text',\n            fn: function (v, a, parent, index, abilityModel, ability) {\n                return a;\n            },\n            returnProperty: 'movementSpeedPctReduction'\n        }\n    ],\n/*        'silencer_glaives_of_wisdom': [\n        {\n            label: 'Duration',\n            controlType: 'input'\n        },\n        {\n            attributeName: 'damage',\n            label: 'Total Damage',\n            controlType: 'text',\n            fn: function (v, a, parent, index, abilityModel, ability) {\n                return v*a;\n            }\n        }\n    ],*/\n    'skywrath_mage_mystic_flare': [\n        {\n            label: 'Duration',\n            controlType: 'input'\n        },\n        {\n            attributeName: 'damage',\n            label: 'Total Damage',\n            controlType: 'text',\n            fn: function (v, a, parent, index, abilityModel, ability) {\n                return v*a;\n            }\n        }\n    ],\n    'slark_essence_shift': [\n        {\n            label: 'Attacks',\n            controlType: 'input'\n        },\n        {\n            attributeName: 'agi_gain',\n            label: 'Total Damage',\n            controlType: 'text',\n            display: 'ability',\n            fn: function (v, a, parent, index, abilityModel, ability) {\n                return v*a;\n            },\n            returnProperty: 'bonusAgility'\n        },\n        {\n            attributeName: 'stat_loss',\n            label: 'Total Damage',\n            controlType: 'text',\n            fn: function (v, a, parent, index, abilityModel, ability) {\n                return -v*a;\n            },\n            returnProperty: 'bonusAllStatsReduction'\n        }\n    ],\n    'slark_shadow_dance': [\n        {\n            label: 'Duration',\n            controlType: 'input'\n        },\n        {\n            attributeName: 'bonus_regen_pct',\n            label: 'TOTAL HEALTH REGENERATED:',\n            ignoreTooltip: true,\n            controlType: 'text',\n            fn: function (v, a, parent, index, abilityModel, ability) {\n                return v*parent.health()*a/100;\n            }\n        },\n        {\n            attributeName: 'bonus_regen_pct',\n            label: 'HEALTH GAINED PER SECOND:',\n            ignoreTooltip: true,\n            controlType: 'text',\n            fn: function (v, a, parent, index, abilityModel, ability) {\n                return parent.health()*a/100;\n            },\n            returnProperty: 'healthregen'\n        },\n        {\n            attributeName: 'bonus_movement_speed',\n            label: '%MOVE SPEED:',\n            ignoreTooltip: true,\n            controlType: 'text',\n            fn: function (v, a, parent, index, abilityModel, ability) {\n                return a;\n            },\n            returnProperty: 'movementSpeedPct'\n        }\n    ],\n    'sniper_shrapnel': [\n        {\n            label: 'Duration',\n            controlType: 'input'\n        },\n        {\n            label: 'DAMAGE:',\n            ignoreTooltip: true,\n            controlType: 'text',\n            fn: function (v, a, parent, index, abilityModel, ability) {\n                return abilityModel.getAbilityPropertyValue(ability, 'damage')*v;\n            }\n        },\n        {\n            attributeName: 'building_damage',\n            label: 'BUILDING DAMAGE:',\n            ignoreTooltip: true,\n            controlType: 'text',\n            fn: function (v, a, parent, index, abilityModel, ability) {\n                return v*a;\n            }\n        },\n        {\n            attributeName: 'slow_movement_speed',\n            label: 'Enemy Movement Speed Slow',\n            controlType: 'text',\n            fn: function (v, a, parent, index, abilityModel, ability) {\n                return a;\n            },\n            returnProperty: 'movementSpeedPctReduction'\n        }\n    ],\n    'spectre_desolate': [\n        {\n            label: 'Enemy Alone',\n            controlType: 'checkbox'\n        },\n        {\n            attributeName: 'bonus_damage',\n            label: 'Total Damage',\n            controlType: 'text',\n            fn: function (v, a, parent, index, abilityModel, ability) {\n                if (v) {\n                    return a;\n                }\n                else {\n                    return 0;\n                }\n            },\n            returnProperty: 'bonusDamage'\n        }\n    ],\n    'spectre_dispersion': [\n        {\n            label: 'Damage Taken',\n            controlType: 'input'\n        },\n        {\n            attributeName: 'damage_reflection_pct',\n            label: 'DAMAGE REFLECTED:',\n            controlType: 'text',\n            fn: function (v, a, parent, index, abilityModel, ability) {\n                return -a;\n            },\n            returnProperty: 'damageReduction'\n        },\n        {\n            attributeName: 'damage_reflection_pct',\n            label: 'DAMAGE REFLECTED:',\n            ignoreTooltip: true,\n            controlType: 'text',\n            fn: function (v, a, parent, index, abilityModel, ability) {\n                return v*a/100;\n            }\n        }\n    ],\n    'storm_spirit_ball_lightning': [\n        {\n            label: 'MAX MANA',\n            controlType: 'input'\n        },\n        {\n            label: 'Distance',\n            controlType: 'input'\n        },\n        {\n            attributeName: 'ball_lightning_initial_mana_base',\n            label: 'Total Damage:',\n            ignoreTooltip: true,\n            controlType: 'text',\n            controls: [0, 1],\n            fn: function (v, a, parent, index, abilityModel, ability) {\n                return abilityModel.getAbilityPropertyValue(ability, 'damage')/100*v[1];\n            }\n        },\n        {\n            attributeName: 'ball_lightning_initial_mana_base',\n            label: 'FLAT MANA COST:',\n            ignoreTooltip: true,\n            controlType: 'method',\n            controls: [0, 1],\n            fn: function (v, a, parent, index, abilityModel, ability) {\n                var distance_intervals = Math.floor(v[1]/100);\n                var travel_cost_base = abilityModel.getAbilityAttributeValue(ability.attributes, 'ball_lightning_travel_cost_base',0);\n                return a + distance_intervals * travel_cost_base;\n            }\n        },\n        {\n            attributeName: 'ball_lightning_initial_mana_percentage',\n            label: '%MAX MANA COST:',\n            ignoreTooltip: true,\n            controlType: 'method',\n            controls: [0, 1],\n            fn: function (v, a, parent, index, abilityModel, ability) {\n                var distance_intervals = Math.floor(v[1]/100);\n                var travel_cost_percent = abilityModel.getAbilityAttributeValue(ability.attributes, 'ball_lightning_travel_cost_percent',0);\n                return a + distance_intervals * travel_cost_percent;\n            }\n        },\n        {\n            attributeName: 'ball_lightning_initial_mana_base',\n            label: 'TOTAL MANA COST:',\n            ignoreTooltip: true,\n            controlType: 'text',\n            controls: [0, 1, 2, 3],\n            fn: function (v, a, parent, index, abilityModel, ability) {\n                return v[2] + ' + ' + (v[3]/100 * v[0]) + ' (' + v[3] + '% of max) = ' + (v[2] + v[3]/100 * v[0]);\n            }\n        }\n    ],\n    'templar_assassin_psionic_trap': [\n        {\n            label: 'Charge Time',\n            controlType: 'input'\n        },\n        {\n            attributeName: 'movement_speed_min_tooltip',\n            label: '%MOVE SLOW:',\n            ignoreTooltip: true,\n            controlType: 'text',\n            fn: function (v, a, parent, index, abilityModel, ability) {\n                var max_slow = abilityModel.getAbilityAttributeValue(ability.attributes, 'movement_speed_max_tooltip',0);\n                var slow_per_tick = (max_slow - a)/40;\n                return -(a + slow_per_tick * Math.min(Math.max(0, v), 4) * 10);\n            },\n            returnProperty: 'movementSpeedPctReduction'\n        }\n    ],\n    'shredder_reactive_armor': [\n        {\n            label: 'Stacks',\n            controlType: 'input'\n        },\n        {\n            attributeName: 'bonus_armor',\n            label: 'Total Armor Bonus',\n            controlType: 'text',\n            fn: function (v, a, parent, index, abilityModel, ability) {\n                return v*a;\n            },\n            returnProperty: 'armor'\n        },\n        {\n            attributeName: 'bonus_hp_regen',\n            label: 'Total HP Regen Bonus',\n            controlType: 'text',\n            fn: function (v, a, parent, index, abilityModel, ability) {\n                return v*a;\n            },\n            returnProperty: 'healthregen'\n        }\n    ],\n    'shredder_chakram': [\n        {\n            label: 'Duration',\n            controlType: 'input'\n        },\n        {\n            attributeName: 'damage_per_second',\n            label: 'DAMAGE:',\n            ignoreTooltip: true,\n            controlType: 'text',\n            fn: function (v, a, parent, index, abilityModel, ability) {\n                var interval = abilityModel.getAbilityAttributeValue(ability.attributes, 'damage_interval',0);\n                var ticks = Math.floor(v / interval);\n                return a*interval*ticks;\n            }\n        },\n        {\n            attributeName: 'mana_per_second',\n            label: 'MANA COST:',\n            ignoreTooltip: true,\n            controlType: 'text',\n            fn: function (v, a, parent, index, abilityModel, ability) {\n                var interval = abilityModel.getAbilityAttributeValue(ability.attributes, 'damage_interval',0);\n                var ticks = Math.floor(v / interval);\n                return a*interval*ticks;\n            }\n        },\n        {\n            label: 'ENEMY %HP',\n            controlType: 'input'\n        },\n        {\n            attributeName: 'slow',\n            label: 'MANA COST:',\n            controlType: 'text',\n            fn: function (v, a, parent, index, abilityModel, ability) {\n                var ticks = 20 - Math.floor(Math.min(Math.max(v-1, 0), 99) / 5);\n                return -a*ticks;\n            },\n            returnProperty: 'movementSpeedPctReduction'\n        }\n    ],\n    'spirit_breaker_greater_bash': [\n        {\n            label: 'Bash Proc',\n            controlType: 'checkbox'\n        },\n        {\n            attributeName: 'damage',\n            label: '%MOVESPEED AS DAMAGE',\n            controlType: 'text',\n            fn: function (v, a, parent, index, abilityModel, ability) {\n                if (v) {\n                    return a;\n                }\n                else {\n                    return 0;\n                }\n            },\n            returnProperty: 'bashBonusDamage'\n        },\n        {\n            attributeName: 'bonus_movespeed_pct',\n            label: 'Total Damage',\n            controlType: 'text',\n            fn: function (v, a, parent, index, abilityModel, ability) {\n                if (v) {\n                    return a;\n                }\n                else {\n                    return 0;\n                }\n            },\n            returnProperty: 'movementSpeedPct'\n        },\n        {\n            attributeName: 'chance_pct',\n            label: 'Total Damage',\n            controlType: 'text',\n            fn: function (v, a, parent, index, abilityModel, ability) {\n                return a\n            },\n            returnProperty: 'bash'\n        }\n    ],\n    'techies_land_mines': [\n        {\n            label: 'Number of Mines',\n            controlType: 'input'\n        },\n        {\n            attributeName: 'damage',\n            label: 'Total Damage',\n            controlType: 'text',\n            fn: function (v, a, parent, index, abilityModel, ability) {\n                return v*a;\n            }\n        },\n        {\n            attributeName: 'damage',\n            label: 'AFTER REDUCTIONS:',\n            ignoreTooltip: true,\n            controlType: 'text',\n            fn: function (v, a, parent, index, abilityModel, ability) {\n                var phys_reduction = parent.enemy().totalArmorPhysicalReduction(),\n                    magic_reduction = parent.enemy().totalMagicResistance();\n                return (v * a * (1 - phys_reduction / 100) * (1 - magic_reduction / 100)).toFixed(2);\n            }\n        }\n    ],\n    'techies_suicide': [\n        {\n            attributeName: 'damage',\n            label: 'FULL DAMAGE AFTER REDUCTIONS:',\n            ignoreTooltip: true,\n            controlType: 'text',\n            fn: function (v, a, parent, index, abilityModel, ability) {\n                var phys_reduction = parent.enemy().totalArmorPhysicalReduction(),\n                    magic_reduction = parent.enemy().totalMagicResistance();\n                return (a * (1 - phys_reduction / 100) * (1 - magic_reduction / 100)).toFixed(2);\n            }\n        },\n        {\n            attributeName: 'partial_damage',\n            label: 'PARTIAL DAMAGE AFTER REDUCTIONS:',\n            ignoreTooltip: true,\n            controlType: 'text',\n            fn: function (v, a, parent, index, abilityModel, ability) {\n                var phys_reduction = parent.enemy().totalArmorPhysicalReduction(),\n                    magic_reduction = parent.enemy().totalMagicResistance();\n                return (a * (1 - phys_reduction / 100) * (1 - magic_reduction / 100)).toFixed(2);\n            }\n        },\n        {\n            attributeName: 'damage',\n            label: 'RESPAWN TIME:',\n            ignoreTooltip: true,\n            controlType: 'text',\n            fn: function (v, a, parent, index, abilityModel, ability) {\n                return (parent.respawnTime() / 2).toFixed(0) + ' seconds';\n            }\n        }\n    ],\n    'techies_remote_mines': [\n        {\n            label: 'Number of Mines',\n            controlType: 'input'\n        },\n        {\n            attributeName: 'damage',\n            label: 'Total Damage',\n            controlType: 'text',\n            fn: function (v, a, parent, index, abilityModel, ability) {\n                return v*a;\n            }\n        },\n        {\n            attributeName: 'damage',\n            label: 'AFTER REDUCTIONS:',\n            ignoreTooltip: true,\n            controlType: 'text',\n            fn: function (v, a, parent, index, abilityModel, ability) {\n                var magic_reduction = parent.enemy().totalMagicResistance();\n                return (v * a * (1 - magic_reduction / 100)).toFixed(2);\n            }\n        }\n    ],\n    'tinker_march_of_the_machines': [\n        {\n            label: 'Robot Explosions',\n            controlType: 'input'\n        },\n        {\n            attributeName: 'machines_per_sec',\n            label: 'TOTAL DAMAGE:',\n            ignoreTooltip: true,\n            controlType: 'text',\n            fn: function (v, a, parent, index, abilityModel, ability) {\n                return abilityModel.getAbilityPropertyValue(ability, 'damage')*v;\n            }\n        }\n    ],\n    'treant_leech_seed': [\n        {\n            label: 'Pulses',\n            controlType: 'input'\n        },\n        {\n            attributeName: 'leech_damage',\n            label: 'DAMAGE/HEAL:',\n            ignoreTooltip: true,\n            controlType: 'text',\n            fn: function (v, a, parent, index, abilityModel, ability) {\n                return v*a;\n            }\n        },\n        {\n            attributeName: 'movement_slow',\n            label: 'Total Damage',\n            controlType: 'text',\n            fn: function (v, a, parent, index, abilityModel, ability) {\n                return a;\n            },\n            returnProperty: 'movementSpeedPctReduction'\n        }\n    ],\n    'troll_warlord_fervor': [\n        {\n            label: 'Stacks',\n            controlType: 'input'\n        },\n        {\n            attributeName: 'attack_speed',\n            label: 'ATTACK SPEED:',\n            ignoreTooltip: true,\n            controlType: 'text',\n            fn: function (v, a, parent, index, abilityModel, ability) {\n                return v*a;\n            },\n            returnProperty: 'attackspeed'\n        }\n    ],\n    'undying_decay': [\n        {\n            label: 'Stacks',\n            controlType: 'input'\n        },\n        {\n            attributeName: 'str_steal',\n            label: 'STRENGTH STOLEN:',\n            ignoreTooltip: true,\n            controlType: 'text',\n            fn: function (v, a, parent, index, abilityModel, ability) {\n                if (parent.inventory.hasScepter()) {\n                    var str_steal_scepter = abilityModel.getAbilityAttributeValue(ability.attributes, 'str_steal_scepter',0);\n                    return v*str_steal_scepter;\n                }\n                else {\n                    return v*a;\n                }\n            },\n            returnProperty: 'bonusStrength'\n        },\n    ],\n    'undying_soul_rip': [\n        {\n            label: 'Units',\n            controlType: 'input'\n        },\n        {\n            attributeName: 'damage_per_unit',\n            label: 'DAMAGE/HEAL:',\n            ignoreTooltip: true,\n            controlType: 'text',\n            fn: function (v, a, parent, index, abilityModel, ability) {\n                return v*a;\n            }\n        }\n    ],\n    'undying_flesh_golem': [\n        {\n            label: 'Distance',\n            controlType: 'input'\n        },\n        {\n            attributeName: 'max_speed_slow',\n            label: '%MOVE SLOW:',\n            ignoreTooltip: true,\n            controlType: 'text',\n            fn: function (v, a, parent, index, abilityModel, ability) {\n                var min_speed_slow = abilityModel.getAbilityAttributeValue(ability.attributes, 'min_speed_slow', 0);\n                var radius = abilityModel.getAbilityAttributeValue(ability.attributes, 'radius', 0);\n                var full_power_radius = abilityModel.getAbilityAttributeValue(ability.attributes, 'full_power_radius', 0);\n                var distance = Math.min(Math.max(v, full_power_radius), radius);\n                var scale = 1 - (distance - full_power_radius) / (radius - full_power_radius);\n                return -Math.max(scale * a, min_speed_slow);\n            },\n            returnProperty: 'movementSpeedPctReduction'\n        },\n        {\n            attributeName: 'max_damage_amp',\n            label: '%DAMAGE AMP:',\n            ignoreTooltip: true,\n            controlType: 'text',\n            fn: function (v, a, parent, index, abilityModel, ability) {\n                var min_damage_amp = abilityModel.getAbilityAttributeValue(ability.attributes, 'min_damage_amp', 0);\n                var radius = abilityModel.getAbilityAttributeValue(ability.attributes, 'radius', 0);\n                var full_power_radius = abilityModel.getAbilityAttributeValue(ability.attributes, 'full_power_radius', 0);\n                var distance = Math.min(Math.max(v, full_power_radius), radius);\n                var scale = 1 - (distance - full_power_radius) / (radius - full_power_radius);\n                return Math.max(scale * a, min_damage_amp);\n            },\n            returnProperty: 'damageAmplification'\n        },\n        {\n            label: 'MAX HP',\n            controlType: 'input'\n        },\n        {\n            label: 'Hero Death Count',\n            controlType: 'input'\n        },\n        {\n            label: 'Creep Death Count',\n            controlType: 'input'\n        },\n        {\n            attributeName: 'death_heal',\n            label: 'DEATH HEAL (HEROES):',\n            ignoreTooltip: true,\n            controlType: 'method',\n            controls: [1, 2],\n            fn: function (v, a, parent, index, abilityModel, ability) {\n                return v[0]*v[1]*a/100;\n            }\n        },\n        {\n            attributeName: 'death_heal_creep',\n            label: 'DEATH HEAL (CREEPS):',\n            ignoreTooltip: true,\n            controlType: 'method',\n            controls: [1, 3],\n            fn: function (v, a, parent, index, abilityModel, ability) {\n                return v[0]*v[1]*a/100;\n            }\n        },\n        {\n            attributeName: 'death_heal_creep',\n            label: 'TOTAL DEATH HEAL:',\n            ignoreTooltip: true,\n            controlType: 'text',\n            controls: [4, 5],\n            fn: function (v, a, parent, index, abilityModel, ability) {\n                return v[0]+v[1];\n            }\n        }\n    ],\n    'ursa_fury_swipes': [\n        {\n            label: 'Stacks',\n            controlType: 'input'\n        },\n        {\n            attributeName: 'damage_per_stack',\n            label: 'Total Damage',\n            controlType: 'text',\n            fn: function (v, a, parent, index, abilityModel, ability) {\n                var enrageAbility = abilityModel.abilities().find(function(b) {\n                    return b.name == 'ursa_enrage';\n                });\n                if (enrageAbility.isActive() && enrageAbility.level() > 0) {\n                    var enrage_multiplier = abilityModel.getAbilityAttributeValue(enrageAbility.attributes, 'enrage_multiplier', enrageAbility.level());\n                    return v*a*enrage_multiplier;\n                }\n                return v*a;\n            },\n            returnProperty: 'bonusDamage'\n        }\n    ],\n    'ursa_enrage': [\n        {\n            attributeName: 'damage_reduction',\n            label: 'Total Damage',\n            controlType: 'text',\n            fn: function (v, a, parent, index, abilityModel, ability) {\n                return -a;\n            },\n            returnProperty: 'damageReduction'\n        }\n    ],\n    'venomancer_venomous_gale': [\n        {\n            label: 'Duration',\n            controlType: 'input'\n        },\n        {\n            attributeName: 'tick_damage',\n            label: 'Total Damage',\n            controlType: 'text',\n            fn: function (v, a, parent, index, abilityModel, ability) {\n                return abilityModel.getAbilityAttributeValue(ability.attributes, 'strike_damage',ability.level()) + Math.floor(v/3)*a;\n            }\n        },\n        {\n            attributeName: 'movement_slow',\n            label: 'Total Damage',\n            controlType: 'text',\n            fn: function (v, a, parent, index, abilityModel, ability) {\n                return a;\n            },\n            returnProperty: 'movementSpeedPctReduction'\n        }\n    ],\n    'venomancer_poison_sting': [\n        {\n            label: 'Duration',\n            controlType: 'input'\n        },\n        {\n            attributeName: 'damage',\n            label: 'Total Damage',\n            controlType: 'text',\n            fn: function (v, a, parent, index, abilityModel, ability) {\n                return v*a;\n            }\n        },\n        {\n            attributeName: 'movement_speed',\n            label: 'Total Damage',\n            controlType: 'text',\n            fn: function (v, a, parent, index, abilityModel, ability) {\n                return a;\n            },\n            returnProperty: 'movementSpeedPctReduction'\n        }\n    ],\n    'venomancer_poison_nova': [\n        {\n            label: 'Duration',\n            controlType: 'input'\n        },\n        {\n            attributeName: 'damage',\n            label: 'Total Damage',\n            controlType: 'text',\n            fn: function (v, a, parent, index, abilityModel, ability) {\n                return v*a;\n            }\n        }\n    ],\n    'viper_poison_attack': [\n        {\n            label: 'Duration',\n            controlType: 'input'\n        },\n        {\n            attributeName: 'damage',\n            label: 'Total Damage',\n            controlType: 'text',\n            fn: function (v, a, parent, index, abilityModel, ability) {\n                return v*a;\n            }\n        },\n        {\n            attributeName: 'bonus_movement_speed',\n            label: 'Total Damage',\n            controlType: 'text',\n            fn: function (v, a, parent, index, abilityModel, ability) {\n                return a;\n            },\n            returnProperty: 'movementSpeedPctReduction'\n        },\n        {\n            attributeName: 'bonus_attack_speed',\n            label: 'Total Damage',\n            controlType: 'text',\n            fn: function (v, a, parent, index, abilityModel, ability) {\n                return a;\n            },\n            returnProperty: 'attackspeedreduction'\n        }\n    ],\n    'viper_corrosive_skin': [\n        {\n            label: 'Duration',\n            controlType: 'input'\n        },\n        {\n            attributeName: 'damage',\n            label: 'Total Damage',\n            controlType: 'text',\n            fn: function (v, a, parent, index, abilityModel, ability) {\n                return v*a;\n            }\n        },\n        {\n            attributeName: 'bonus_movement_speed',\n            label: 'Total Damage',\n            controlType: 'text',\n            fn: function (v, a, parent, index, abilityModel, ability) {\n                return a;\n            },\n            returnProperty: 'movementSpeedPctReduction'\n        },\n        {\n            attributeName: 'bonus_attack_speed',\n            label: 'Total Damage',\n            controlType: 'text',\n            fn: function (v, a, parent, index, abilityModel, ability) {\n                return a;\n            },\n            returnProperty: 'attackspeedreduction'\n        },\n        {\n            attributeName: 'bonus_magic_resistance',\n            label: 'Total Damage',\n            controlType: 'text',\n            fn: function (v, a, parent, index, abilityModel, ability) {\n                return a;\n            },\n            returnProperty: 'magicResist'\n        }\n    ],\n    'viper_viper_strike': [\n        {\n            label: 'Duration',\n            controlType: 'input'\n        },\n        {\n            attributeName: 'damage',\n            label: 'Total Damage',\n            controlType: 'text',\n            fn: function (v, a, parent, index, abilityModel, ability) {\n                return v*a;\n            }\n        },\n        {\n            attributeName: 'bonus_movement_speed',\n            label: 'Total Damage',\n            controlType: 'text',\n            fn: function (v, a, parent, index, abilityModel, ability) {\n                return a;\n            },\n            returnProperty: 'movementSpeedPctReduction'\n        },\n        {\n            attributeName: 'bonus_attack_speed',\n            label: 'Total Damage',\n            controlType: 'text',\n            fn: function (v, a, parent, index, abilityModel, ability) {\n                return a;\n            },\n            returnProperty: 'attackspeedreduction'\n        }\n    ],\n    'visage_soul_assumption': [\n        {\n            label: 'Charges',\n            controlType: 'input'\n        },\n        {\n            attributeName: 'soul_charge_damage',\n            label: 'Total Damage:',\n            ignoreTooltip: true,\n            controlType: 'text',\n            fn: function (v, a, parent, index, abilityModel, ability) {\n                var soul_base_damage = abilityModel.getAbilityAttributeValue(ability.attributes, 'soul_base_damage',0);\n                var stack_limit = abilityModel.getAbilityAttributeValue(ability.attributes, 'stack_limit', ability.level());\n                stack_limit = Math.max(Math.min(v, stack_limit), 0);\n                return soul_base_damage + stack_limit*a;\n            }\n        }\n    ],\n    'visage_gravekeepers_cloak': [\n        {\n            label: 'Layers',\n            controlType: 'input'\n        },\n        {\n            attributeName: 'bonus_armor',\n            label: 'ARMOR:',\n            ignoreTooltip: true,\n            controlType: 'text',\n            fn: function (v, a, parent, index, abilityModel, ability) {\n                return v*a;\n            },\n            returnProperty: 'armor'\n        },\n        {\n            attributeName: 'bonus_resist',\n            label: '%RESIST:',\n            ignoreTooltip: true,\n            controlType: 'text',\n            fn: function (v, a, parent, index, abilityModel, ability) {\n                return v*a;\n            },\n            returnProperty: 'magicResist'\n        }\n    ],\n    'warlock_shadow_word': [\n        {\n            label: 'Duration',\n            controlType: 'input'\n        },\n        {\n            label: 'DAMAGE:',\n            ignoreTooltip: true,\n            controlType: 'text',\n            fn: function (v, a, parent, index, abilityModel, ability) {\n                return abilityModel.getAbilityPropertyValue(ability, 'damage')*v;\n            }\n        }\n    ],\n    'warlock_upheaval': [\n        {\n            label: 'Channel Duration',\n            controlType: 'input'\n        },\n        {\n            attributeName: 'slow_rate_duration',\n            label: '%MOVE SLOW:',\n            ignoreTooltip: true,\n            controlType: 'text',\n            fn: function (v, a, parent, index, abilityModel, ability) {\n                var max_slow = abilityModel.getAbilityAttributeValue(ability.attributes, 'max_slow',0);\n                var slow_per_tick = max_slow / (a - 0.5) / 2;\n                var ticks = Math.max(Math.floor(v * 2) - 1, 0);\n                return -Math.min(ticks * slow_per_tick, max_slow);\n            },\n            returnProperty: 'movementSpeedPctReduction'\n        }\n    ],\n    'weaver_the_swarm': [\n        {\n            label: 'Attacks',\n            controlType: 'input'\n        },\n        {\n            attributeName: 'damage',\n            label: 'DAMAGE:',\n            controlType: 'text',\n            fn: function (v, a, parent, index, abilityModel, ability) {\n                return v*a;\n            }\n        },\n        {\n            attributeName: 'armor_reduction',\n            label: 'DAMAGE:',\n            controlType: 'text',\n            fn: function (v, a, parent, index, abilityModel, ability) {\n                return -v*a;\n            },\n            returnProperty: 'armorReduction'\n        }\n    ],\n    'windrunner_powershot': [\n        {\n            label: 'Duration',\n            controlType: 'input'\n        },\n        {\n            label: 'DAMAGE:',\n            ignoreTooltip: true,\n            controlType: 'text',\n            fn: function (v, a, parent, index, abilityModel, ability) {\n                return abilityModel.getAbilityPropertyValue(ability, 'damage')*v;\n            }\n        }\n    ],\n    'winter_wyvern_cold_embrace': [\n        {\n            label: 'Duration',\n            controlType: 'input'\n        },\n        {\n            label: 'Ally Max Health',\n            controlType: 'input'\n        },\n        {\n            attributeName: 'heal_percentage',\n            label: 'TOTAL HEAL:',\n            ignoreTooltip: true,\n            controlType: 'text',\n            controls: [0,1],\n            fn: function (v, a, parent, index, abilityModel, ability) {\n                var base_heal = abilityModel.getAbilityAttributeValue(ability.attributes, 'heal_additive',ability.level());\n                return (base_heal + v[1] * a/100) * v[0];\n            }\n        }\n    ],\n    'wisp_spirits': [\n        {\n            label: 'Collision Count',\n            controlType: 'input'\n        },\n        {\n            attributeName: 'hero_damage',\n            label: 'Total Damage',\n            controlType: 'text',\n            fn: function (v, a, parent, index, abilityModel, ability) {\n                return v*a;\n            }\n        },\n        {\n            attributeName: 'creep_damage',\n            label: 'Total Damage',\n            controlType: 'text',\n            fn: function (v, a, parent, index, abilityModel, ability) {\n                return v*a;\n            }\n        }\n    ],\n    'wisp_overcharge': [\n        {\n            label: 'Current HP',\n            controlType: 'input'\n        },\n        {\n            attributeName: 'drain_pct',\n            label: 'HP DRAINED:',\n            ignoreTooltip: true, \n            controlType: 'text',\n            fn: function (v, a, parent, index, abilityModel, ability) {\n                return v*a;\n            }\n        },\n        {\n            label: 'Current MP',\n            controlType: 'input'\n        },\n        {\n            attributeName: 'drain_pct',\n            label: 'MP DRAINED:',\n            ignoreTooltip: true, \n            controlType: 'text',\n            fn: function (v, a, parent, index, abilityModel, ability) {\n                return v*a;\n            }\n        },\n        {\n            attributeName: 'bonus_attack_speed',\n            label: 'Total Damage',\n            controlType: 'text',\n            fn: function (v, a, parent, index, abilityModel, ability) {\n                return a;\n            },\n            returnProperty: 'attackspeed'\n        },\n        {\n            attributeName: 'bonus_damage_pct',\n            label: 'Total Damage',\n            controlType: 'text',\n            fn: function (v, a, parent, index, abilityModel, ability) {\n                return a;\n            },\n            returnProperty: 'damageReduction'\n        }\n    ],\n    'witch_doctor_paralyzing_cask': [\n        {\n            label: 'Hero Bounce Count',\n            controlType: 'input'\n        },\n        {\n            attributeName: 'hero_damage',\n            label: 'Total Damage',\n            controlType: 'text',\n            fn: function (v, a, parent, index, abilityModel, ability) {\n                var bounces = abilityModel.getAbilityAttributeValue(ability.attributes, 'bounces',ability.level());\n                return Math.min(Math.max(v, 0), bounces)*a;\n            }\n        },\n        {\n            label: 'Creep Bounce Count',\n            controlType: 'input'\n        },\n        {\n            attributeName: 'hero_damage',\n            label: 'CREEP DAMAGE:',\n            ignoreTooltip: true,\n            controlType: 'text',\n            fn: function (v, a, parent, index, abilityModel, ability) {\n                var bounces = abilityModel.getAbilityAttributeValue(ability.attributes, 'bounces',ability.level());\n                var damage = abilityModel.getAbilityPropertyValue(ability, 'damage');\n                return Math.min(Math.max(v, 0), bounces)*damage;\n            }\n        }\n    ],\n    'witch_doctor_voodoo_restoration': [\n        {\n            label: 'Duration',\n            controlType: 'input'\n        },\n        {\n            attributeName: 'heal',\n            label: 'Total Damage',\n            controlType: 'text',\n            fn: function (v, a, parent, index, abilityModel, ability) {\n                var interval = abilityModel.getAbilityAttributeValue(ability.attributes, 'heal_interval',ability.level());\n                var heal_per_tick = a * interval;\n                var ticks = Math.max(Math.floor(v / interval) - 1, 0);\n                return heal_per_tick * ticks;\n            }\n        },\n        {\n            attributeName: 'mana_per_second',\n            label: 'MANA COST:',\n            ignoreTooltip: true,\n            controlType: 'text',\n            fn: function (v, a, parent, index, abilityModel, ability) {\n                var interval = abilityModel.getAbilityAttributeValue(ability.attributes, 'heal_interval',ability.level());\n                var mana_per_tick = a * interval;\n                var ticks = Math.max(Math.floor(v / interval) - 1, 0);\n                return mana_per_tick * ticks;\n            }\n        }\n    ],\n    'witch_doctor_maledict': [\n        {\n            label: 'damage 0-4s',\n            controlType: 'input'\n        },\n        {\n            label: 'damage 4-8s',\n            controlType: 'input'\n        },\n        {\n            label: 'damage 8-12s',\n            controlType: 'input'\n        },\n        {\n            attributeName: 'bonus_damage',\n            label: 'Dot Damage after 3s:',\n            ignoreTooltip: true,\n            controlType: 'method',\n            fn: function (v, a, parent, index, abilityModel, ability) {\n                var damage = abilityModel.getAbilityPropertyValue(ability, 'damage');\n                return 3*damage;\n            }\n        },\n        {\n            attributeName: 'bonus_damage',\n            label: 'Burst Damage at 4s:',\n            ignoreTooltip: true,\n            controlType: 'method',\n            controls: [0, 3],\n            fn: function (v, a, parent, index, abilityModel, ability) {\n                var damage = abilityModel.getAbilityPropertyValue(ability, 'damage');\n                var d = v.reduce(function (memo, o) { return memo + o }, 0);\n                return Math.max(d, 0) * a/100;\n            }\n        },\n        {\n            attributeName: 'bonus_damage',\n            label: 'Dot Damage after 7s:',\n            ignoreTooltip: true,\n            controlType: 'method',\n            fn: function (v, a, parent, index, abilityModel, ability) {\n                var damage = abilityModel.getAbilityPropertyValue(ability, 'damage');\n                return 7*damage;\n            }\n        },\n        {\n            attributeName: 'bonus_damage',\n            label: 'Burst Damage at 8s:',\n            ignoreTooltip: true,\n            controlType: 'method',\n            controls: [0, 1, 4, 5],\n            fn: function (v, a, parent, index, abilityModel, ability) {\n                var damage = abilityModel.getAbilityPropertyValue(ability, 'damage');\n                var d = v.reduce(function (memo, o) { return memo + o }, 0);\n                return Math.max(d, 0) * a/100;\n            }\n        },\n        {\n            attributeName: 'bonus_damage',\n            label: 'Dot Damage after 11s:',\n            ignoreTooltip: true,\n            controlType: 'method',\n            fn: function (v, a, parent, index, abilityModel, ability) {\n                var damage = abilityModel.getAbilityPropertyValue(ability, 'damage');\n                return 11*damage;\n            }\n        },\n        {\n            attributeName: 'bonus_damage',\n            label: 'Burst Damage at 12s:',\n            ignoreTooltip: true,\n            controlType: 'method',\n            controls: [0, 1, 2, 4, 6, 7],\n            fn: function (v, a, parent, index, abilityModel, ability) {\n                var damage = abilityModel.getAbilityPropertyValue(ability, 'damage');\n                var d = v.reduce(function (memo, o) { return memo + o }, 0);\n                return Math.max(d, 0) * a/100;\n            }\n        },\n        {\n            attributeName: 'bonus_damage',\n            label: 'Total Burst Damage:',\n            ignoreTooltip: true,\n            controlType: 'method',\n            controls: [4, 6, 8],\n            fn: function (v, a, parent, index, abilityModel, ability) {\n                return v.reduce(function (memo, o) { return memo + o }, 0);\n            }\n        },\n        {\n            attributeName: 'bonus_damage',\n            label: 'Total Maledict Damage:',\n            ignoreTooltip: true,\n            controlType: 'method',\n            controls: [9],\n            fn: function (v, a, parent, index, abilityModel, ability) {\n                var duration = abilityModel.getAbilityAttributeValue(ability.attributes, 'duration_tooltip',0);\n                var damage = abilityModel.getAbilityPropertyValue(ability, 'damage');\n                return damage * duration + v[0];\n            }\n        },\n        {\n            label: 'Duration',\n            controlType: 'input'\n        },\n        {\n            attributeName: 'bonus_damage',\n            label: 'DOT Damage',\n            controlType: 'text',\n            fn: function (v, a, parent, index, abilityModel, ability) {\n                var duration = abilityModel.getAbilityAttributeValue(ability.attributes, 'duration_tooltip',0);\n                return abilityModel.getAbilityPropertyValue(ability, 'damage')*Math.min(Math.max(v, 0), duration);\n            }\n        }\n    ],\n    'witch_doctor_death_ward': [\n        {\n            label: 'Duration',\n            controlType: 'input'\n        },\n        {\n            attributeName: 'damage',\n            label: 'Total Damage',\n            controlType: 'text',\n            fn: function (v, a, parent, index, abilityModel, ability) {\n                return v*a;\n            }\n        }\n    ],\n    'zuus_static_field': [\n        {\n            label: 'Enemy HP',\n            controlType: 'input'\n        },\n        {\n            attributeName: 'damage_health_pct',\n            label: 'DAMAGE:',\n            ignoreTooltip: true,\n            controlType: 'text',\n            fn: function (v, a, parent, index, abilityModel, ability) {\n                return v*a/100;\n            }\n        }\n    ]\n}\n\nmodule.exports = abilityData;","'use strict';\nvar ko = (typeof window !== \"undefined\" ? window['ko'] : typeof global !== \"undefined\" ? global['ko'] : null);\n\nko.mapping = require('../lib/knockout.mapping');\nko.wrap = require('../lib/knockout.wrap');\n\nko.extenders.numeric = function(target, opts) {\n    //create a writable computed observable to intercept writes to our observable\n    var result = ko.pureComputed({\n        read: target,  //always return the original observables value\n        write: function(newValue) {\n            var current = target(),\n                roundingMultiplier = Math.pow(10, (opts === Object(opts) ? opts.precision : opts) || 0),\n                newValueAsNum = isNaN(newValue) ? (opts.defaultValue || 0) : +newValue,\n                valueToWrite = Math.round(newValueAsNum * roundingMultiplier) / roundingMultiplier;\n \n            //only write if it changed\n            if (valueToWrite !== current) {\n                target(valueToWrite);\n            } else {\n                //if the rounded value is the same, but a different value was written, force a notification for the current field\n                if (newValue !== current) {\n                    target.notifySubscribers(valueToWrite);\n                }\n            }\n        }\n    }).extend({ notify: 'always' });\n \n    //initialize with current value to make sure it is rounded appropriately\n    result(target());\n \n    //return the new computed observable\n    return result;\n};\n\nmodule.exports = ko;","var illusionData = {\n    chaos_knight_phantasm: {\n        hero: 'chaos_knight',\n        displayName: 'Chaos Knight Phantasm',\n        use_selected_hero: false,\n        max_level: 3,\n        outgoing_damage: 'outgoing_damage',\n        incoming_damage: 'incoming_damage'\n    },\n    naga_siren_mirror_image: {\n        hero: 'naga_siren',\n        displayName: 'Naga Siren Mirror Image',\n        use_selected_hero: false,\n        max_level: 4,\n        outgoing_damage: 'outgoing_damage',\n        incoming_damage: 'incoming_damage'\n    },\n    dark_seer_wall_of_replica: {\n        hero: 'dark_seer',\n        displayName: 'Dark Seer Wall of Replica',\n        use_selected_hero: true,\n        max_level: 3,\n        outgoing_damage: 'replica_damage_outgoing',\n        incoming_damage: 'replica_damage_incoming',\n        outgoing_damage_scepter: 'replica_damage_outgoing_scepter'\n    },\n    morphling_replicate: {\n        hero: 'morphling',\n        displayName: 'Morphling Replicate',\n        use_selected_hero: true,\n        max_level: 3,\n        outgoing_damage: 'illusion_damage_out_pct',\n        incoming_damage: 'illusion_damage_in_pct'\n    },\n    phantom_lancer_doppelwalk: {\n        hero: 'phantom_lancer',\n        displayName: 'Phantom Lancer Doppelwalk',\n        use_selected_hero: false,\n        max_level: 4,\n        outgoing_damage: 'illusion_damage_out_pct',\n        incoming_damage: 'illusion_damage_in_pct'        \n    },\n    phantom_lancer_juxtapose: {\n        hero: 'phantom_lancer',\n        displayName: 'Phantom Lancer Juxtapose',\n        use_selected_hero: false,\n        max_level: 4,\n        outgoing_damage: 'illusion_damage_out_pct',\n        incoming_damage: 'illusion_damage_in_pct'        \n    },\n    phantom_lancer_spirit_lance: {\n        hero: 'phantom_lancer',\n        displayName: 'Phantom Lancer Spirit Lance',\n        use_selected_hero: false,\n        max_level: 4,\n        outgoing_damage: 'illusion_damage_out_pct',\n        incoming_damage: 'illusion_damage_in_pct'        \n    },\n    shadow_demon_disruption: {\n        hero: 'shadow_demon',\n        displayName: 'Shadow Demon Disruption',\n        use_selected_hero: true,\n        max_level: 4,\n        outgoing_damage: 'illusion_outgoing_damage',\n        incoming_damage: 'illusion_incoming_damage'        \n    },\n    spectre_haunt: {\n        hero: 'spectre',\n        displayName: 'Spectre Haunt',\n        use_selected_hero: false,\n        max_level: 3,\n        outgoing_damage: 'illusion_damage_outgoing',\n        incoming_damage: 'illusion_damage_incoming'        \n    },\n    terrorblade_conjure_image: {\n        hero: 'terrorblade',\n        displayName: 'Terrorblade Conjure Image',\n        use_selected_hero: false,\n        max_level: 4,\n        outgoing_damage: 'illusion_outgoing_damage',\n        incoming_damage: 'illusion_incoming_damage'        \n    },\n    terrorblade_reflection: {\n        hero: 'terrorblade',\n        displayName: 'Terrorblade Reflection',\n        use_selected_hero: true,\n        max_level: 4,\n        outgoing_damage: 'illusion_outgoing_damage'     \n    },\n    item_manta: {\n        hero: '',\n        is_item: true,\n        displayName: 'Manta Style Illusion',\n        use_selected_hero: true,\n        max_level: 1,\n        outgoing_damage_melee: 'images_do_damage_percent_melee',\n        incoming_damage_melee: 'images_take_damage_percent_melee',\n        outgoing_damage_ranged: 'images_do_damage_percent_ranged',\n        incoming_damage_ranged: 'images_take_damage_percent_ranged'\n    }\n}\n\nmodule.exports = illusionData;","var stackableItems = require(\"./stackableItems\");\nvar levelItems = require(\"./levelItems\");\nvar itemsWithActive = require(\"./itemsWithActive\");\n\nvar BasicInventoryViewModel = function (h) {\n    var self = this;\n    self.items = ko.observableArray([]);\n    self.activeItems = ko.observableArray([]);\n    self.addItem = function (data, event) {\n        if (data.selectedItem() != undefined) {\n            var new_item = {\n                item: data.selectedItem().split('|')[0],\n                state: ko.observable(0),\n                size: data.itemInputValue(),\n                enabled: ko.observable(true)\n            }\n            switch (new_item.item) {\n                case 'dagon':\n                    new_item.size = Math.min(new_item.size, 5);\n                break;\n                break;\n                case 'travel_boots':\n                case 'diffusal_blade':\n                    new_item.size = Math.min(new_item.size, 2);\n                break;\n                case 'necronomicon':\n                    new_item.size = Math.min(new_item.size, 3);\n                break;\n            }\n            this.items.push(new_item);\n            if (data.selectedItem() === 'ring_of_aquila' || data.selectedItem() === 'ring_of_basilius' || data.selectedItem() === 'heart') {\n                this.toggleItem(undefined, new_item, undefined);\n            }\n        }\n    }.bind(this);\n    self.toggleItem = function (index, data, event) {\n        if (itemsWithActive.indexOf(data.item) >= 0) {\n            if (this.activeItems.indexOf(data) < 0) {\n                this.activeItems.push(data);\n            }\n            else {\n                this.activeItems.remove(data);\n            }\n            switch (data.item) {\n                case 'power_treads':\n                    if (data.state() < 2) {\n                        data.state(data.state() + 1);\n                    }\n                    else {\n                        data.state(0);\n                    }                \n                break;\n                default:\n                    if (data.state() == 0) {\n                        data.state(1);\n                    }\n                    else {\n                        data.state(0);\n                    }                \n                break;\n            }\n        }\n    }.bind(this);\n    self.removeItem = function (item) {\n        this.activeItems.remove(item);\n        this.items.remove(item);\n    }.bind(this);\n    self.toggleMuteItem = function (item) {\n        item.enabled(!item.enabled());\n    }.bind(this);\n    self.removeAll = function () {\n        this.activeItems.removeAll();\n        this.items.removeAll();\n    }.bind(this);\n}\nBasicInventoryViewModel.prototype.getItemImage = function (data) {\n    var state = ko.utils.unwrapObservable(data.state);\n    switch (data.item) {\n        case 'power_treads':\n            if (state == 0) {\n                return '/media/images/items/' + data.item + '_str.png';\n            }\n            else if (state == 1) {\n                return '/media/images/items/' + data.item + '_int.png';\n            }\n            else {\n                return '/media/images/items/' + data.item + '_agi.png';\n            }\n        break;\n        case 'tranquil_boots':\n        case 'ring_of_basilius':\n            if (state == 0) {\n                return '/media/images/items/' + data.item + '.png';\n            }\n            else {\n                return '/media/images/items/' + data.item + '_active.png';\n            }\n        break;\n        case 'armlet':\n            if (state == 0) {\n                return '/media/images/items/' + data.item + '.png';\n            }\n            else {\n                return '/media/images/items/' + data.item + '_active.png';\n            }\n        break;\n        case 'ring_of_aquila':\n            if (state == 0) {\n                return '/media/images/items/' + data.item + '_active.png';\n            }\n            else {\n                return '/media/images/items/' + data.item + '.png';\n            }\n        break;\n        case 'dagon':\n        case 'diffusal_blade':\n        case 'travel_boots':\n        case 'necronomicon':\n            if (data.size > 1) {\n                return '/media/images/items/' + data.item + '_' + data.size + '.png';\n            }\n            else {\n                return '/media/images/items/' + data.item + '.png';\n            }\n        break;\n        default:\n            return '/media/images/items/' + data.item + '.png';            \n        break;\n    }\n};\nBasicInventoryViewModel.prototype.getItemSizeLabel = function (data) {\n    if (stackableItems.indexOf(data.item) != -1) {\n        return '<span style=\"font-size:10px\">Qty: </span>' + data.size;\n    }\n    else if (levelItems.indexOf(data.item) != -1) {\n        return '<span style=\"font-size:10px\">Lvl: </span>' + data.size;\n    }\n    else if (data.item == 'bloodstone') {\n        return '<span style=\"font-size:10px\">Charges: </span>' + data.size;\n    }\n    else {\n        return '';\n    }\n};\nBasicInventoryViewModel.prototype.getActiveBorder = function (data) {\n    switch (data.item) {\n        case 'power_treads':\n        case 'tranquil_boots':\n        case 'ring_of_basilius':\n        case 'ring_of_aquila':\n        case 'armlet':\n            return 0;\n        break;\n        default:\n            return ko.utils.unwrapObservable(data.state);    \n        break;\n    }\n}\nBasicInventoryViewModel.prototype.getItemAttributeValue = function (attributes, attributeName, level) {\n    for (var i = 0; i < attributes.length; i++) {\n        if (attributes[i].name == attributeName) {\n            if (level == 0) {\n                return parseFloat(attributes[i].value[0]);\n            }\n            else if (level > attributes[i].value.length) {\n                return parseFloat(attributes[i].value[0]);\n            }\n            else {\n                return parseFloat(attributes[i].value[level - 1]);\n            }\n        }\n    }\n}\n\nmodule.exports = BasicInventoryViewModel;","'use strict';\nvar ko = require('../herocalc_knockout');\n\nvar stackableItems = require(\"./stackableItems\");\nvar levelItems = require(\"./levelItems\");\nvar BasicInventoryViewModel = require(\"./BasicInventoryViewModel\");\nvar itemOptionsArray = require(\"./itemOptionsArray\");\nvar itemBuffOptions = require(\"./itemBuffOptions\");\nvar itemDebuffOptions = require(\"./itemDebuffOptions\");\n\nvar InventoryViewModel = function (itemData, h) {\n    var self = this;\n    BasicInventoryViewModel.call(this, h);\n    self.hero = h;\n    self.hasInventory = ko.observable(true);\n    self.items = ko.observableArray([]);\n    self.activeItems = ko.observableArray([]);\n    self.hasScepter = ko.computed(function () {\n        for (var i = 0; i < self.items().length; i++) {\n            var item = self.items()[i].item;\n            if (item === 'ultimate_scepter' && self.items()[i].enabled()) {\n                return true;\n            }\n            \n        }\n        return false;\n    }, this);\n    self.isEthereal = ko.computed(function () {\n        for (var i = 0; i < self.items().length; i++) {\n            var item = self.items()[i].item;\n            var isActive = self.activeItems.indexOf(self.items()[i]) >= 0 ? true : false;\n            if ((item === 'ghost' || item === 'ethereal_blade') && self.items()[i].enabled() && isActive) {\n                return true;\n            }\n        }\n        return false;\n    }, this);\n    self.isSheeped = ko.computed(function () {\n        for (var i = 0; i < self.items().length; i++) {\n            var item = self.items()[i].item;\n            var isActive = self.activeItems.indexOf(self.items()[i]) >= 0 ? true : false;\n            if (item === 'sheepstick' && self.items()[i].enabled() && isActive) {\n                return true;\n            }\n        }\n        return false;\n    }, this);\n    self.totalCost = ko.computed(function () {\n        var c = 0;\n        for (var i = 0; i < self.items().length; i++) {\n            var item = self.items()[i].item;\n            if (!self.items()[i].enabled()) continue;\n            if (stackableItems.indexOf(item) != -1) {\n                c += itemData['item_' + item].itemcost * self.items()[i].size;\n            }\n            else if (levelItems.indexOf(item) != -1) {\n                switch(item) {\n                    case 'diffusal_blade':\n                        c += itemData['item_' + item].itemcost + (self.items()[i].size - 1) * 700;\n                    break;\n                    case 'necronomicon':\n                    case 'dagon':\n                        c += itemData['item_' + item].itemcost + (self.items()[i].size - 1) * 1250;\n                    break;\n                    default:\n                        c += itemData['item_' + item].itemcost;\n                    break;\n                }\n            }\n            else {\n                c += itemData['item_' + item].itemcost;\n            }\n            \n        }\n        return c;\n    }, this);\n    self.addItemBuff = function (data, event) {\n        if (self.hasInventory() && self.selectedItemBuff() != undefined) {\n            var new_item = {\n                item: self.selectedItemBuff(),\n                state: ko.observable(0),\n                size: 1,\n                enabled: ko.observable(true)\n            }\n            self.items.push(new_item);\n            if (self.selectedItemBuff() === 'ring_of_aquila' || self.selectedItemBuff() === 'ring_of_basilius') {\n                self.toggleItem(undefined, new_item, undefined);\n            }\n        }\n    };\n    self.addItemDebuff = function (data, event) {\n        if (self.hasInventory() && self.selectedItemDebuff() != undefined) {\n            var new_item = {\n                item: self.selectedItemDebuff().split('|')[0],\n                state: ko.observable(0),\n                size: 1,\n                enabled: ko.observable(true)\n            }\n            if (self.selectedItemDebuff().split('|').length == 2) {\n                new_item.debuff = self.selectedItemDebuff().split('|')[1]\n            }\n            self.items.push(new_item);\n            if (self.selectedItemDebuff() === 'ring_of_aquila' || self.selectedItemDebuff() === 'ring_of_basilius') {\n                self.toggleItem(undefined, new_item, undefined);\n            }\n        }\n    };\n    \n    self.getAttributes = function (attributetype) {\n        var totalAttribute = 0;\n        for (var i = 0; i < self.items().length; i++) {\n            var item = self.items()[i].item;\n            var isActive = self.activeItems.indexOf(self.items()[i]) >= 0 ? true : false;\n            if (!self.items()[i].enabled()) continue;\n            var size = self.items()[i].size;\n            for (var j = 0; j < itemData['item_' + item].attributes.length; j++) {\n                var attribute = itemData['item_' + item].attributes[j];\n                switch(attribute.name) {\n                    case 'bonus_all_stats':\n                        totalAttribute += parseInt(attribute.value[0]);\n                    break;\n                    case 'bonus_stats':\n                        totalAttribute += parseInt(attribute.value[0]);\n                    break;\n                }\n                switch(attributetype) {\n                    case 'agi':\n                        if (attribute.name == 'bonus_agility') {\n                            if (item == 'diffusal_blade') {\n                                totalAttribute += parseInt(attribute.value[size-1]);\n                            }\n                            else {\n                                totalAttribute += parseInt(attribute.value[0]);\n                            }\n                        }\n                        if (attribute.name == 'bonus_stat' && self.items()[i].state() == 2) {totalAttribute += parseInt(attribute.value[0]);};\n                        if (attribute.name == 'bonus_agi') {totalAttribute += parseInt(attribute.value[0]);};\n                    break;\n                    case 'int':\n                        if (attribute.name == 'bonus_intellect') {\n                            if (item == 'necronomicon') {\n                                totalAttribute += parseInt(attribute.value[size-1]);\n                            }\n                            else if (item == 'diffusal_blade') {\n                                totalAttribute += parseInt(attribute.value[size-1]);\n                            }\n                            else if (item == 'dagon') {\n                                totalAttribute += parseInt(attribute.value[size-1]);\n                            }\n                            else {\n                                totalAttribute += parseInt(attribute.value[0]);\n                            }\n                        }\n                        if (attribute.name == 'bonus_intelligence') {totalAttribute += parseInt(attribute.value[0]);};\n                        if (attribute.name == 'bonus_int') {totalAttribute += parseInt(attribute.value[0]);};\n                        if (attribute.name == 'bonus_stat' && self.items()[i].state() == 1) {totalAttribute += parseInt(attribute.value[0]);};\n                    break;\n                    case 'str':\n                        if (attribute.name == 'bonus_strength') {\n                            if (item == 'necronomicon') {\n                                totalAttribute += parseInt(attribute.value[size-1]);\n                            }\n                            else {\n                                totalAttribute += parseInt(attribute.value[0]);\n                            }\n                        }\n                        if (attribute.name == 'bonus_stat' && self.items()[i].state() == 0) {totalAttribute += parseInt(attribute.value[0]);};\n                        if (attribute.name == 'bonus_str') {totalAttribute += parseInt(attribute.value[0]);};\n                        if (attribute.name == 'unholy_bonus_strength' && isActive) {totalAttribute += parseInt(attribute.value[0]);};\n                    break;\n                }\n            }\n        }\n        return totalAttribute;\n    };\n    self.getBash = function (attacktype) {\n        var totalAttribute = 1;\n        for (var i = 0; i < self.items().length; i++) {\n            var item = self.items()[i].item;\n            if (!self.items()[i].enabled()) continue;\n            for (var j = 0; j < itemData['item_' + item].attributes.length; j++) {\n                var attribute = itemData['item_' + item].attributes[j];\n                switch(attribute.name) {\n                    case 'bash_chance':\n                        totalAttribute *= (1 - parseInt(attribute.value[0]) / 100);\n                    break;\n                    case 'bash_chance_melee':\n                        if (attacktype == 'DOTA_UNIT_CAP_MELEE_ATTACK') { totalAttribute *= (1 - parseInt(attribute.value[0]) / 100); };\n                    break;\n                    case 'bash_chance_ranged':\n                        if (attacktype == 'DOTA_UNIT_CAP_RANGED_ATTACK') { totalAttribute *= (1 - parseInt(attribute.value[0]) / 100); };\n                    break;\n                }\n            }\n        }\n        return totalAttribute;\n    };\n    \n    self.getCritChance = function () {\n        var totalAttribute = 1;\n        for (var i = 0; i < self.items().length; i++) {\n            var item = self.items()[i].item;\n            var isActive = self.activeItems.indexOf(self.items()[i]) >= 0 ? true : false;\n            if (!self.items()[i].enabled()) continue;\n            for (var j = 0; j < itemData['item_' + item].attributes.length; j++) {\n                var attribute = itemData['item_' + item].attributes[j];\n                switch(attribute.name) {\n                    case 'crit_chance':\n                        totalAttribute *= (1 - parseInt(attribute.value[0]) / 100);\n                    break;\n                }\n            }\n        }\n        return totalAttribute;\n    };\n    \n    self.getCritSource = function () {\n        var sources = {};\n        for (var i = 0; i < self.items().length; i++) {\n            var item = self.items()[i].item;\n            var isActive = self.activeItems.indexOf(self.items()[i]) >= 0 ? true : false;\n            if (!self.items()[i].enabled()) continue;\n            switch (item) {\n                case 'lesser_crit':\n                case 'greater_crit':\n                case 'bloodthorn':\n                    if (sources[item] == undefined) {\n                        sources[item] = {\n                            'chance': self.getItemAttributeValue(itemData['item_' + item].attributes, 'crit_chance', 0) / 100,\n                            'multiplier': self.getItemAttributeValue(itemData['item_' + item].attributes, 'crit_multiplier', 0) / 100,\n                            'count': 1,\n                            'displayname': itemData['item_' + item].displayname\n                        }\n                    }\n                    else {\n                        sources[item].count += 1;\n                    }\n                break;\n            }\n            if (item === 'bloodthorn' && isActive) {\n                if (sources['soul_rend'] == undefined) {\n                    sources['soul_rend'] = {\n                        'chance': 1,\n                        'multiplier': self.getItemAttributeValue(itemData['item_' + item].attributes, 'target_crit_multiplier', 0) / 100,\n                        'count': 1,\n                        'displayname': 'Soul Rend'\n                    }\n                }\n                else {\n                    sources['soul_rend'].count += 1;\n                }\n            }\n        }\n        return sources;\n    };\n\n    self.getCleaveSource = function () {\n        var sources = {};\n        for (var i = 0; i < self.items().length; i++) {\n            var item = self.items()[i].item;\n            var isActive = self.activeItems.indexOf(self.items()[i]) >= 0 ? true : false;\n            if (!self.items()[i].enabled()) continue;\n            switch (item) {\n                case 'bfury':\n                    if (sources[item] == undefined) {\n                        sources[item] = {\n                            'radius': self.getItemAttributeValue(itemData['item_' + item].attributes, 'cleave_radius', 0),\n                            'magnitude': self.getItemAttributeValue(itemData['item_' + item].attributes, 'cleave_damage_percent', 0) / 100,\n                            'count': 1,\n                            'displayname': itemData['item_' + item].displayname\n                        }\n                    }\n                    else {\n                        sources[item].count += 1;\n                    }\n                break;\n            }\n\n        }\n        return sources;\n    };\n    \n    self.getBashSource = function (attacktype) {\n        var sources = {};\n        for (var i = 0; i < self.items().length; i++) {\n            var item = self.items()[i].item;\n            var isActive = self.activeItems.indexOf(self.items()[i]) >= 0 ? true : false;\n            if (!self.items()[i].enabled()) continue;\n            switch (item) {\n                case 'javelin':\n                    if (sources[item] == undefined) {\n                        sources[item] = {\n                            'damage': self.getItemAttributeValue(itemData['item_' + item].attributes, 'bonus_chance_damage', 1),\n                            'damageType': 'magic',\n                            'count': 1,\n                            'chance': self.getItemAttributeValue(itemData['item_' + item].attributes, 'bonus_chance', 1) / 100,\n                            'displayname': itemData['item_' + item].displayname + ' Pierce'\n                        }\n                    }\n                    else {\n                        sources[item].count += 1;\n                    }\n                break;\n                case 'monkey_king_bar':\n                    if (sources[item] == undefined) {\n                        sources[item] = {\n                            'item': item,\n                            'chance': self.getItemAttributeValue(itemData['item_' + item].attributes, 'bash_chance', 0) / 100,\n                            'damage': self.getItemAttributeValue(itemData['item_' + item].attributes, 'bash_damage', 0),\n                            'duration': self.getItemAttributeValue(itemData['item_' + item].attributes, 'bash_stun', 0),\n                            'count': 1,\n                            'damageType': 'magic',\n                            'displayname': 'Mini-Bash' //itemData['item_' + item].displayname\n                        }\n                    }\n                    else {\n                        sources[item].count += 1;\n                    }\n                break;\n                case 'abyssal_blade':\n                case 'basher':\n                    if (!sources.hasOwnProperty('bash')) {\n                        sources['bash'] = {\n                            'item': item,\n                            'chance': self.getItemAttributeValue(itemData['item_' + item].attributes, (attacktype == 'DOTA_UNIT_CAP_MELEE_ATTACK') ?'bash_chance_melee' : 'bash_chance_ranged', 0) / 100,\n                            'damage': self.getItemAttributeValue(itemData['item_' + item].attributes, 'bonus_chance_damage', 0),\n                            'duration': self.getItemAttributeValue(itemData['item_' + item].attributes, 'bash_duration', 0),\n                            'count': 1,\n                            'damageType': 'physical',\n                            'displayname': 'Bash' //itemData['item_' + item].displayname\n                        }\n                    }\n                    else {\n                        //sources[item].count += 1;\n                    }\n                break;\n            }\n\n        }\n        return sources;\n    };\n    \n    self.getOrbProcSource = function () {\n        var sources = {};\n        for (var i = 0; i < self.items().length; i++) {\n            var item = self.items()[i].item;\n            var isActive = self.activeItems.indexOf(self.items()[i]) >= 0 ? true : false;\n            if (!self.items()[i].enabled()) continue;\n            switch (item) {\n                case 'maelstrom':\n                case 'mjollnir':\n                    if (sources[item] == undefined) {\n                        sources[item] = {\n                            'chance': self.getItemAttributeValue(itemData['item_' + item].attributes, 'chain_chance', 0) / 100,\n                            'damage': self.getItemAttributeValue(itemData['item_' + item].attributes, 'chain_damage', 0),\n                            'count': 1,\n                            'damageType': 'magic',\n                            'displayname': itemData['item_' + item].displayname\n                        }\n                    }\n                    else {\n                        sources[item].count += 1;\n                    }\n                break;\n            }\n\n        }\n        return sources;\n    };\n\n    self.getOrbSource = function () {\n        var sources = {};\n        for (var i = 0; i < self.items().length; i++) {\n            var item = self.items()[i].item;\n            var isActive = self.activeItems.indexOf(self.items()[i]) >= 0 ? true : false;\n            if (!self.items()[i].enabled()) continue;\n            switch (item) {\n                case 'diffusal_blade':\n                    if (sources[item] == undefined) {\n                        sources[item] = {\n                            'chance': 1,\n                            'damage': self.getItemAttributeValue(itemData['item_' + item].attributes, 'feedback_mana_burn', self.items()[i].size),\n                            'count': 1,\n                            'damageType': 'physical',\n                            'displayname': itemData['item_' + item].displayname\n                        }\n                    }\n                    else {\n                        sources[item].count += 1;\n                    }\n                break;\n            }\n\n        }\n        return sources;\n    };\n    \n    self.getHealth = function () {\n        var totalAttribute = 0;\n        for (var i = 0; i < self.items().length; i++) {\n            var item = self.items()[i].item;\n            if (!self.items()[i].enabled()) continue;\n            for (var j = 0; j < itemData['item_' + item].attributes.length; j++) {\n                var attribute = itemData['item_' + item].attributes[j];\n                switch(attribute.name) {\n                    case 'bonus_health':\n                        totalAttribute += parseInt(attribute.value[0]);\n                    break;\n                }\n            }\n        }\n        return totalAttribute;\n    };\n    self.getHealthRegen = function () {\n        var totalAttribute = 0;\n        for (var i = 0; i < self.items().length; i++) {\n            var item = self.items()[i].item;\n            var isActive = self.activeItems.indexOf(self.items()[i]) >= 0 ? true : false;\n            if (!self.items()[i].enabled()) continue;\n            for (var j = 0; j < itemData['item_' + item].attributes.length; j++) {\n                var attribute = itemData['item_' + item].attributes[j];\n                switch(attribute.name) {\n                    case 'health_regen':\n                    case 'bonus_regen':\n                        totalAttribute += parseInt(attribute.value[0]);\n                    break;\n                    case 'bonus_health_regen':\n                        if (item == 'tranquil_boots' && !isActive) {\n                            totalAttribute += parseInt(attribute.value[0]);\n                        }\n                        else if (item != 'tranquil_boots') {\n                            totalAttribute += parseInt(attribute.value[0]);\n                        }\n                    break;\n                    case 'hp_regen':\n                        totalAttribute += parseInt(attribute.value[0]);\n                    break;\n                    case 'health_regen_rate':\n                        if (item == 'heart' && isActive) {\n                            totalAttribute += (parseInt(attribute.value[0]) / 100) * self.hero.health();\n                        }\n                    break;\n                }\n            }\n        }\n        return totalAttribute;\n    };\n    self.getHealthRegenAura = function (e) {\n        var totalAttribute = 0,\n            excludeList = e || [];\n        for (var i = 0; i < self.items().length; i++) {\n            var item = self.items()[i].item;\n            var isActive = self.activeItems.indexOf(self.items()[i]) >= 0 ? true : false;\n            if (!self.items()[i].enabled()) continue;\n            for (var j = 0; j < itemData['item_' + item].attributes.length; j++) {\n                var attribute = itemData['item_' + item].attributes[j];\n                if (excludeList.indexOf(item + attribute.name) > -1) continue;\n                switch(attribute.name) {\n                    case 'aura_health_regen':\n                        totalAttribute += parseInt(attribute.value[0]);\n                        excludeList.push(item + attribute.name);\n                    break;\n                }\n            }\n        }\n        return {value: totalAttribute, excludeList: excludeList};\n    };\n    \n    self.getMana = function () {\n        var totalAttribute = 0;\n        for (var i = 0; i < self.items().length; i++) {\n            var item = self.items()[i].item;\n            if (!self.items()[i].enabled()) continue;\n            for (var j = 0; j < itemData['item_' + item].attributes.length; j++) {\n                var attribute = itemData['item_' + item].attributes[j];\n                switch(attribute.name) {\n                    case 'bonus_mana':\n                        totalAttribute += parseInt(attribute.value[0]);\n                    break;\n                }\n            }\n        }\n        return totalAttribute;\n    };\n    \n    self.getManaRegen = function () {\n        var totalAttribute = 0;\n        for (var i = 0; i < self.items().length; i++) {\n            var item = self.items()[i].item;\n            if (!self.items()[i].enabled()) continue;\n            for (var j = 0; j < itemData['item_' + item].attributes.length; j++) {\n                var attribute = itemData['item_' + item].attributes[j];\n                switch(attribute.name) {\n                    case 'aura_mana_regen':\n                    case 'mana_regen_aura':\n                        totalAttribute += parseFloat(attribute.value[0]);\n                    break;\n                    case 'mana_regen':\n                        if (item == 'infused_raindrop') totalAttribute += parseFloat(attribute.value[0]);\n                    break;\n                }\n            }\n        }\n        return totalAttribute;    \n    };\n    self.getManaRegenPercent = function () {\n        var totalAttribute = 0;\n        for (var i = 0; i < self.items().length; i++) {\n            var item = self.items()[i].item;\n            if (!self.items()[i].enabled()) continue;\n            for (var j = 0; j < itemData['item_' + item].attributes.length; j++) {\n                var attribute = itemData['item_' + item].attributes[j];\n                switch(attribute.name) {\n                    case 'bonus_mana_regen':\n                    case 'mana_regen':\n                    case 'bonus_mana_regen_pct':\n                        if (item != 'infused_raindrop') totalAttribute += parseFloat(attribute.value[0]);\n                    break;\n                }\n            }\n        }\n        return totalAttribute / 100;    \n    };\n    self.getManaRegenBloodstone = function () {\n        for (var i = 0; i < self.items().length; i++) {\n            var item = self.items()[i].item;\n            if (!self.items()[i].enabled()) continue;\n            if (item.indexOf('bloodstone') != -1) {\n                return parseInt(self.items()[i].size);\n            }\n        }\n        return 0;\n    };\n    \n    self.getArmor = function () {\n        var totalAttribute = 0;\n        for (var i = 0; i < self.items().length; i++) {\n            var item = self.items()[i].item;\n            var isActive = self.activeItems.indexOf(self.items()[i]) >= 0 ? true : false;\n            if (!self.items()[i].enabled()) continue;\n            for (var j = 0; j < itemData['item_' + item].attributes.length; j++) {\n                var attribute = itemData['item_' + item].attributes[j];\n                switch(attribute.name) {\n                    case 'bonus_armor':\n                        if (!isActive || (item != 'medallion_of_courage' && item != 'solar_crest')) { totalAttribute += parseInt(attribute.value[0]); };\n                    break;\n                    case 'unholy_bonus_armor':\n                        if (isActive && item == 'armlet') { totalAttribute += parseInt(attribute.value[0]); };\n                    break;\n                }\n            }\n        }\n        return totalAttribute;\n    };\n    \n    self.getArmorAura = function (aList) {\n        var totalAttribute = 0,\n            attributeList = aList || [];\n        for (var i = 0; i < self.items().length; i++) {\n            var item = self.items()[i].item;\n            var isActive = self.activeItems.indexOf(self.items()[i]) >= 0 ? true : false;\n            if (!self.items()[i].enabled()) continue;\n            for (var j = 0;j < itemData['item_' + item].attributes.length; j++) {\n                var attribute = itemData['item_' + item].attributes[j];\n                if (attributeList.find(function (a) { return attribute.name == a.name; })) continue;\n                switch(attribute.name) {\n                    // buckler\n                    case 'bonus_aoe_armor':\n                        if (isActive) {\n                            attributeList.push({'name':attribute.name, 'value': parseInt(attribute.value[0])});\n                        }\n                    break;\n                    // assault\n                    case 'aura_positive_armor':\n                        attributeList.push({'name':attribute.name, 'value': parseInt(attribute.value[0])});\n                    break;\n                    // ring_of_aquila,ring_of_basilius\n                    case 'aura_bonus_armor':\n                        if (isActive) {\n                            attributeList.push({'name':attribute.name, 'value': parseInt(attribute.value[0])});\n                        }\n                    break;\n                    // vladmir\n                    case 'armor_aura':\n                        attributeList.push({'name':attribute.name, 'value': parseInt(attribute.value[0])});\n                    break;\n                    // mekansm\n                    case 'heal_bonus_armor':\n                        if (isActive) {\n                            attributeList.push({'name':attribute.name, 'value': parseInt(attribute.value[0])});\n                        }\n                    break;\n                }\n            }\n        }\n        // remove buckler if there is a mekansm\n        if (attributeList.find(function (attribute) { return attribute.name == 'heal_bonus_armor'; })) {\n            attributeList = attributeList.filter(function (attribute) {\n                return attribute.name !== 'bonus_aoe_armor';\n            });\n        }\n        // remove ring_of_aquila,ring_of_basilius if there is a vladmir\n        if (attributeList.find(function (attribute) { return attribute.name == 'armor_aura'; })) {\n            attributeList = attributeList.filter(function (attribute) {\n                return attribute.name !== 'aura_bonus_armor';\n            });\n        }\n        \n        totalAttribute = attributeList.reduce(function (memo, attribute) {\n            return memo += attribute.value;\n        }, 0);\n        return {value: totalAttribute, attributes: attributeList};\n    };\n    self.getArmorReduction = function (e) {\n        var totalAttribute = 0,\n            excludeList = e || [];\n        for (var i = 0; i < self.items().length; i++) {\n            var item = self.items()[i].item;\n            var isActive = self.activeItems.indexOf(self.items()[i]) >= 0 ? true : false;\n            if (!self.items()[i].enabled()) continue;\n            for (var j = 0; j < itemData['item_' + item].attributes.length; j++) {\n                var attribute = itemData['item_' + item].attributes[j];\n                if (excludeList.indexOf(attribute.name) > -1 || excludeList.indexOf(item + '_' + attribute.name) > -1) continue;\n                switch(attribute.name) {\n                    case 'armor_reduction':\n                        if (isActive || (item != 'medallion_of_courage' && item != 'solar_crest')) {\n                            totalAttribute += parseInt(attribute.value[0]);\n                            excludeList.push(item + '_' + attribute.name);\n                        }\n                    break;\n                    case 'aura_negative_armor':\n                        totalAttribute += parseInt(attribute.value[0]);\n                        excludeList.push(attribute.name);\n                    break;\n                    case 'corruption_armor':\n                        totalAttribute += parseInt(attribute.value[0]);\n                        excludeList.push(attribute.name);\n                    break;\n                }\n            }\n        }\n        return {value: totalAttribute, excludeList: excludeList};\n    };\n    self.getEvasion = function () {\n        var totalAttribute = 1;\n        for (var i = 0; i < self.items().length; i++) {\n            var item = self.items()[i].item;\n            var isActive = self.activeItems.indexOf(self.items()[i]) >= 0 ? true : false;\n            if (!self.items()[i].enabled()) continue;\n            for (var j = 0; j < itemData['item_' + item].attributes.length; j++) {\n                var attribute = itemData['item_' + item].attributes[j];\n                switch(attribute.name) {\n                    case 'bonus_evasion':\n                        if (!isActive || (item != 'butterfly' && item != 'solar_crest')) { totalAttribute *= (1 - parseInt(attribute.value[0]) / 100); }\n                    break;\n                }\n            }\n        }\n        return totalAttribute;\n    };\n    self.getMovementSpeedFlat = function () {\n        var totalAttribute = 0,\n        hasBoots = false,\n        hasEuls = false,\n        hasWindLace = false,\n        bootItems = ['boots','phase_boots','arcane_boots','travel_boots','power_treads','tranquil_boots','guardian_greaves'];\n        for (var i = 0; i < self.items().length; i++) {\n            var item = self.items()[i].item;\n            var isActive = self.activeItems.indexOf(self.items()[i]) >= 0 ? true : false;\n            if (!self.items()[i].enabled()) continue;\n            for (var j = 0; j < itemData['item_' + item].attributes.length; j++) {\n                var attribute = itemData['item_' + item].attributes[j];\n                switch(attribute.name) {\n                    case 'bonus_movement_speed':\n                        if (!hasBoots && bootItems.indexOf(item) >= 0) {\n                            if (item != 'tranquil_boots' || (item == 'tranquil_boots' && !isActive)) {\n                                totalAttribute += parseInt(attribute.value[0]);\n                                hasBoots = true;\n                            }\n                        }\n                        //else if (!hasEuls && item == 'cyclone') {\n                        else if (item == 'cyclone') {\n                            totalAttribute += parseInt(attribute.value[0]);\n                            hasEuls = true;\n                        }\n                    break;\n                    case 'broken_movement_speed':\n                        if (!hasBoots && bootItems.indexOf(item) >= 0) {\n                            if (item == 'tranquil_boots' && isActive) {\n                                totalAttribute += parseInt(attribute.value[0]);\n                                hasBoots = true;\n                            }\n                        }\n                    break;\n                    case 'bonus_movement':\n                        if (!hasBoots && bootItems.indexOf(item) >= 0) {\n                            totalAttribute += parseInt(attribute.value[0]);\n                            hasBoots = true;\n                        }\n                    break;\n                    case 'movement_speed':\n                        if (!hasWindLace && item == 'wind_lace') {\n                            totalAttribute += parseInt(attribute.value[0]);\n                            hasWindLace = true;\n                        }\n                    break;\n                }\n            }\n        }\n        return totalAttribute;\n    };\n    self.getMovementSpeedPercent = function (e) {\n        var totalAttribute = 0,\n            excludeList = e || [],\n            hasYasha = false,\n            hasDrums = false,\n            hasDrumsActive = false,\n            hasPhaseActive = false,\n            hasShadowBladeActive = false,\n            hasButterflyActive = false,\n            hasMoMActive = false,\n            yashaItems = ['manta','yasha','sange_and_yasha'];\n        for (var i = 0; i < self.items().length; i++) {\n            var item = self.items()[i].item;\n            var isActive = self.activeItems.indexOf(self.items()[i]) >= 0 ? true : false;\n            if (!self.items()[i].enabled()) continue;\n            for (var j = 0; j < itemData['item_' + item].attributes.length; j++) {\n                var attribute = itemData['item_' + item].attributes[j];\n                if (excludeList.indexOf(attribute.name) > -1) continue;\n                switch(attribute.name) {\n                    case 'movement_speed_percent_bonus':\n                        if (!hasYasha && yashaItems.indexOf(item) >= 0) {\n                            totalAttribute += parseInt(attribute.value[0]);\n                            hasYasha = true;\n                        }\n                    break;\n                    case 'bonus_aura_movement_speed_pct':\n                        if (!hasDrums && item == 'ancient_janggo') {\n                            totalAttribute += parseInt(attribute.value[0]);\n                            hasDrums = true;\n                            excludeList.push(attribute.name);\n                        }\n                    break;\n                    case 'phase_movement_speed':\n                        if (isActive && !hasPhaseActive) {\n                            totalAttribute += parseInt(attribute.value[0]);\n                            hasPhaseActive = true;\n                        }\n                    break;\n                    case 'bonus_movement_speed_pct':\n                        if (isActive && !hasDrumsActive && item == 'ancient_janggo') {\n                            totalAttribute += parseInt(attribute.value[0]);\n                            hasDrumsActive = true;\n                            excludeList.push(attribute.name);\n                        }\n                    break;\n                    case 'windwalk_movement_speed':\n                        if (isActive && !hasShadowBladeActive && (item == 'invis_sword' || item == 'silver_edge')) {\n                            totalAttribute += parseInt(attribute.value[0]);\n                            hasShadowBladeActive = true;\n                        }\n                    break;\n                    case 'berserk_bonus_movement_speed':\n                        if (isActive && !hasMoMActive && item == 'mask_of_madness') {\n                            totalAttribute += parseInt(attribute.value[0]);\n                            hasMoMActive = true;\n                        }\n                    break;\n                    case 'bonus_movement_speed': //manta\n                        if (!hasYasha && item == 'manta') {\n                            totalAttribute += parseInt(attribute.value[0]);\n                            hasYasha = true;\n                        }\n                        else if (item == 'smoke_of_deceit' && isActive) {\n                            totalAttribute += parseInt(attribute.value[0]);\n                        }\n                    break;\n                    case 'bonus_move_speed':\n                        if (isActive && !hasButterflyActive && item == 'butterfly') {\n                            totalAttribute += parseInt(attribute.value[0]);\n                            hasButterflyActive = true;\n                        }\n                    break;\n                }\n            }\n        }\n        return {value: totalAttribute/100, excludeList: excludeList};\n    };\n    \n    self.getMovementSpeedPercentReduction = function (e) {\n        var totalAttribute = 0,\n            excludeList = e || [];\n        for (var i = 0; i < self.items().length; i++) {\n            var item = self.items()[i].item;\n            var isActive = self.activeItems.indexOf(self.items()[i]) >= 0 ? true : false;\n            if (!self.items()[i].enabled()) continue;\n            for (var j = 0; j < itemData['item_' + item].attributes.length; j++) {\n                var attribute = itemData['item_' + item].attributes[j];\n                if (excludeList.indexOf(attribute.name) > -1) continue;\n                switch(attribute.name) {\n                    case 'movespeed':\n                        if (item == 'dust' && isActive) {\n                            totalAttribute += parseInt(attribute.value[0]);\n                        }\n                    case 'blast_movement_speed':\n                        if (item == 'shivas_guard' && isActive) {\n                            totalAttribute += parseInt(attribute.value[0]);\n                            excludeList.push(attribute.name);\n                        }\n                    case 'cold_movement_speed':\n                        if (item == 'skadi') {\n                            totalAttribute += parseInt(attribute.value[0]);\n                        }\n                    break;\n                    case 'maim_movement_speed':\n                        if (self.items()[i].debuff && self.items()[i].debuff == 'maim') {\n                            totalAttribute += parseInt(attribute.value[0]);\n                            excludeList.push(attribute.name);\n                        }\n                    break;\n                }\n            }\n        }\n        return {value: totalAttribute/100, excludeList: excludeList};\n    };\n    \n    self.getBonusDamage = function () {\n        var totalAttribute = 0;\n        var sources = {};\n        for (var i = 0; i < self.items().length; i++) {\n            var item = self.items()[i].item;\n            var isActive = self.activeItems.indexOf(self.items()[i]) >= 0 ? true : false;\n            if (!self.items()[i].enabled()) continue;\n            for (var j = 0; j < itemData['item_' + item].attributes.length; j++) {\n                var attribute = itemData['item_' + item].attributes[j];\n                switch(attribute.name) {\n                    case 'bonus_damage':\n                        totalAttribute += parseInt(attribute.value[0]);\n                        if (sources[item] == undefined) {\n                            sources[item] = {\n                                'damage': parseInt(attribute.value[0]),\n                                'damageType': 'physical',\n                                'count':1,\n                                'displayname': itemData['item_' + item].displayname\n                            }                            \n                        }\n                        else {\n                            sources[item].count += 1;\n                        }\n                    break;\n                    case 'unholy_bonus_damage':\n                        if (isActive) {\n                            totalAttribute += parseInt(attribute.value[0]);\n                            if (sources[item + '_active'] == undefined) {\n                                sources[item + '_active'] = {\n                                    'damage': parseInt(attribute.value[0]),\n                                    'damageType': 'physical',\n                                    'count':1,\n                                    'displayname': itemData['item_' + item].displayname + ' Unholy Strength'\n                                }                            \n                            }\n                            else {\n                                sources[item].count += 1;\n                            }\n                        }\n                    break;\n                }\n            }\n        }\n        return { sources: sources, total: totalAttribute };\n    };\n    self.getBonusDamagePercent = function (s) {\n        s = s || {sources:{},total:0};\n        var totalAttribute = s.total || 0;\n        var sources = s.sources || {};\n        for (var i = 0; i < self.items().length; i++) {\n            var item = self.items()[i].item;\n            var isActive = self.activeItems.indexOf(self.items()[i]) >= 0 ? true : false;\n            if (!self.items()[i].enabled()) continue;\n            for (var j = 0; j < itemData['item_' + item].attributes.length; j++) {\n                var attribute = itemData['item_' + item].attributes[j];\n                switch(attribute.name) {\n                    case 'damage_aura':\n                        if (sources[item] == undefined) {\n                            totalAttribute += parseInt(attribute.value[0]) / 100;\n                            sources[item] = {\n                                'damage': parseInt(attribute.value[0]) / 100,\n                                'damageType': 'physical',\n                                'count':1,\n                                'displayname': itemData['item_' + item].displayname\n                            }\n                        }\n                        // else {\n                            // sources[item].count += 1;\n                        // }\n                    break;\n                }\n            }\n        }\n        return { sources: sources, total: totalAttribute };\n    };\n    self.getAttackSpeed = function (e) {\n        var totalAttribute = 0,\n            hasPowerTreads = false,\n            excludeList = e || [];\n        for (var i = 0; i < self.items().length; i++) {\n            var item = self.items()[i].item;\n            var isActive = self.activeItems.indexOf(self.items()[i]) >= 0 ? true : false;\n            if (!self.items()[i].enabled()) continue;\n            for (var j = 0; j < itemData['item_' + item].attributes.length; j++) {\n                var attribute = itemData['item_' + item].attributes[j];\n                if (excludeList.indexOf(attribute.name) > -1) continue;\n                switch(attribute.name) {\n                    case 'bonus_attack_speed':\n                        if (item == 'power_treads') {\n                            if (!hasPowerTreads) {\n                                totalAttribute += parseInt(attribute.value[0]);\n                                hasPowerTreads = true;\n                            }\n                        }\n                        else if (item == 'moon_shard') {\n                            if (!isActive) {\n                                totalAttribute += parseInt(attribute.value[0]);\n                            }\n                        }\n                        else if (item == 'hurricane_pike') {\n                            if (isActive) {\n                                totalAttribute += parseInt(attribute.value[0]);\n                            }\n                        }\n                        else {\n                            totalAttribute += parseInt(attribute.value[0]);\n                        }\n                    break;\n                    case 'consumed_bonus':\n                        if (item == 'moon_shard' && isActive) {\n                            totalAttribute += parseInt(attribute.value[0]);\n                        }\n                    break;\n                    break;\n                    case 'bonus_speed':\n                        totalAttribute += parseInt(attribute.value[0]);\n                    break;\n                    case 'aura_attack_speed':\n                        if (item != 'shivas_guard') { totalAttribute += parseInt(attribute.value[0]); };\n                    break;\n                    // ancient_janggo\n                    case 'bonus_aura_attack_speed_pct':\n                        totalAttribute += parseInt(attribute.value[0]);\n                        excludeList.push(attribute.name);\n                    break;\n                    // ancient_janggo\n                    case 'bonus_attack_speed_pct':\n                        if (isActive) {\n                            totalAttribute += parseInt(attribute.value[0]);\n                            excludeList.push(attribute.name);\n                        }\n                    break;\n                    case 'unholy_bonus_attack_speed':\n                        if (isActive) { totalAttribute += parseInt(attribute.value[0]); };\n                    break;\n                    case 'berserk_bonus_attack_speed':\n                        if (isActive) { totalAttribute += parseInt(attribute.value[0]); };\n                    break;\n                }\n            }\n        }\n        return {value: totalAttribute, excludeList: excludeList};\n    };\n    self.getAttackSpeedReduction = function (e) {\n        var totalAttribute = 0,\n            excludeList = e || [];\n        for (var i = 0; i < self.items().length; i++) {\n            var item = self.items()[i].item;\n            var isActive = self.activeItems.indexOf(self.items()[i]) >= 0 ? true : false;\n            if (!self.items()[i].enabled()) continue;\n            for (var j = 0; j < itemData['item_' + item].attributes.length; j++) {\n                var attribute = itemData['item_' + item].attributes[j];\n                if (excludeList.indexOf(attribute.name) > -1) continue;\n                switch(attribute.name) {\n                    case 'aura_attack_speed':\n                        if (item == 'shivas_guard') {\n                            totalAttribute += parseInt(attribute.value[0]);\n                            excludeList.push(attribute.name);\n                        }\n                    break;\n                    case 'cold_attack_speed':\n                        if (item == 'skadi') {\n                            totalAttribute += parseInt(attribute.value[0]);\n                            excludeList.push(attribute.name);\n                        }\n                    break;\n                    case 'maim_attack_speed':\n                        if (self.items()[i].debuff && self.items()[i].debuff == 'maim') {\n                            totalAttribute += parseInt(attribute.value[0]);\n                            excludeList.push(attribute.name);\n                        }\n                    break;\n                }\n            }\n        }\n        return {value: totalAttribute, excludeList: excludeList};\n    };\n    self.getLifesteal = function () {\n        var totalAttribute = 0;\n        for (var i = 0; i < self.items().length; i++) {\n            var item = self.items()[i].item;\n            var isActive = self.activeItems.indexOf(self.items()[i]) >= 0 ? true : false;\n            if (!self.items()[i].enabled()) continue;\n            for (var j = 0; j < itemData['item_' + item].attributes.length; j++) {\n                var attribute = itemData['item_' + item].attributes[j];\n                switch(attribute.name) {\n                    case 'lifesteal_percent':\n                        if (item == 'satanic') {\n                            if (!isActive) { return parseInt(attribute.value[0]); };\n                        }\n                        else {\n                            return parseInt(attribute.value[0]);\n                        }\n                    break;\n                    case 'unholy_lifesteal_percent':\n                        if (isActive) { return parseInt(attribute.value[0]); };\n                    break;\n                }\n            }\n        }\n        return totalAttribute;\n    };\n    self.getLifestealAura = function (e) {\n        var totalAttribute = 0,\n            excludeList = e || [];\n        for (var i = 0; i < self.items().length; i++) {\n            var item = self.items()[i].item;\n            var isActive = self.activeItems.indexOf(self.items()[i]) >= 0 ? true : false;\n            if (!self.items()[i].enabled()) continue;\n            for (var j = 0; j < itemData['item_' + item].attributes.length; j++) {\n                var attribute = itemData['item_' + item].attributes[j];\n                if (excludeList.indexOf(attribute.name) > -1) continue;\n                switch(attribute.name) {\n                    case 'vampiric_aura':\n                        totalAttribute += parseInt(attribute.value[0]);\n                        excludeList.push(attribute.name);\n                    break;\n                }\n            }\n        }\n        return {value: totalAttribute, excludeList: excludeList};\n    };\n    self.getMagicResist = function () {\n        var totalAttribute = 1;\n        for (var i = 0; i < self.items().length; i++) {\n            var item = self.items()[i].item;\n            var isActive = self.activeItems.indexOf(self.items()[i]) >= 0 ? true : false;\n            if (!self.items()[i].enabled()) continue;\n            for (var j = 0; j < itemData['item_' + item].attributes.length; j++) {\n                var attribute = itemData['item_' + item].attributes[j];\n                switch(attribute.name) {\n                    case 'bonus_magical_armor':\n                        totalAttribute *= (1 - parseInt(attribute.value[0]) / 100);\n                    break;\n                    case 'bonus_spell_resist':\n                        totalAttribute *= (1 - parseInt(attribute.value[0]) / 100);\n                    break;\n                    case 'magic_resistance':\n                        totalAttribute *= (1 - parseInt(attribute.value[0]) / 100);\n                    break;\n                }\n            }\n        }\n        return totalAttribute;\n    };\n    self.getMagicResistReductionSelf = function () {\n        var totalAttribute = 1;\n        for (var i = 0; i < self.items().length; i++) {\n            var item = self.items()[i].item;\n            var isActive = self.activeItems.indexOf(self.items()[i]) >= 0 ? true : false;\n            if (!self.items()[i].enabled()) continue;\n            if (isActive) {\n                for (var j = 0; j < itemData['item_' + item].attributes.length; j++) {\n                    var attribute = itemData['item_' + item].attributes[j];\n                    switch(attribute.name) {\n                        case 'extra_spell_damage_percent':\n                        case 'ethereal_damage_bonus':\n                            return (1 - parseInt(attribute.value[0]) / 100);\n                        break;\n                    }\n                }\n            }\n        }\n        return totalAttribute;\n    };   \n    self.getMagicResistReduction = function () {\n        var totalAttribute = 1;\n        for (var i = 0; i < self.items().length; i++) {\n            var item = self.items()[i].item;\n            var isActive = self.activeItems.indexOf(self.items()[i]) >= 0 ? true : false;\n            if (!self.items()[i].enabled()) continue;\n            if (isActive) {\n                for (var j = 0; j < itemData['item_' + item].attributes.length; j++) {\n                    var attribute = itemData['item_' + item].attributes[j];\n                    switch(attribute.name) {\n                        case 'ethereal_damage_bonus':\n                            if (!self.isEthereal()) totalAttribute *= (1 - parseInt(attribute.value[0]) / 100);\n                        case 'resist_debuff':\n                            totalAttribute *= (1 - parseInt(attribute.value[0]) / 100);\n                        break;\n                    }\n                }\n            }\n        }\n        return totalAttribute;\n    };        \n\n    self.getVisionRangeNight = ko.computed(function () {\n        var totalAttribute = 0;\n        for (var i = 0; i < self.items().length; i++) {\n            var item = self.items()[i].item;\n            var isActive = self.activeItems.indexOf(self.items()[i]) >= 0 ? true : false;\n            if (!self.items()[i].enabled()) continue;\n            for (var j = 0; j < itemData['item_' + item].attributes.length; j++) {\n                var attribute = itemData['item_' + item].attributes[j];\n                switch(attribute.name) {\n                    case 'bonus_night_vision':\n                        if (item != 'moon_shard' || !isActive) {\n                            totalAttribute += parseInt(attribute.value[0]);\n                        }\n                    break;\n                }\n            }\n        }\n        return totalAttribute;\n    });\n    \n    self.getAttackRange = function (attacktype, aList) {\n        var totalAttribute = 0,\n            attributeList = aList || [];\n        for (var i = 0; i < self.items().length; i++) {\n            var item = self.items()[i].item;\n            var isActive = self.activeItems.indexOf(self.items()[i]) >= 0 ? true : false;\n            if (!self.items()[i].enabled()) continue;\n            for (var j = 0;j < itemData['item_' + item].attributes.length; j++) {\n                var attribute = itemData['item_' + item].attributes[j];\n                if (attributeList.find(function (a) { return attribute.name == a.name; })) continue;\n                switch(attribute.name) {\n                    // dragon_lance\n                    case 'base_attack_range':\n                        if (attacktype == 'DOTA_UNIT_CAP_RANGED_ATTACK') attributeList.push({'name':attribute.name, 'value': parseInt(attribute.value[0])});\n                    break;\n                }\n            }\n        }\n        \n        totalAttribute = attributeList.reduce(function (memo, attribute) {\n            return memo += attribute.value;\n        }, 0);\n        return {value: totalAttribute, attributes: attributeList};\n    };\n    \n    self.getMissChance = function (e) {\n        var totalAttribute = 1,\n            excludeList = e || [];\n        for (var i = 0; i < self.items().length; i++) {\n            var item = self.items()[i].item;\n            var isActive = self.activeItems.indexOf(self.items()[i]) >= 0 ? true : false;\n            if (!self.items()[i].enabled()) continue;\n            for (var j = 0; j < itemData['item_' + item].attributes.length; j++) {\n                var attribute = itemData['item_' + item].attributes[j];\n                if (excludeList.indexOf(attribute.name) > -1) continue;\n                switch(attribute.name) {\n                    case 'miss_chance':\n                        if (item === 'solar_crest' && isActive) {\n                            totalAttribute *= (1 - parseInt(attribute.value[0]) / 100);\n                            excludeList.push(attribute.name);\n                        }\n                    break;\n                    case 'blind_pct':\n                        totalAttribute *= (1 - parseInt(attribute.value[0]) / 100);\n                        excludeList.push(attribute.name);\n                    break;\n                }\n            }\n        }\n        return {value: totalAttribute, excludeList: excludeList};\n    };\n    \n    self.getBaseDamageReductionPct = function () {\n        var totalAttribute = 1;\n        for (var i = 0; i < self.items().length; i++) {\n            var item = self.items()[i].item;\n            var isActive = self.activeItems.indexOf(self.items()[i]) >= 0 ? true : false;\n            if (!self.items()[i].enabled()) continue;\n            for (var j = 0; j < itemData['item_' + item].attributes.length; j++) {\n                var attribute = itemData['item_' + item].attributes[j];\n                switch(attribute.name) {\n                    case 'backstab_reduction':\n                        if (self.items()[i].debuff && self.items()[i].debuff == 'shadow_walk') {\n                            totalAttribute *= (1 + parseInt(attribute.value[0]) / 100);\n                        }\n                    break;\n                }\n            }\n        }\n        return totalAttribute;\n    };    \n    self.getBonusDamageReductionPct = function () {\n        var totalAttribute = 1;\n        for (var i = 0; i < self.items().length; i++) {\n            var item = self.items()[i].item;\n            var isActive = self.activeItems.indexOf(self.items()[i]) >= 0 ? true : false;\n            if (!self.items()[i].enabled()) continue;\n            for (var j = 0; j < itemData['item_' + item].attributes.length; j++) {\n                var attribute = itemData['item_' + item].attributes[j];\n                switch(attribute.name) {\n                    case 'backstab_reduction':\n                        if (self.items()[i].debuff && self.items()[i].debuff == 'shadow_walk') {\n                            totalAttribute *= (1 + parseInt(attribute.value[0]) / 100);\n                        }\n                    break;\n                }\n            }\n        }\n        return totalAttribute;\n    };\n    \n    self.itemOptions = ko.observableArray(itemOptionsArray.items);\n    \n    self.itemBuffOptions = ko.observableArray(itemBuffOptions.items);\n    self.selectedItemBuff = ko.observable('assault');\n\n    self.itemDebuffOptions = ko.observableArray(itemDebuffOptions.items);\n    self.selectedItemDebuff = ko.observable('assault');\n    \n    return self;\n};\nInventoryViewModel.prototype = Object.create(BasicInventoryViewModel.prototype);\nInventoryViewModel.prototype.constructor = InventoryViewModel;\n\nmodule.exports = InventoryViewModel;","var ItemInput = function (itemData, value, name, debuff) {\n    if (itemData['item_' + value].ItemAliases instanceof Array) {\n        var itemAlias = itemData['item_' + value].ItemAliases.join(' ');\n    }\n    else {\n        var itemAlias = itemData['item_' + value].ItemAliases;\n    }\n    this.value = ko.observable(value);\n    this.debuff = ko.observable(debuff);\n    if (this.debuff()) {\n        this.value = ko.observable(value + '|' + debuff.id);\n        this.name = ko.observable(name + ' (' + debuff.name + ')');\n        this.displayname = ko.observable(name + ' (' + debuff.name + ') <span style=\"display:none\">' + ';' + itemAlias + '</span>');\n    }\n    else {\n        this.value = ko.observable(value);\n        this.name = ko.observable(name);\n        this.displayname = ko.observable(name + ' <span style=\"display:none\">' + ';' + itemAlias + '</span>');\n    }\n};\n\nmodule.exports = ItemInput;","var ItemInput = require(\"./ItemInput\");\nvar itemBuffs = ['assault', 'ancient_janggo', 'headdress', 'mekansm', 'pipe', 'ring_of_aquila', 'vladmir', 'ring_of_basilius', 'buckler', 'solar_crest'];\nvar itemBuffOptions = {};\n\nvar init = function (itemData) {\n    itemBuffOptions.items = itemBuffs.map(function(item) {\n        return new ItemInput(itemData, item, itemData['item_' + item].displayname);\n    });\n    return itemBuffOptions.items;\n}\n\nitemBuffOptions.init = init;\n\nmodule.exports = itemBuffOptions;","var ItemInput = require(\"./ItemInput\");\nvar itemDebuffs = [\n    {item: 'assault', debuff: null},\n    {item: 'shivas_guard', debuff: null},\n    {item: 'desolator', debuff: null},\n    {item: 'medallion_of_courage', debuff: null},\n    {item: 'radiance', debuff: null},\n    {item: 'sheepstick', debuff: null},\n    {item: 'veil_of_discord', debuff: null},\n    {item: 'solar_crest', debuff: null},\n    {item: 'silver_edge', debuff: {id: 'shadow_walk', name: 'Shadow Walk'}},\n    {item: 'silver_edge', debuff: {id: 'maim', name: 'Lesser Maim'}}\n]\nvar itemDebuffOptions = {};\n\nvar init = function (itemData) {\n    itemDebuffOptions.items = itemDebuffs.map(function(item) {\n        return new ItemInput(itemData, item.item, itemData['item_' + item.item].displayname, item.debuff);\n    });\n    return itemDebuffOptions.items;\n}\n\nitemDebuffOptions.init = init;\n\nmodule.exports = itemDebuffOptions;","var validItems = require(\"./validItems\");\nvar ItemInput = require(\"./ItemInput\");\n\nvar itemOptionsArray = {};\n\nvar init = function (itemData) {\n    itemOptionsArray.items = [];\n    for (var i = 0; i < validItems.length; i++) {\n        itemOptionsArray.items.push(new ItemInput(itemData, validItems[i], itemData['item_' + validItems[i]].displayname));\n    }\n    return itemOptionsArray.items;\n}\n\nitemOptionsArray.init = init;\n\nmodule.exports = itemOptionsArray;","module.exports = ['solar_crest', 'heart','smoke_of_deceit','dust','ghost','tranquil_boots','phase_boots','power_treads','buckler','medallion_of_courage','ancient_janggo','mekansm','pipe','veil_of_discord','rod_of_atos','orchid','sheepstick','armlet','invis_sword','ethereal_blade','shivas_guard','manta','mask_of_madness','diffusal_blade','mjollnir','satanic','ring_of_basilius','ring_of_aquila', 'butterfly', 'moon_shard', 'silver_edge','bloodthorn','hurricane_pike'];","module.exports = ['necronomicon','dagon','diffusal_blade','travel_boots'];","module.exports = ['clarity','flask','dust','ward_observer','ward_sentry','tango','tpscroll','smoke_of_deceit'];","module.exports = [\"abyssal_blade\",\"ultimate_scepter\",\"courier\",\"arcane_boots\",\"armlet\",\"assault\",\"boots_of_elves\",\"bfury\",\"belt_of_strength\",\"black_king_bar\",\"blade_mail\",\"blade_of_alacrity\",\"blades_of_attack\",\"blink\",\"bloodstone\",\"boots\",\"travel_boots\",\"bottle\",\"bracer\",\"broadsword\",\"buckler\",\"butterfly\",\"chainmail\",\"circlet\",\"clarity\",\"claymore\",\"cloak\",\"lesser_crit\",\"greater_crit\",\"dagon\",\"demon_edge\",\"desolator\",\"diffusal_blade\",\"rapier\",\"ancient_janggo\",\"dust\",\"eagle\",\"energy_booster\",\"ethereal_blade\",\"cyclone\",\"skadi\",\"flying_courier\",\"force_staff\",\"gauntlets\",\"gem\",\"ghost\",\"gloves\",\"hand_of_midas\",\"headdress\",\"flask\",\"heart\",\"heavens_halberd\",\"helm_of_iron_will\",\"helm_of_the_dominator\",\"hood_of_defiance\",\"hyperstone\",\"branches\",\"javelin\",\"sphere\",\"maelstrom\",\"magic_stick\",\"magic_wand\",\"manta\",\"mantle\",\"mask_of_madness\",\"medallion_of_courage\",\"mekansm\",\"mithril_hammer\",\"mjollnir\",\"monkey_king_bar\",\"lifesteal\",\"mystic_staff\",\"necronomicon\",\"null_talisman\",\"oblivion_staff\",\"ward_observer\",\"ogre_axe\",\"orb_of_venom\",\"orchid\",\"pers\",\"phase_boots\",\"pipe\",\"platemail\",\"point_booster\",\"poor_mans_shield\",\"power_treads\",\"quarterstaff\",\"quelling_blade\",\"radiance\",\"reaver\",\"refresher\",\"ring_of_aquila\",\"ring_of_basilius\",\"ring_of_health\",\"ring_of_protection\",\"ring_of_regen\",\"robe\",\"rod_of_atos\",\"relic\",\"sobi_mask\",\"sange\",\"sange_and_yasha\",\"satanic\",\"sheepstick\",\"ward_sentry\",\"shadow_amulet\",\"invis_sword\",\"shivas_guard\",\"basher\",\"slippers\",\"smoke_of_deceit\",\"soul_booster\",\"soul_ring\",\"staff_of_wizardry\",\"stout_shield\",\"talisman_of_evasion\",\"tango\",\"tpscroll\",\"tranquil_boots\",\"ultimate_orb\",\"urn_of_shadows\",\"vanguard\",\"veil_of_discord\",\"vitality_booster\",\"vladmir\",\"void_stone\",\"wraith_band\",\"yasha\",\"crimson_guard\",\"enchanted_mango\",\"lotus_orb\",\"glimmer_cape\",\"guardian_greaves\",\"moon_shard\",\"silver_edge\",\"solar_crest\",\"octarine_core\",\"aether_lens\",\"faerie_fire\",\"iron_talon\",\"dragon_lance\",\"echo_sabre\",\"infused_raindrop\",\"blight_stone\",\"wind_lace\",\"tome_of_knowledge\",\"bloodthorn\",\"hurricane_pike\"];","'use strict';\n\nvar core = {};\ncore.InventoryViewModel = require(\"./inventory/InventoryViewModel\");\ncore.AbilityModel = require(\"./AbilityModel\");\ncore.BuffViewModel = require(\"./BuffViewModel\");\ncore.HeroModel = require(\"./hero/HeroModel\");\ncore.CloneModel = require(\"./hero/CloneModel\");\ncore.UnitModel = require(\"./hero/UnitModel\");\ncore.IllusionModel = require(\"./hero/IllusionModel\");\ncore.Data = require(\"./data/main\");\ncore.Util = require(\"./util/main\");\n\ncore.init = function (HERODATA_PATH, ITEMDATA_PATH, UNITDATA_PATH, callback) {\n    core.Data.init(HERODATA_PATH, ITEMDATA_PATH, UNITDATA_PATH, function () {\n        core.HeroOptions = require(\"./hero/heroOptionsArray\").init(core.Data.heroData);\n        core.BuffOptions = require(\"./buffs/buffOptionsArray\").init(core.Data.heroData, core.Data.unitData);\n        core.DebuffOptions = require(\"./buffs/debuffOptionsArray\").init(core.Data.heroData, core.Data.unitData);\n        core.ItemOptions = require(\"./inventory/itemOptionsArray\").init(core.Data.itemData);\n        core.ItemBuffOptions = require(\"./inventory/itemBuffOptions\").init(core.Data.itemData);\n        core.ItemDebuffOptions = require(\"./inventory/itemDebuffOptions\").init(core.Data.itemData);\n        callback();\n    });\n}\n\nmodule.exports = core;","var extend = function (out) {\n    out = out || {};\n\n    for (var i = 1; i < arguments.length; i++) {\n        var obj = arguments[i];\n\n        if (!obj)\n            continue;\n\n        for (var key in obj) {\n            if (obj.hasOwnProperty(key)) {\n                if (typeof obj[key] === 'object')\n                    out[key] = extend(out[key], obj[key]);\n                else\n                    out[key] = obj[key];\n            }\n        }\n    }\n\n    return out;\n};\n\nmodule.exports = extend;","var findWhere = function (arr, obj) {\n    arrLoop: for (var i = 0; i < arr.length; i++) {\n        objLoop: for (var key in obj) {\n            if (arr[i][key] != obj[key]) {\n                continue arrLoop;\n            }\n        }\n        return arr[i];\n    }\n}\n\nmodule.exports = findWhere;","\"use strict\";\n\nvar getJSON = function (url, successCallback, errorCallback) {\n    var request = new XMLHttpRequest();\n    request.open('GET', url, true);\n\n    request.onload = function() {\n        if (request.status >= 200 && request.status < 400) {\n            // Success!\n            var data = JSON.parse(request.responseText);\n            successCallback(data);\n        } else {\n            // We reached our target server, but it returned an error\n            errorCallback();\n        }\n    };\n\n    request.onerror = function() {\n        // There was a connection error of some sort\n        errorCallback();\n    };\n\n    request.send();\n}\n\nmodule.exports = getJSON;","var isEmpty = function (obj) {\n    return Object.keys(obj).length === 0 && obj.constructor === Object;\n}\n\nmodule.exports = isEmpty;","'use strict';\n\nvar util = {};\nutil.extend = require(\"./extend\");\nutil.findWhere = require(\"./findWhere\");\nutil.getJSON = require(\"./getJSON\");\nutil.union = require(\"./union\");\nutil.uniqueId = require(\"./uniqueId\");\nutil.uniques = require(\"./uniques\");\n\nmodule.exports = util;","\"use strict\";\nvar uniques = require(\"./uniques\");\n\nvar union = function (a, b) {\n    var arr = a.concat(b);\n    return uniques(arr);\n}\n\nmodule.exports = union;","\"use strict\";\n\nvar idCounter = 0;\nvar uniqueId = function (prefix) {\n    var id = ++idCounter + '';\n    return prefix ? prefix + id : id;\n};\n\nmodule.exports = uniqueId;","\"use strict\";\nvar uniques = function (arr) {\n    var a = [];\n    for (var i=0, l=arr.length; i<l; i++)\n        if (a.indexOf(arr[i]) === -1 && arr[i] !== '')\n            a.push(arr[i]);\n    return a;\n}\n\nmodule.exports = uniques;","(function (factory) {\n\t// Module systems magic dance.\n\n\tif (typeof require === \"function\" && typeof exports === \"object\" && typeof module === \"object\") {\n\t\t// CommonJS or Node: hard-coded dependency on \"knockout\"\n\t\tfactory((typeof window !== \"undefined\" ? window['ko'] : typeof global !== \"undefined\" ? global['ko'] : null), exports);\n\t} else if (typeof define === \"function\" && define[\"amd\"]) {\n\t\t// AMD anonymous module with hard-coded dependency on \"knockout\"\n\t\tdefine([\"knockout\", \"exports\"], factory);\n\t} else {\n\t\t// <script> tag: use the global `ko` object, attaching a `mapping` property\n\t\tfactory(ko, ko.mapping = {});\n\t}\n}(function (ko, exports) {\n\tvar DEBUG=true;\n\tvar mappingProperty = \"__ko_mapping__\";\n\tvar realKoDependentObservable = ko.dependentObservable;\n\tvar mappingNesting = 0;\n\tvar dependentObservables;\n\tvar visitedObjects;\n\tvar recognizedRootProperties = [\"create\", \"update\", \"key\", \"arrayChanged\"];\n\tvar emptyReturn = {};\n\n\tvar _defaultOptions = {\n\t\tinclude: [\"_destroy\"],\n\t\tignore: [],\n\t\tcopy: [],\n\t\tobserve: []\n\t};\n\tvar defaultOptions = _defaultOptions;\n\n\t// Author: KennyTM @ StackOverflow\n\tfunction unionArrays (x, y) {\n\t\tvar obj = {};\n\t\tfor (var i = x.length - 1; i >= 0; -- i) obj[x[i]] = x[i];\n\t\tfor (var i = y.length - 1; i >= 0; -- i) obj[y[i]] = y[i];\n\t\tvar res = [];\n\n\t\tfor (var k in obj) {\n\t\t\tres.push(obj[k]);\n\t\t};\n\n\t\treturn res;\n\t}\n\n\tfunction extendObject(destination, source) {\n\t\tvar destType;\n\n\t\tfor (var key in source) {\n\t\t\tif (source.hasOwnProperty(key) && source[key]) {\n\t\t\t\tdestType = exports.getType(destination[key]);\n\t\t\t\tif (key && destination[key] && destType !== \"array\" && destType !== \"string\") {\n\t\t\t\t\textendObject(destination[key], source[key]);\n\t\t\t\t} else {\n\t\t\t\t\tvar bothArrays = exports.getType(destination[key]) === \"array\" && exports.getType(source[key]) === \"array\";\n\t\t\t\t\tif (bothArrays) {\n\t\t\t\t\t\tdestination[key] = unionArrays(destination[key], source[key]);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tdestination[key] = source[key];\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tfunction merge(obj1, obj2) {\n\t\tvar merged = {};\n\t\textendObject(merged, obj1);\n\t\textendObject(merged, obj2);\n\n\t\treturn merged;\n\t}\n\n\texports.isMapped = function (viewModel) {\n\t\tvar unwrapped = ko.utils.unwrapObservable(viewModel);\n\t\treturn unwrapped && unwrapped[mappingProperty];\n\t}\n\n\texports.fromJS = function (jsObject /*, inputOptions, target*/ ) {\n\t\tif (arguments.length == 0) throw new Error(\"When calling ko.fromJS, pass the object you want to convert.\");\n\n\t\ttry {\n\t\t\tif (!mappingNesting++) {\n\t\t\t\tdependentObservables = [];\n\t\t\t\tvisitedObjects = new objectLookup();\n\t\t\t}\n\n\t\t\tvar options;\n\t\t\tvar target;\n\n\t\t\tif (arguments.length == 2) {\n\t\t\t\tif (arguments[1][mappingProperty]) {\n\t\t\t\t\ttarget = arguments[1];\n\t\t\t\t} else {\n\t\t\t\t\toptions = arguments[1];\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (arguments.length == 3) {\n\t\t\t\toptions = arguments[1];\n\t\t\t\ttarget = arguments[2];\n\t\t\t}\n\n\t\t\tif (target) {\n\t\t\t\toptions = merge(options, target[mappingProperty]);\n\t\t\t}\n\t\t\toptions = fillOptions(options);\n\n\t\t\tvar result = updateViewModel(target, jsObject, options);\n\t\t\tif (target) {\n\t\t\t\tresult = target;\n\t\t\t}\n\n\t\t\t// Evaluate any dependent observables that were proxied.\n\t\t\t// Do this after the model's observables have been created\n\t\t\tif (!--mappingNesting) {\n\t\t\t\twhile (dependentObservables.length) {\n\t\t\t\t\tvar DO = dependentObservables.pop();\n\t\t\t\t\tif (DO) {\n\t\t\t\t\t\tDO();\n\t\t\t\t\t\t\n\t\t\t\t\t\t// Move this magic property to the underlying dependent observable\n\t\t\t\t\t\tDO.__DO[\"throttleEvaluation\"] = DO[\"throttleEvaluation\"];\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Save any new mapping options in the view model, so that updateFromJS can use them later.\n\t\t\tresult[mappingProperty] = merge(result[mappingProperty], options);\n\n\t\t\treturn result;\n\t\t} catch(e) {\n\t\t\tmappingNesting = 0;\n\t\t\tthrow e;\n\t\t}\n\t};\n\n\texports.fromJSON = function (jsonString /*, options, target*/ ) {\n\t\tvar parsed = ko.utils.parseJson(jsonString);\n\t\targuments[0] = parsed;\n\t\treturn exports.fromJS.apply(this, arguments);\n\t};\n\n\texports.updateFromJS = function (viewModel) {\n\t\tthrow new Error(\"ko.mapping.updateFromJS, use ko.mapping.fromJS instead. Please note that the order of parameters is different!\");\n\t};\n\n\texports.updateFromJSON = function (viewModel) {\n\t\tthrow new Error(\"ko.mapping.updateFromJSON, use ko.mapping.fromJSON instead. Please note that the order of parameters is different!\");\n\t};\n\n\texports.toJS = function (rootObject, options) {\n\t\tif (!defaultOptions) exports.resetDefaultOptions();\n\n\t\tif (arguments.length == 0) throw new Error(\"When calling ko.mapping.toJS, pass the object you want to convert.\");\n\t\tif (exports.getType(defaultOptions.ignore) !== \"array\") throw new Error(\"ko.mapping.defaultOptions().ignore should be an array.\");\n\t\tif (exports.getType(defaultOptions.include) !== \"array\") throw new Error(\"ko.mapping.defaultOptions().include should be an array.\");\n\t\tif (exports.getType(defaultOptions.copy) !== \"array\") throw new Error(\"ko.mapping.defaultOptions().copy should be an array.\");\n\n\t\t// Merge in the options used in fromJS\n\t\toptions = fillOptions(options, rootObject[mappingProperty]);\n\n\t\t// We just unwrap everything at every level in the object graph\n\t\treturn exports.visitModel(rootObject, function (x) {\n\t\t\treturn ko.utils.unwrapObservable(x)\n\t\t}, options);\n\t};\n\n\texports.toJSON = function (rootObject, options) {\n\t\tvar plainJavaScriptObject = exports.toJS(rootObject, options);\n\t\treturn ko.utils.stringifyJson(plainJavaScriptObject);\n\t};\n\n\texports.defaultOptions = function () {\n\t\tif (arguments.length > 0) {\n\t\t\tdefaultOptions = arguments[0];\n\t\t} else {\n\t\t\treturn defaultOptions;\n\t\t}\n\t};\n\n\texports.resetDefaultOptions = function () {\n\t\tdefaultOptions = {\n\t\t\tinclude: _defaultOptions.include.slice(0),\n\t\t\tignore: _defaultOptions.ignore.slice(0),\n\t\t\tcopy: _defaultOptions.copy.slice(0)\n\t\t};\n\t};\n\n\texports.getType = function(x) {\n\t\tif ((x) && (typeof (x) === \"object\")) {\n\t\t\tif (x.constructor === Date) return \"date\";\n\t\t\tif (x.constructor === Array) return \"array\";\n\t\t}\n\t\treturn typeof x;\n\t}\n\n\tfunction fillOptions(rawOptions, otherOptions) {\n\t\tvar options = merge({}, rawOptions);\n\n\t\t// Move recognized root-level properties into a root namespace\n\t\tfor (var i = recognizedRootProperties.length - 1; i >= 0; i--) {\n\t\t\tvar property = recognizedRootProperties[i];\n\t\t\t\n\t\t\t// Carry on, unless this property is present\n\t\t\tif (!options[property]) continue;\n\t\t\t\n\t\t\t// Move the property into the root namespace\n\t\t\tif (!(options[\"\"] instanceof Object)) options[\"\"] = {};\n\t\t\toptions[\"\"][property] = options[property];\n\t\t\tdelete options[property];\n\t\t}\n\n\t\tif (otherOptions) {\n\t\t\toptions.ignore = mergeArrays(otherOptions.ignore, options.ignore);\n\t\t\toptions.include = mergeArrays(otherOptions.include, options.include);\n\t\t\toptions.copy = mergeArrays(otherOptions.copy, options.copy);\n\t\t\toptions.observe = mergeArrays(otherOptions.observe, options.observe);\n\t\t}\n\t\toptions.ignore = mergeArrays(options.ignore, defaultOptions.ignore);\n\t\toptions.include = mergeArrays(options.include, defaultOptions.include);\n\t\toptions.copy = mergeArrays(options.copy, defaultOptions.copy);\n\t\toptions.observe = mergeArrays(options.observe, defaultOptions.observe);\n\n\t\toptions.mappedProperties = options.mappedProperties || {};\n\t\toptions.copiedProperties = options.copiedProperties || {};\n\t\treturn options;\n\t}\n\n\tfunction mergeArrays(a, b) {\n\t\tif (exports.getType(a) !== \"array\") {\n\t\t\tif (exports.getType(a) === \"undefined\") a = [];\n\t\t\telse a = [a];\n\t\t}\n\t\tif (exports.getType(b) !== \"array\") {\n\t\t\tif (exports.getType(b) === \"undefined\") b = [];\n\t\t\telse b = [b];\n\t\t}\n\n\t\treturn ko.utils.arrayGetDistinctValues(a.concat(b));\n\t}\n\n\t// When using a 'create' callback, we proxy the dependent observable so that it doesn't immediately evaluate on creation.\n\t// The reason is that the dependent observables in the user-specified callback may contain references to properties that have not been mapped yet.\n\tfunction withProxyDependentObservable(dependentObservables, callback) {\n\t\tvar localDO = ko.dependentObservable;\n\t\tko.dependentObservable = function (read, owner, options) {\n\t\t\toptions = options || {};\n\n\t\t\tif (read && typeof read == \"object\") { // mirrors condition in knockout implementation of DO's\n\t\t\t\toptions = read;\n\t\t\t}\n\n\t\t\tvar realDeferEvaluation = options.deferEvaluation;\n\n\t\t\tvar isRemoved = false;\n\n\t\t\t// We wrap the original dependent observable so that we can remove it from the 'dependentObservables' list we need to evaluate after mapping has\n\t\t\t// completed if the user already evaluated the DO themselves in the meantime.\n\t\t\tvar wrap = function (DO) {\n\t\t\t\t// Temporarily revert ko.dependentObservable, since it is used in ko.isWriteableObservable\n\t\t\t\tvar tmp = ko.dependentObservable;\n\t\t\t\tko.dependentObservable = realKoDependentObservable;\n\t\t\t\tvar isWriteable = ko.isWriteableObservable(DO);\n\t\t\t\tko.dependentObservable = tmp;\n\n\t\t\t\tvar wrapped = realKoDependentObservable({\n\t\t\t\t\tread: function () {\n\t\t\t\t\t\tif (!isRemoved) {\n\t\t\t\t\t\t\tko.utils.arrayRemoveItem(dependentObservables, DO);\n\t\t\t\t\t\t\tisRemoved = true;\n\t\t\t\t\t\t}\n\t\t\t\t\t\treturn DO.apply(DO, arguments);\n\t\t\t\t\t},\n\t\t\t\t\twrite: isWriteable && function (val) {\n\t\t\t\t\t\treturn DO(val);\n\t\t\t\t\t},\n\t\t\t\t\tdeferEvaluation: true\n\t\t\t\t});\n\t\t\t\tif (DEBUG) wrapped._wrapper = true;\n\t\t\t\twrapped.__DO = DO;\n\t\t\t\treturn wrapped;\n\t\t\t};\n\t\t\t\n\t\t\toptions.deferEvaluation = true; // will either set for just options, or both read/options.\n\t\t\tvar realDependentObservable = new realKoDependentObservable(read, owner, options);\n\n\t\t\tif (!realDeferEvaluation) {\n\t\t\t\trealDependentObservable = wrap(realDependentObservable);\n\t\t\t\tdependentObservables.push(realDependentObservable);\n\t\t\t}\n\n\t\t\treturn realDependentObservable;\n\t\t}\n\t\tko.dependentObservable.fn = realKoDependentObservable.fn;\n\t\tko.computed = ko.dependentObservable;\n\t\tvar result = callback();\n\t\tko.dependentObservable = localDO;\n\t\tko.computed = ko.dependentObservable;\n\t\treturn result;\n\t}\n\n\tfunction updateViewModel(mappedRootObject, rootObject, options, parentName, parent, parentPropertyName, mappedParent) {\n\t\tvar isArray = exports.getType(ko.utils.unwrapObservable(rootObject)) === \"array\";\n\n\t\tparentPropertyName = parentPropertyName || \"\";\n\n\t\t// If this object was already mapped previously, take the options from there and merge them with our existing ones.\n\t\tif (exports.isMapped(mappedRootObject)) {\n\t\t\tvar previousMapping = ko.utils.unwrapObservable(mappedRootObject)[mappingProperty];\n\t\t\toptions = merge(previousMapping, options);\n\t\t}\n\n\t\tvar callbackParams = {\n\t\t\tdata: rootObject,\n\t\t\tparent: mappedParent || parent\n\t\t};\n\n\t\tvar hasCreateCallback = function () {\n\t\t\treturn options[parentName] && options[parentName].create instanceof Function;\n\t\t};\n\n\t\tvar createCallback = function (data) {\n\t\t\treturn withProxyDependentObservable(dependentObservables, function () {\n\t\t\t\t\n\t\t\t\tif (ko.utils.unwrapObservable(parent) instanceof Array) {\n\t\t\t\t\treturn options[parentName].create({\n\t\t\t\t\t\tdata: data || callbackParams.data,\n\t\t\t\t\t\tparent: callbackParams.parent,\n\t\t\t\t\t\tskip: emptyReturn\n\t\t\t\t\t});\n\t\t\t\t} else {\n\t\t\t\t\treturn options[parentName].create({\n\t\t\t\t\t\tdata: data || callbackParams.data,\n\t\t\t\t\t\tparent: callbackParams.parent\n\t\t\t\t\t});\n\t\t\t\t}\t\t\t\t\n\t\t\t});\n\t\t};\n\n\t\tvar hasUpdateCallback = function () {\n\t\t\treturn options[parentName] && options[parentName].update instanceof Function;\n\t\t};\n\n\t\tvar updateCallback = function (obj, data) {\n\t\t\tvar params = {\n\t\t\t\tdata: data || callbackParams.data,\n\t\t\t\tparent: callbackParams.parent,\n\t\t\t\ttarget: ko.utils.unwrapObservable(obj)\n\t\t\t};\n\n\t\t\tif (ko.isWriteableObservable(obj)) {\n\t\t\t\tparams.observable = obj;\n\t\t\t}\n\n\t\t\treturn options[parentName].update(params);\n\t\t}\n\n\t\tvar alreadyMapped = visitedObjects.get(rootObject);\n\t\tif (alreadyMapped) {\n\t\t\treturn alreadyMapped;\n\t\t}\n\n\t\tparentName = parentName || \"\";\n\n\t\tif (!isArray) {\n\t\t\t// For atomic types, do a direct update on the observable\n\t\t\tif (!canHaveProperties(rootObject)) {\n\t\t\t\tswitch (exports.getType(rootObject)) {\n\t\t\t\tcase \"function\":\n\t\t\t\t\tif (hasUpdateCallback()) {\n\t\t\t\t\t\tif (ko.isWriteableObservable(rootObject)) {\n\t\t\t\t\t\t\trootObject(updateCallback(rootObject));\n\t\t\t\t\t\t\tmappedRootObject = rootObject;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tmappedRootObject = updateCallback(rootObject);\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\tmappedRootObject = rootObject;\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\t\t\t\tdefault:\n\t\t\t\t\tif (ko.isWriteableObservable(mappedRootObject)) {\n\t\t\t\t\t\tif (hasUpdateCallback()) {\n\t\t\t\t\t\t\tvar valueToWrite = updateCallback(mappedRootObject);\n\t\t\t\t\t\t\tmappedRootObject(valueToWrite);\n\t\t\t\t\t\t\treturn valueToWrite;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tvar valueToWrite = ko.utils.unwrapObservable(rootObject);\n\t\t\t\t\t\t\tmappedRootObject(valueToWrite);\n\t\t\t\t\t\t\treturn valueToWrite;\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\tvar hasCreateOrUpdateCallback = hasCreateCallback() || hasUpdateCallback();\n\t\t\t\t\t\t\n\t\t\t\t\t\tif (hasCreateCallback()) {\n\t\t\t\t\t\t\tmappedRootObject = createCallback();\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tmappedRootObject = ko.observable(ko.utils.unwrapObservable(rootObject));\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (hasUpdateCallback()) {\n\t\t\t\t\t\t\tmappedRootObject(updateCallback(mappedRootObject));\n\t\t\t\t\t\t}\n\t\t\t\t\t\t\n\t\t\t\t\t\tif (hasCreateOrUpdateCallback) return mappedRootObject;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t} else {\n\t\t\t\tmappedRootObject = ko.utils.unwrapObservable(mappedRootObject);\n\t\t\t\tif (!mappedRootObject) {\n\t\t\t\t\tif (hasCreateCallback()) {\n\t\t\t\t\t\tvar result = createCallback();\n\n\t\t\t\t\t\tif (hasUpdateCallback()) {\n\t\t\t\t\t\t\tresult = updateCallback(result);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\treturn result;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tif (hasUpdateCallback()) {\n\t\t\t\t\t\t\treturn updateCallback(result);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tmappedRootObject = {};\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif (hasUpdateCallback()) {\n\t\t\t\t\tmappedRootObject = updateCallback(mappedRootObject);\n\t\t\t\t}\n\n\t\t\t\tvisitedObjects.save(rootObject, mappedRootObject);\n\t\t\t\tif (hasUpdateCallback()) return mappedRootObject;\n\n\t\t\t\t// For non-atomic types, visit all properties and update recursively\n\t\t\t\tvisitPropertiesOrArrayEntries(rootObject, function (indexer) {\n\t\t\t\t\tvar fullPropertyName = parentPropertyName.length ? parentPropertyName + \".\" + indexer : indexer;\n\n\t\t\t\t\tif (ko.utils.arrayIndexOf(options.ignore, fullPropertyName) != -1) {\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (ko.utils.arrayIndexOf(options.copy, fullPropertyName) != -1) {\n\t\t\t\t\t\tmappedRootObject[indexer] = rootObject[indexer];\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\tif(typeof rootObject[indexer] != \"object\" && typeof rootObject[indexer] != \"array\" && options.observe.length > 0 && ko.utils.arrayIndexOf(options.observe, fullPropertyName) == -1)\n\t\t\t\t\t{\n\t\t\t\t\t\tmappedRootObject[indexer] = rootObject[indexer];\n\t\t\t\t\t\toptions.copiedProperties[fullPropertyName] = true;\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\t// In case we are adding an already mapped property, fill it with the previously mapped property value to prevent recursion.\n\t\t\t\t\t// If this is a property that was generated by fromJS, we should use the options specified there\n\t\t\t\t\tvar prevMappedProperty = visitedObjects.get(rootObject[indexer]);\n\t\t\t\t\tvar retval = updateViewModel(mappedRootObject[indexer], rootObject[indexer], options, indexer, mappedRootObject, fullPropertyName, mappedRootObject);\n\t\t\t\t\tvar value = prevMappedProperty || retval;\n\t\t\t\t\t\n\t\t\t\t\tif(options.observe.length > 0 && ko.utils.arrayIndexOf(options.observe, fullPropertyName) == -1)\n\t\t\t\t\t{\n\t\t\t\t\t\tmappedRootObject[indexer] = value();\n\t\t\t\t\t\toptions.copiedProperties[fullPropertyName] = true;\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\tif (ko.isWriteableObservable(mappedRootObject[indexer])) {\n\t\t\t\t\t\tvalue = ko.utils.unwrapObservable(value);\n\t\t\t\t\t\tif (mappedRootObject[indexer]() !== value) {\n\t\t\t\t\t\t\tmappedRootObject[indexer](value);\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\tvalue = mappedRootObject[indexer] === undefined ? value : ko.utils.unwrapObservable(value);\n\t\t\t\t\t\tmappedRootObject[indexer] = value;\n\t\t\t\t\t}\n\n\t\t\t\t\toptions.mappedProperties[fullPropertyName] = true;\n\t\t\t\t});\n\t\t\t}\n\t\t} else { //mappedRootObject is an array\n\t\t\tvar changes = [];\n\n\t\t\tvar hasKeyCallback = false;\n\t\t\tvar keyCallback = function (x) {\n\t\t\t\treturn x;\n\t\t\t}\n\t\t\tif (options[parentName] && options[parentName].key) {\n\t\t\t\tkeyCallback = options[parentName].key;\n\t\t\t\thasKeyCallback = true;\n\t\t\t}\n\n\t\t\tif (!ko.isObservable(mappedRootObject)) {\n\t\t\t\t// When creating the new observable array, also add a bunch of utility functions that take the 'key' of the array items into account.\n\t\t\t\tmappedRootObject = ko.observableArray([]);\n\n\t\t\t\tmappedRootObject.mappedRemove = function (valueOrPredicate) {\n\t\t\t\t\tvar predicate = typeof valueOrPredicate == \"function\" ? valueOrPredicate : function (value) {\n\t\t\t\t\t\t\treturn value === keyCallback(valueOrPredicate);\n\t\t\t\t\t\t};\n\t\t\t\t\treturn mappedRootObject.remove(function (item) {\n\t\t\t\t\t\treturn predicate(keyCallback(item));\n\t\t\t\t\t});\n\t\t\t\t}\n\n\t\t\t\tmappedRootObject.mappedRemoveAll = function (arrayOfValues) {\n\t\t\t\t\tvar arrayOfKeys = filterArrayByKey(arrayOfValues, keyCallback);\n\t\t\t\t\treturn mappedRootObject.remove(function (item) {\n\t\t\t\t\t\treturn ko.utils.arrayIndexOf(arrayOfKeys, keyCallback(item)) != -1;\n\t\t\t\t\t});\n\t\t\t\t}\n\n\t\t\t\tmappedRootObject.mappedDestroy = function (valueOrPredicate) {\n\t\t\t\t\tvar predicate = typeof valueOrPredicate == \"function\" ? valueOrPredicate : function (value) {\n\t\t\t\t\t\t\treturn value === keyCallback(valueOrPredicate);\n\t\t\t\t\t\t};\n\t\t\t\t\treturn mappedRootObject.destroy(function (item) {\n\t\t\t\t\t\treturn predicate(keyCallback(item));\n\t\t\t\t\t});\n\t\t\t\t}\n\n\t\t\t\tmappedRootObject.mappedDestroyAll = function (arrayOfValues) {\n\t\t\t\t\tvar arrayOfKeys = filterArrayByKey(arrayOfValues, keyCallback);\n\t\t\t\t\treturn mappedRootObject.destroy(function (item) {\n\t\t\t\t\t\treturn ko.utils.arrayIndexOf(arrayOfKeys, keyCallback(item)) != -1;\n\t\t\t\t\t});\n\t\t\t\t}\n\n\t\t\t\tmappedRootObject.mappedIndexOf = function (item) {\n\t\t\t\t\tvar keys = filterArrayByKey(mappedRootObject(), keyCallback);\n\t\t\t\t\tvar key = keyCallback(item);\n\t\t\t\t\treturn ko.utils.arrayIndexOf(keys, key);\n\t\t\t\t}\n\n\t\t\t\tmappedRootObject.mappedGet = function (item) {\n\t\t\t\t\treturn mappedRootObject()[mappedRootObject.mappedIndexOf(item)];\n\t\t\t\t}\n\n\t\t\t\tmappedRootObject.mappedCreate = function (value) {\n\t\t\t\t\tif (mappedRootObject.mappedIndexOf(value) !== -1) {\n\t\t\t\t\t\tthrow new Error(\"There already is an object with the key that you specified.\");\n\t\t\t\t\t}\n\n\t\t\t\t\tvar item = hasCreateCallback() ? createCallback(value) : value;\n\t\t\t\t\tif (hasUpdateCallback()) {\n\t\t\t\t\t\tvar newValue = updateCallback(item, value);\n\t\t\t\t\t\tif (ko.isWriteableObservable(item)) {\n\t\t\t\t\t\t\titem(newValue);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\titem = newValue;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tmappedRootObject.push(item);\n\t\t\t\t\treturn item;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tvar currentArrayKeys = filterArrayByKey(ko.utils.unwrapObservable(mappedRootObject), keyCallback).sort();\n\t\t\tvar newArrayKeys = filterArrayByKey(rootObject, keyCallback);\n\t\t\tif (hasKeyCallback) newArrayKeys.sort();\n\t\t\tvar editScript = ko.utils.compareArrays(currentArrayKeys, newArrayKeys);\n\n\t\t\tvar ignoreIndexOf = {};\n\t\t\t\n\t\t\tvar i, j;\n\n\t\t\tvar unwrappedRootObject = ko.utils.unwrapObservable(rootObject);\n\t\t\tvar itemsByKey = {};\n\t\t\tvar optimizedKeys = true;\n\t\t\tfor (i = 0, j = unwrappedRootObject.length; i < j; i++) {\n\t\t\t\tvar key = keyCallback(unwrappedRootObject[i]);\n\t\t\t\tif (key === undefined || key instanceof Object) {\n\t\t\t\t\toptimizedKeys = false;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\titemsByKey[key] = unwrappedRootObject[i];\n\t\t\t}\n\n\t\t\tvar newContents = [];\n\t\t\tvar passedOver = 0;\n\t\t\tfor (i = 0, j = editScript.length; i < j; i++) {\n\t\t\t\tvar key = editScript[i];\n\t\t\t\tvar mappedItem;\n\t\t\t\tvar fullPropertyName = parentPropertyName + \"[\" + i + \"]\";\n\t\t\t\tswitch (key.status) {\n\t\t\t\tcase \"added\":\n\t\t\t\t\tvar item = optimizedKeys ? itemsByKey[key.value] : getItemByKey(ko.utils.unwrapObservable(rootObject), key.value, keyCallback);\n\t\t\t\t\tmappedItem = updateViewModel(undefined, item, options, parentName, mappedRootObject, fullPropertyName, parent);\n\t\t\t\t\tif(!hasCreateCallback()) {\n\t\t\t\t\t\tmappedItem = ko.utils.unwrapObservable(mappedItem);\n\t\t\t\t\t}\n\n\t\t\t\t\tvar index = ignorableIndexOf(ko.utils.unwrapObservable(rootObject), item, ignoreIndexOf);\n\t\t\t\t\t\n\t\t\t\t\tif (mappedItem === emptyReturn) {\n\t\t\t\t\t\tpassedOver++;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tnewContents[index - passedOver] = mappedItem;\n\t\t\t\t\t}\n\t\t\t\t\t\t\n\t\t\t\t\tignoreIndexOf[index] = true;\n\t\t\t\t\tbreak;\n\t\t\t\tcase \"retained\":\n\t\t\t\t\tvar item = optimizedKeys ? itemsByKey[key.value] : getItemByKey(ko.utils.unwrapObservable(rootObject), key.value, keyCallback);\n\t\t\t\t\tmappedItem = getItemByKey(mappedRootObject, key.value, keyCallback);\n\t\t\t\t\tupdateViewModel(mappedItem, item, options, parentName, mappedRootObject, fullPropertyName, parent);\n\n\t\t\t\t\tvar index = ignorableIndexOf(ko.utils.unwrapObservable(rootObject), item, ignoreIndexOf);\n\t\t\t\t\tnewContents[index] = mappedItem;\n\t\t\t\t\tignoreIndexOf[index] = true;\n\t\t\t\t\tbreak;\n\t\t\t\tcase \"deleted\":\n\t\t\t\t\tmappedItem = getItemByKey(mappedRootObject, key.value, keyCallback);\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\n\t\t\t\tchanges.push({\n\t\t\t\t\tevent: key.status,\n\t\t\t\t\titem: mappedItem\n\t\t\t\t});\n\t\t\t}\n\n\t\t\tmappedRootObject(newContents);\n\n\t\t\tif (options[parentName] && options[parentName].arrayChanged) {\n\t\t\t\tko.utils.arrayForEach(changes, function (change) {\n\t\t\t\t\toptions[parentName].arrayChanged(change.event, change.item);\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\n\t\treturn mappedRootObject;\n\t}\n\n\tfunction ignorableIndexOf(array, item, ignoreIndices) {\n\t\tfor (var i = 0, j = array.length; i < j; i++) {\n\t\t\tif (ignoreIndices[i] === true) continue;\n\t\t\tif (array[i] === item) return i;\n\t\t}\n\t\treturn null;\n\t}\n\n\tfunction mapKey(item, callback) {\n\t\tvar mappedItem;\n\t\tif (callback) mappedItem = callback(item);\n\t\tif (exports.getType(mappedItem) === \"undefined\") mappedItem = item;\n\n\t\treturn ko.utils.unwrapObservable(mappedItem);\n\t}\n\n\tfunction getItemByKey(array, key, callback) {\n\t\tarray = ko.utils.unwrapObservable(array);\n\t\tfor (var i = 0, j = array.length; i < j; i++) {\n\t\t\tvar item = array[i];\n\t\t\tif (mapKey(item, callback) === key) return item;\n\t\t}\n\n\t\tthrow new Error(\"When calling ko.update*, the key '\" + key + \"' was not found!\");\n\t}\n\n\tfunction filterArrayByKey(array, callback) {\n\t\treturn ko.utils.arrayMap(ko.utils.unwrapObservable(array), function (item) {\n\t\t\tif (callback) {\n\t\t\t\treturn mapKey(item, callback);\n\t\t\t} else {\n\t\t\t\treturn item;\n\t\t\t}\n\t\t});\n\t}\n\n\tfunction visitPropertiesOrArrayEntries(rootObject, visitorCallback) {\n\t\tif (exports.getType(rootObject) === \"array\") {\n\t\t\tfor (var i = 0; i < rootObject.length; i++)\n\t\t\tvisitorCallback(i);\n\t\t} else {\n\t\t\tfor (var propertyName in rootObject)\n\t\t\tvisitorCallback(propertyName);\n\t\t}\n\t};\n\n\tfunction canHaveProperties(object) {\n\t\tvar type = exports.getType(object);\n\t\treturn ((type === \"object\") || (type === \"array\")) && (object !== null);\n\t}\n\n\t// Based on the parentName, this creates a fully classified name of a property\n\n\tfunction getPropertyName(parentName, parent, indexer) {\n\t\tvar propertyName = parentName || \"\";\n\t\tif (exports.getType(parent) === \"array\") {\n\t\t\tif (parentName) {\n\t\t\t\tpropertyName += \"[\" + indexer + \"]\";\n\t\t\t}\n\t\t} else {\n\t\t\tif (parentName) {\n\t\t\t\tpropertyName += \".\";\n\t\t\t}\n\t\t\tpropertyName += indexer;\n\t\t}\n\t\treturn propertyName;\n\t}\n\n\texports.visitModel = function (rootObject, callback, options) {\n\t\toptions = options || {};\n\t\toptions.visitedObjects = options.visitedObjects || new objectLookup();\n\n\t\tvar mappedRootObject;\n\t\tvar unwrappedRootObject = ko.utils.unwrapObservable(rootObject);\n\n\t\tif (!canHaveProperties(unwrappedRootObject)) {\n\t\t\treturn callback(rootObject, options.parentName);\n\t\t} else {\n\t\t\toptions = fillOptions(options, unwrappedRootObject[mappingProperty]);\n\n\t\t\t// Only do a callback, but ignore the results\n\t\t\tcallback(rootObject, options.parentName);\n\t\t\tmappedRootObject = exports.getType(unwrappedRootObject) === \"array\" ? [] : {};\n\t\t}\n\n\t\toptions.visitedObjects.save(rootObject, mappedRootObject);\n\n\t\tvar parentName = options.parentName;\n\t\tvisitPropertiesOrArrayEntries(unwrappedRootObject, function (indexer) {\n\t\t\tif (options.ignore && ko.utils.arrayIndexOf(options.ignore, indexer) != -1) return;\n\n\t\t\tvar propertyValue = unwrappedRootObject[indexer];\n\t\t\toptions.parentName = getPropertyName(parentName, unwrappedRootObject, indexer);\n\n\t\t\t// If we don't want to explicitly copy the unmapped property...\n\t\t\tif (ko.utils.arrayIndexOf(options.copy, indexer) === -1) {\n\t\t\t\t// ...find out if it's a property we want to explicitly include\n\t\t\t\tif (ko.utils.arrayIndexOf(options.include, indexer) === -1) {\n\t\t\t\t\t// The mapped properties object contains all the properties that were part of the original object.\n\t\t\t\t\t// If a property does not exist, and it is not because it is part of an array (e.g. \"myProp[3]\"), then it should not be unmapped.\n\t\t\t\t    if (unwrappedRootObject[mappingProperty]\n\t\t\t\t        && unwrappedRootObject[mappingProperty].mappedProperties && !unwrappedRootObject[mappingProperty].mappedProperties[indexer]\n\t\t\t\t        && unwrappedRootObject[mappingProperty].copiedProperties && !unwrappedRootObject[mappingProperty].copiedProperties[indexer]\n\t\t\t\t        && !(exports.getType(unwrappedRootObject) === \"array\")) {\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tvar outputProperty;\n\t\t\tswitch (exports.getType(ko.utils.unwrapObservable(propertyValue))) {\n\t\t\tcase \"object\":\n\t\t\tcase \"array\":\n\t\t\tcase \"undefined\":\n\t\t\t\tvar previouslyMappedValue = options.visitedObjects.get(propertyValue);\n\t\t\t\tmappedRootObject[indexer] = (exports.getType(previouslyMappedValue) !== \"undefined\") ? previouslyMappedValue : exports.visitModel(propertyValue, callback, options);\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\tmappedRootObject[indexer] = callback(propertyValue, options.parentName);\n\t\t\t}\n\t\t});\n\n\t\treturn mappedRootObject;\n\t}\n\n\tfunction simpleObjectLookup() {\n\t\tvar keys = [];\n\t\tvar values = [];\n\t\tthis.save = function (key, value) {\n\t\t\tvar existingIndex = ko.utils.arrayIndexOf(keys, key);\n\t\t\tif (existingIndex >= 0) values[existingIndex] = value;\n\t\t\telse {\n\t\t\t\tkeys.push(key);\n\t\t\t\tvalues.push(value);\n\t\t\t}\n\t\t};\n\t\tthis.get = function (key) {\n\t\t\tvar existingIndex = ko.utils.arrayIndexOf(keys, key);\n\t\t\tvar value = (existingIndex >= 0) ? values[existingIndex] : undefined;\n\t\t\treturn value;\n\t\t};\n\t};\n\t\n\tfunction objectLookup() {\n\t\tvar buckets = {};\n\t\t\n\t\tvar findBucket = function(key) {\n\t\t\tvar bucketKey;\n\t\t\ttry {\n\t\t\t\tbucketKey = key;//JSON.stringify(key);\n\t\t\t}\n\t\t\tcatch (e) {\n\t\t\t\tbucketKey = \"$$$\";\n\t\t\t}\n\n\t\t\tvar bucket = buckets[bucketKey];\n\t\t\tif (bucket === undefined) {\n\t\t\t\tbucket = new simpleObjectLookup();\n\t\t\t\tbuckets[bucketKey] = bucket;\n\t\t\t}\n\t\t\treturn bucket;\n\t\t};\n\t\t\n\t\tthis.save = function (key, value) {\n\t\t\tfindBucket(key).save(key, value);\n\t\t};\n\t\tthis.get = function (key) {\n\t\t\treturn findBucket(key).get(key);\n\t\t};\n\t};\n}));","// Knockout Fast Mapping v0.1\n// License: MIT (http://www.opensource.org/licenses/mit-license.php)\n\n(function (factory) {\n\t// Module systems magic dance.\n\n\tif (typeof require === \"function\" && typeof exports === \"object\" && typeof module === \"object\") {\n\t\t// CommonJS or Node: hard-coded dependency on \"knockout\"\n\t\tfactory((typeof window !== \"undefined\" ? window['ko'] : typeof global !== \"undefined\" ? global['ko'] : null), exports);\n\t} else if (typeof define === \"function\" && define[\"amd\"]) {\n\t\t// AMD anonymous module with hard-coded dependency on \"knockout\"\n\t\tdefine([\"knockout\", \"exports\"], factory);\n\t} else {\n\t\t// <script> tag: use the global `ko` object, attaching a `wrap` property\n\t\tfactory(ko, ko.wrap = {});\n\t}\n}(function (ko, exports) {\n    \n    // this function mimics ko.mapping\n    exports.fromJS = function(jsObject, computedFunctions)\n    {\n        reset();\n\treturn wrap(jsObject, computedFunctions);\n    }\n\n    // this function unwraps the outer for assigning the result to an observable\n    // see https://github.com/SteveSanderson/knockout/issues/517\n    exports.updateFromJS = function(observable, jsObject, computedFunctions)\n    {\n        reset();\n\treturn observable(ko.utils.unwrapObservable(wrap(jsObject, computedFunctions)));\n    }\n\n    exports.fromJSON = function (jsonString, computedFunctions) {\n\tvar parsed = ko.utils.parseJson(jsonString);\n\targuments[0] = parsed;\n\treturn exports.fromJS.apply(this, computedFunctions);\n    };\n    \n    exports.toJS = function (observable) {\n\treturn unwrap(observable);\n    }\n\n    exports.toJSON = function (observable) {\n\tvar plainJavaScriptObject = exports.toJS(observable);\n\treturn ko.utils.stringifyJson(plainJavaScriptObject);\n    };\n\n    function typeOf(value) {\n\tvar s = typeof value;\n\tif (s === 'object') {\n            if (value) {\n                if (value.constructor == Date)\n                    s = 'date';\n\t\telse if (Object.prototype.toString.call(value) == '[object Array]')\n                    s = 'array';\n            } else {\n\t\ts = 'null';\n            }\n\t}\n\treturn s;\n    }\n\n    // unwrapping\n    function unwrapObject(o)\n    {\n\tvar t = {};\n\n\tfor (var k in o)\n\t{\n\t    var v = o[k];\n\n\t    if (ko.isComputed(v))\n\t\tcontinue;\n\n\t    t[k] = unwrap(v);\n\t}\n\n\treturn t;\n    }\n\n    function unwrapArray(a)\n    {\n\tvar r = [];\n\n\tif (!a || a.length == 0)\n\t    return r;\n\t\n\tfor (var i = 0, l = a.length; i < l; ++i)\n\t    r.push(unwrap(a[i]));\n\n\treturn r;\n    }\n\n    function unwrap(v)\n    {\n\tvar isObservable = ko.isObservable(v);\n\n\tif (isObservable)\n\t{\n\t    var val = v();\n\n\t    return unwrap(val);\n\t}\n\telse\n\t{\n\t    if (typeOf(v) == \"array\")\n\t    {\n\t\treturn unwrapArray(v);\n\t    }\n\t    else if (typeOf(v) == \"object\")\n\t    {\n\t\treturn unwrapObject(v);\n\t    }\n\t    else\n\t    {\n\t\treturn v;\n\t    }\n\t}\n    }\n\n    function reset()\n    {\n        parents = [{obj: null, wrapped: null, lvl: \"\"}];\n    }    \n    \n    // wrapping\n\n    function wrapObject(o, computedFunctions)\n    {\n        // check for infinite recursion\n        for (var i = 0; i < parents.length; ++i) {\n            if (parents[i].obj === o) {\n                return parents[i].wrapped;\n            }\n        }\n\n\tvar t = {};\n\n\tfor (var k in o)\n\t{\n\t    var v = o[k];\n\n            parents.push({obj: o, wrapped: t, lvl: currentLvl() + \"/\" + k});\n\n\t    t[k] = wrap(v, computedFunctions);\n\n            parents.pop();\n\t}\n\n\tif (computedFunctions && computedFunctions[currentLvl()])\n\t    t = computedFunctions[currentLvl()](t);\n\n        if (hasES5Plugin())\n            ko.track(t);\n\n\treturn t;\n    }\n\n    function wrapArray(a, computedFunctions)\n    {\n\tvar r = ko.observableArray();\n\n\tif (!a || a.length == 0)\n\t    return r;\n\n\tfor (var i = 0, l = a.length; i < l; ++i)\n\t    r.push(wrap(a[i], computedFunctions));\n\n\treturn r;\n    }\n\n    // a stack, used for two purposes:\n    //  - circular reference checking\n    //  - computed functions\n    var parents;\n\n    function currentLvl()\n    {\n\treturn parents[parents.length-1].lvl;\n    }\n\n    function wrap(v, computedFunctions)\n    {\n\tif (typeOf(v) == \"array\")\n\t{\n\t    return wrapArray(v, computedFunctions);\n\t}\n\telse if (typeOf(v) == \"object\")\n\t{\n\t    return wrapObject(v, computedFunctions);\n\t}\n\telse\n\t{\n            if (!hasES5Plugin() && typeof v !== 'function')\n            {\n\t        var t = ko.observable();\n\t        t(v);\n\t        return t;\n            } else\n                return v;\n\t}\n    }\n\n    function hasES5Plugin()\n    {\n        return ko.track != null;\n    }\n}));"]}