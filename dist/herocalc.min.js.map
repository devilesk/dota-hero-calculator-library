{"version":3,"sources":["node_modules/browser-pack/_prelude.js","src/herocalc/herocalc_abilities.js","src/herocalc/herocalc_abilitydata.js","src/herocalc/herocalc_buffs.js","src/herocalc/herocalc_core.js","src/herocalc/herocalc_hero.illusion.js","src/herocalc/herocalc_hero.js","src/herocalc/herocalc_hero.meepo.js","src/herocalc/herocalc_hero_damage.js","src/herocalc/herocalc_inventory.js","src/herocalc/herocalc_knockout.js","src/herocalc/herocalc_unit.js","src/herocalc/main.js","src/herocalc/polyfill.js","src/lib/knockout.mapping.js","src/lib/knockout.wrap.js"],"names":["ko","require","my","prototype","AbilityModel","a","h","self","this","hero","abilityData","hasScepter","observable","isShapeShiftActive","abilities","_abilities","i","length","level","isActive","isDetail","baseDamage","baseDamageReductionPct","baseDamageMultiplier","bash","bashBonusDamage","bonusDamage","bonusDamageOrb","bonusDamagePct","bonusDamagePrecisionAura","bonusDamageReduction","bonusHealth","bonusStrength","bonusStrength2","bonusAgility","bonusAgility2","bonusInt","bonusAllStatsReduction","damageAmplification","damageReduction","evasion","magicResist","manaregen","manaregenreduction","missChance","movementSpeedFlat","movementSpeedPct","movementSpeedPctReduction","turnRateReduction","attackrange","attackspeed","attackspeedreduction","armor","armorReduction","healthregen","lifesteal","visionnight","visionday","abilityControlData","abilitySettingsData","data","parent","index","undefined","processAbility","args","result","v","v_list","controlType","extend","numeric","controlValueType","push","labelName","label","toUpperCase","controlVal","display","controlOptions","value","controls","noLevel","attributeValue","attributeName","fn","computed","_ability","find","b","name","getAbilityAttributeValue","attributes","g","r","getComputedFunction","returnProperty","ignoreTooltip","tooltip","getAbilityAttributeTooltip","clean","abilityModel","abilityName","pureComputed","inputValue","parseFloat","returnVal","call","getAbilityLevelByAbilityName","getAbilityByName","getAbilityPropertyValue","ability","property","getAttributeBonusLevel","getAllStatsReduction","totalAttribute","behavior","indexOf","j","getStrengthReduction","getStrength","getAgility","attribute","getIntelligence","getArmor","getArmorBaseReduction","getArmorReduction","getHealth","isTrueFormActive","getHealthRegen","getMana","getManaRegen","getManaRegenArcaneAura","getManaRegenReduction","getAttackRange","getAttackSpeed","getAttackSpeedReduction","getBash","getBaseDamage","totalMultiplier","sources","damage","damageType","displayname","total","multiplier","getSelfBaseDamageReductionPct","getBaseDamageReductionPct","getBAT","getBonusDamage","getBonusDamagePercent","heroId","getBonusDamageBackstab","totalAttribute1","totalAttribute2","getBonusDamagePrecisionAura","getBonusDamageReduction","getBonusDamageReductionPct","getDamageAmplification","getDamageReduction","getCritSource","chance","count","getCleaveSource","radius","magnitude","getCritChance","getEvasion","getEvasionBacktrack","getMissChance","getLifesteal","getMagicResist","getMagicResistReduction","getMovementSpeedFlat","getMovementSpeedPercent","getMovementSpeedPercentReduction","getTurnRateReduction","getVisionRangeNight","getVisionRangePctReduction","setEvasion","setMovementSpeed","MAX_MOVESPEED","MIN_MOVESPEED","getBashSource","attacktype","getOrbSource","totalInt","toggleAbility","event","bind","toggleAbilityDetail","getAbility","levelUpAbility","getAbilityLevelMax","availableSkillPoints","abilitytype","parseInt","selectedHeroLevel","skillPointHistory","levelDownAbility","utils","unwrapObservable","splice","lastIndexOf","hasOwnProperty","d","replace","alchemist_acid_spray","alchemist_unstable_concoction","ancient_apparition_cold_feet","ancient_apparition_ice_blast","antimage_mana_void","axe_battle_hunger","bane_nightmare","bane_fiends_grip","inventory","batrider_sticky_napalm","batrider_firefly","bloodseeker_rupture","bristleback_viscous_nasal_goo","bristleback_quill_spray","damage_cap","bristleback_bristleback","text","bristleback_warpath","centaur_return","centaur_stampede","clinkz_death_pact","crystal_maiden_frostbite","dark_seer_ion_shell","dazzle_shadow_wave","dazzle_weave","death_prophet_exorcism","disruptor_static_storm","damagevalue","mult","doom_bringer_scorched_earth","doom_bringer_doom","dragon_knight_elder_dragon_form","drow_ranger_trueshot","earth_spirit_rolling_boulder","earthshaker_enchant_totem","earthshaker_echo_slam","elder_titan_ancestral_spirit","elder_titan_earth_splitter","enchantress_natures_attendants","enigma_malefice","enigma_midnight_pulse","enigma_black_hole","faceless_void_time_lock","gyrocopter_rocket_barrage","huskar_burning_spear","huskar_berserkers_blood","health","Math","min","max","hp_threshold_max","c","huskar_life_break","invoker_quas","invoker_wex","invoker_exort","invoker_ghost_walk","invoker_alacrity","invoker_ice_wall","jakiro_dual_breath","jakiro_liquid_fire","jakiro_macropyre","juggernaut_blade_fury","juggernaut_healing_ward","juggernaut_omni_slash","keeper_of_the_light_illuminate","keeper_of_the_light_mana_leak","legion_commander_duel","leshrac_pulse_nova","lich_chain_frost","life_stealer_feast","life_stealer_open_wounds","lina_fiery_soul","lion_mana_drain","luna_moon_glaive","pow","toFixed","join","luna_eclipse","lucentBeamAbility","medusa_mystic_snake","snake_jumps","snake_scale","slice","reduce","memo","o","medusa_mana_shield","meepo_poof","meepo_geostrike","mirana_arrow","arrow_min_stun","arrow_max_stunrange","scale","floor","bonus_damage","morphling_morph_agi","morphling_morph_str","furion_wrath_of_nature","necrolyte_heartstopper_aura","necrolyte_sadist","hero_multiplier","night_stalker_crippling_fear","night_stalker_hunter_in_the_night","obsidian_destroyer_arcane_orb","ogre_magi_ignite","pudge_rot","pudge_flesh_heap","pudge_dismember","pugna_nether_ward","pugna_life_drain","queenofpain_shadow_strike","duration_damage","ticks","razor_plasma_field","max_radius","damage_min","damage_max","razor_static_link","tick_duration","drain_rate","razor_eye_of_the_storm","rubick_fade_bolt","sandking_sand_storm","sandking_epicenter","shadow_demon_shadow_poison","stackmult","nevermore_necromastery","nevermore_requiem","shadow_shaman_shackles","silencer_curse_of_the_silent","skywrath_mage_mystic_flare","slark_essence_shift","slark_shadow_dance","sniper_shrapnel","spectre_desolate","spectre_dispersion","storm_spirit_ball_lightning","distance_intervals","travel_cost_base","travel_cost_percent","templar_assassin_psionic_trap","max_slow","slow_per_tick","shredder_reactive_armor","shredder_chakram","interval","spirit_breaker_greater_bash","techies_land_mines","phys_reduction","enemy","totalArmorPhysicalReduction","magic_reduction","totalMagicResistance","techies_suicide","respawnTime","techies_remote_mines","tinker_march_of_the_machines","treant_leech_seed","troll_warlord_fervor","undying_decay","str_steal_scepter","undying_soul_rip","undying_flesh_golem","min_speed_slow","full_power_radius","distance","min_damage_amp","ursa_fury_swipes","enrageAbility","enrage_multiplier","ursa_enrage","venomancer_venomous_gale","venomancer_poison_sting","venomancer_poison_nova","viper_poison_attack","viper_corrosive_skin","viper_viper_strike","visage_soul_assumption","soul_base_damage","stack_limit","visage_gravekeepers_cloak","warlock_shadow_word","warlock_upheaval","weaver_the_swarm","windrunner_powershot","winter_wyvern_cold_embrace","base_heal","wisp_spirits","wisp_overcharge","witch_doctor_paralyzing_cask","bounces","witch_doctor_voodoo_restoration","heal_per_tick","mana_per_tick","witch_doctor_maledict","duration","witch_doctor_death_ward","zuus_static_field","BuffOption","buffName","heroData","findWhere","unitData","buffDisplayName","ItemBuffOption","item","BuffViewModel","observableArray","availableBuffs","availableDebuffs","selectedBuff","buffs","itemBuffs","InventoryViewModel","addBuff","JSON","parse","stringify","removeBuff","remove","dispose","toggleBuff","toggleBuffDetail","HEROCALCULATOR","itemData","HeroOptions","HeroOption","heroName","heroDisplayName","idCounter","uniqueId","prefix","id","arr","obj","arrLoop","key","uniques","l","union","concat","totalResources","numResourcesLoaded","onResourceLoaded","callback","itemOptionsArr","validItems","ItemInput","itemBuffOptions","map","itemDebuffs","debuff","itemDebuffOptions","init","HERODATA_PATH","ITEMDATA_PATH","UNITDATA_PATH","getJSON","out","arguments","url","successCallback","errorCallback","request","XMLHttpRequest","open","onload","status","responseText","onerror","send","module","exports","illusionData","chaos_knight_phantasm","displayName","use_selected_hero","max_level","outgoing_damage","incoming_damage","naga_siren_mirror_image","dark_seer_wall_of_replica","outgoing_damage_scepter","morphling_replicate","phantom_lancer_doppelwalk","phantom_lancer_juxtapose","phantom_lancer_spirit_lance","shadow_demon_disruption","spectre_haunt","terrorblade_conjure_image","terrorblade_reflection","item_manta","is_item","outgoing_damage_melee","incoming_damage_melee","outgoing_damage_ranged","incoming_damage_ranged","IllusionViewModel","p","abilityLevel","HeroCalculatorModel","illusionType","selectedIllusion","illusionName","illusionDisplayName","illusionAbilityLevel","illusionAbilityMaxLevel","selectedHero","availableHeroes","baseHero","wrap","fromJS","totalAgi","attributebaseagility","attributeagilitygain","getAttributes","debuffs","intStolen","attributebaseintelligence","attributeintelligencegain","totalStr","attributebasestrength","attributestrengthgain","abilityObj","getIncomingDamageMultiplier","attackType","getOutgoingDamageMultiplier","attackdamagemin","primaryAttribute","attackdamagemax","ehpPhysical","ehp","totalArmorPhysical","activeItems","some","ehpMagical","totalMagicResistanceProduct","armorphysical","ias","val","unit","totalExp","nextLevelExp","diffProperties","IllusionOption","createIllusionOptions","options","HeroModel","selectedInventory","heroCompare","clone","illusions","availableIllusions","removeAll","attributeprimary","startingArmor","statushealth","healthRegenAura","getHealthRegenAura","excludeList","statushealthregen","mana","statusmana","statusmanaregen","getManaRegenPercent","getManaRegenBloodstone","armorAura","getArmorAura","totalArmor","totalMovementSpeed","ms","movementSpeedPercent","movementSpeedPercentReduction","isSheeped","movementspeed","totalTurnRate","movementturnrate","abilityBaseDamage","minDamage","maxDamage","baseDamageAvg","baseDamageMin","baseDamageMax","abs","damageAvg","damageMin","damageMax","magicalresistance","getMagicResistReductionSelf","bat","abilityBAT","attackrate","attackSpeed","attackSpeedReduction","attackTime","attacksPerSecond","e","critChance","HeroDamageMixin","missDebuff","totalattackrange","visionrangeday","visionrangenight","visionnighttimerange","lifestealAura","getLifestealAura","addIllusion","diff","getDiffFunction","prop","deferEvaluation","CloneOption","levels","image","CloneViewModel","DamageTypeColor","physical","pure","magic","default","critInfo","compareByMultiplier","critSources","critSourcesArray","el","sort","critTotal","k","total2","totalChance","cleaveInfo","compareByRadius","cleaveSources","cleaveSourcesArray","cleaveSourcesByRadius","bashInfo","bashSources","bashSourcesArray","bashTotal","orbProcInfo","compareByDamage","priority","damageSources","getOrbProcSource","damageSourcesArray","damageTotal","getReducedDamage","type","damageTotalInfo","bonusDamageArray","bonusDamagePctArray","itemBonusDamage","itemBonusDamagePct","abilityOrbSources","itemOrbSources","itemProcOrbSources","attackSources","cooldown","cd","items","enabled","item_echo_sabre","attacks","totalDamage","totalCritableDamage","totalCrit","geminateAttack","damageReduced","active","crits","s","dps","dpsReduced","orb","Object","keys","totalReduced","totalCritReduced","base","crit","reduced","forEach","totalCritChance","t1Crit","t2Crit","t3Crit","filter","t4Crit","t1","t2","t3","t4","totalCritRow","totalRow","visible","sourcesCrit","totalGeminateAttack","totalGeminateAttackReduced","sumTotal","sumTotalReduced","getDamageTypeColor","stackableItems","levelitems","itemsWithActive","ItemAliases","Array","itemAlias","BasicInventoryViewModel","addItem","selectedItem","new_item","split","state","size","itemInputValue","toggleItem","removeItem","toggleMuteItem","getItemImage","getItemSizeLabel","getActiveBorder","getItemAttributeValue","hasInventory","isEthereal","totalCost","itemcost","addItemBuff","selectedItemBuff","addItemDebuff","selectedItemDebuff","attributetype","aList","attributeList","hasBoots","hasEuls","hasWindLace","bootItems","hasYasha","hasDrums","hasDrumsActive","hasPhaseActive","hasShadowBladeActive","hasButterflyActive","hasMoMActive","yashaItems","hasPowerTreads","itemOptions","window","global","mapping","extenders","target","precision","read","write","newValue","current","roundingMultiplier","newValueAsNum","isNaN","valueToWrite","round","notifySubscribers","notify","UnitOption","UnitViewModel","selectedUnitLevel","availableUnits","selectedUnit","subscribe","core","predicate","TypeError","list","thisArg","factory","define","unionArrays","x","y","res","extendObject","destination","source","destType","getType","bothArrays","merge","obj1","obj2","merged","fillOptions","rawOptions","otherOptions","recognizedRootProperties","ignore","mergeArrays","include","copy","observe","defaultOptions","mappedProperties","copiedProperties","arrayGetDistinctValues","withProxyDependentObservable","dependentObservables","localDO","dependentObservable","owner","realDeferEvaluation","isRemoved","DO","tmp","realKoDependentObservable","isWriteable","isWriteableObservable","wrapped","arrayRemoveItem","apply","DEBUG","_wrapper","__DO","realDependentObservable","updateViewModel","mappedRootObject","rootObject","parentName","parentPropertyName","mappedParent","isArray","isMapped","previousMapping","mappingProperty","callbackParams","hasCreateCallback","create","Function","createCallback","skip","emptyReturn","hasUpdateCallback","update","updateCallback","params","alreadyMapped","visitedObjects","get","changes","hasKeyCallback","keyCallback","isObservable","mappedRemove","valueOrPredicate","mappedRemoveAll","arrayOfValues","arrayOfKeys","filterArrayByKey","arrayIndexOf","mappedDestroy","destroy","mappedDestroyAll","mappedIndexOf","mappedGet","mappedCreate","Error","currentArrayKeys","newArrayKeys","editScript","compareArrays","ignoreIndexOf","unwrappedRootObject","itemsByKey","optimizedKeys","newContents","passedOver","mappedItem","fullPropertyName","getItemByKey","ignorableIndexOf","arrayChanged","arrayForEach","change","canHaveProperties","save","visitPropertiesOrArrayEntries","indexer","prevMappedProperty","retval","hasCreateOrUpdateCallback","array","ignoreIndices","mapKey","arrayMap","visitorCallback","propertyName","object","getPropertyName","simpleObjectLookup","values","existingIndex","objectLookup","buckets","findBucket","bucketKey","bucket","mappingNesting","_defaultOptions","viewModel","unwrapped","jsObject","pop","fromJSON","jsonString","parsed","parseJson","updateFromJS","updateFromJSON","toJS","resetDefaultOptions","visitModel","toJSON","plainJavaScriptObject","stringifyJson","constructor","Date","propertyValue","previouslyMappedValue","typeOf","toString","unwrapObject","t","isComputed","unwrap","unwrapArray","reset","parents","lvl","wrapObject","computedFunctions","currentLvl","hasES5Plugin","track","wrapArray"],"mappings":"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","file":"bundle.js","sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})","'use strict';\nvar ko = require('./herocalc_knockout');\n    \nvar my = require(\"./herocalc_core\");\n\nmy.prototype.AbilityModel = function (a, h) {\n    var self = this;\n    self.hero = h;\n    self.abilityData = my.prototype.abilityData;\n    self.hasScepter = ko.observable(false);\n    self.isShapeShiftActive = ko.observable(false);\n    self.abilities = a;\n    self._abilities = self.abilities();\n    for (var i = 0; i < self.abilities().length; i++) {\n        self._abilities[i].level = ko.observable(0);\n        self._abilities[i].isActive = ko.observable(false);\n        self._abilities[i].isDetail = ko.observable(false);\n        self._abilities[i].baseDamage = ko.observable(0);\n        self._abilities[i].baseDamageReductionPct = ko.observable(0);\n        self._abilities[i].baseDamageMultiplier = ko.observable(0);\n        self._abilities[i].bash = ko.observable(0);\n        self._abilities[i].bashBonusDamage = ko.observable(0);\n        self._abilities[i].bonusDamage = ko.observable(0);\n        self._abilities[i].bonusDamageOrb = ko.observable(0);\n        self._abilities[i].bonusDamagePct = ko.observable(0);\n        self._abilities[i].bonusDamagePrecisionAura = ko.observable(0);\n        self._abilities[i].bonusDamageReduction = ko.observable(0);\n        self._abilities[i].bonusHealth = ko.observable(0);\n        self._abilities[i].bonusStrength = ko.observable(0);\n        self._abilities[i].bonusStrength2 = ko.observable(0);\n        self._abilities[i].bonusAgility = ko.observable(0);\n        self._abilities[i].bonusAgility2 = ko.observable(0);\n        self._abilities[i].bonusInt = ko.observable(0);\n        self._abilities[i].bonusAllStatsReduction = ko.observable(0);\n        self._abilities[i].damageAmplification = ko.observable(0);\n        self._abilities[i].damageReduction = ko.observable(0);\n        self._abilities[i].evasion = ko.observable(0);\n        self._abilities[i].magicResist = ko.observable(0);\n        self._abilities[i].manaregen = ko.observable(0);\n        self._abilities[i].manaregenreduction = ko.observable(0);\n        self._abilities[i].missChance = ko.observable(0);\n        self._abilities[i].movementSpeedFlat = ko.observable(0);\n        self._abilities[i].movementSpeedPct = ko.observable(0);\n        self._abilities[i].movementSpeedPctReduction = ko.observable(0);\n        self._abilities[i].turnRateReduction = ko.observable(0);\n        self._abilities[i].attackrange = ko.observable(0);\n        self._abilities[i].attackspeed = ko.observable(0);\n        self._abilities[i].attackspeedreduction = ko.observable(0);\n        self._abilities[i].armor = ko.observable(0);\n        self._abilities[i].armorReduction = ko.observable(0);\n        self._abilities[i].healthregen = ko.observable(0);\n        self._abilities[i].lifesteal = ko.observable(0);\n        self._abilities[i].visionnight = ko.observable(0);\n        self._abilities[i].visionday = ko.observable(0);\n    }\n    self.abilityControlData = {};\n    self.abilitySettingsData = function (data, parent, index) {\n        if (self.abilityControlData[data] == undefined) {\n            return self.processAbility(data, parent, index, self.abilityData[data]);\n        }\n        else {\n            return self.abilityControlData[data];\n        }\n    }\n    \n    self.processAbility = function (data, parent, index, args) {\n        var result = {};\n        result.data = [];\n        var v;\n        var v_list = [];\n        for (var i=0; i < args.length; i++) {\n            switch (args[i].controlType) {\n                case 'input':\n                    v = ko.observable(0).extend({ numeric: 2 });\n                    v.controlValueType = args[i].controlValueType;\n                    v_list.push(v);\n                    result.data.push({ labelName: args[i].label.toUpperCase() + ':', controlVal: v, controlType: args[i].controlType, display: args[i].display });\n                break;\n                case 'checkbox':\n                    v = ko.observable(false);\n                    v.controlValueType = args[i].controlValueType;\n                    v_list.push(v);\n                    result.data.push({ labelName: args[i].label.toUpperCase() + '?', controlVal: v, controlType: args[i].controlType, display: args[i].display });\n                break;\n                case 'radio':\n                    v = ko.observable(args[i].controlOptions[0].value);\n                    v.controlValueType = args[i].controlValueType;\n                    v_list.push(v);\n                    result.data.push({ labelName: args[i].label.toUpperCase() + '?', controlVal: v, controlType: args[i].controlType, display: args[i].display, controlOptions: args[i].controlOptions });\n                break;\n                case 'method':\n                case 'text':\n                    // single input abilities\n                    if (args[i].controls == undefined) {\n                        if (args[i].noLevel) {\n                            var attributeValue = function (attributeName) {\n                                return {fn: ko.computed(function () {\n                                    var _ability = self.abilities().find(function(b) {\n                                        return b.name == data;\n                                    });\n                                    return self.getAbilityAttributeValue(_ability.attributes, attributeName, 0);\n                                })};\n                            };\n                        }\n                        else {\n                            var attributeValue = function (attributeName) {\n                                return {fn: ko.computed(function () {\n                                    var _ability = self.abilities().find(function(b) {\n                                        return b.name == data;\n                                    });\n                                    return self.getAbilityAttributeValue(_ability.attributes, attributeName, _ability.level());\n                                })};\n                            };\n                        }\n                        var g = attributeValue(args[i].attributeName)\n                        var r = self.getComputedFunction(v, g.fn, args[i].fn, parent, index, self, args[i].returnProperty, undefined, data);\n                        if (args[i].ignoreTooltip) {\n                            var tooltip = args[i].label || args[i].attributeName;\n                        }\n                        else {\n                            var tooltip = self.getAbilityAttributeTooltip(self.abilities()[index].attributes, args[i].attributeName) || args[i].label || args[i].attributeName;\n                        }\n                        result.data.push({ labelName: tooltip.toUpperCase(), controlVal: r, controlType: args[i].controlType, display: args[i].display, clean: g.fn });\n                    }\n                    // multi input abilities\n                    else {\n                        if (args[i].noLevel) {\n                            var attributeValue = function (attributeName) {\n                                return {fn: ko.computed(function () {\n                                    return self.getAbilityAttributeValue(self.abilities()[index].attributes, attributeName, 0);\n                                })};\n                            };\n                        }\n                        else {\n                            var attributeValue = function (attributeName) {\n                                return {fn: ko.computed(function () {\n                                    return self.getAbilityAttributeValue(self.abilities()[index].attributes, attributeName, self.abilities()[index].level());\n                                })};\n                            };\n                        }\n                        var g = attributeValue(args[i].attributeName)\n                        var r = self.getComputedFunction(v_list, g.fn, args[i].fn, parent, index, self, args[i].returnProperty, args[i].controls, data);\n                        if (args[i].ignoreTooltip) {\n                            var tooltip = args[i].label || args[i].attributeName;\n                        }\n                        else {\n                            var tooltip = self.getAbilityAttributeTooltip(self.abilities()[index].attributes, args[i].attributeName) || args[i].label || args[i].attributeName;\n                        }\n                        result.data.push({ labelName: tooltip.toUpperCase(), controlVal: r, controlType: args[i].controlType, display: args[i].display, clean: g.fn });\n                    }\n                    \n                    if (args[i].controlType == 'method') {\n                        v_list.push(r);\n                    }\n                break;\n            }\n        }\n        self.abilityControlData[data] = result;\n        return result;\n    }\n\n    self.getComputedFunction = function (v, attributeValue, fn, parent, index, abilityModel, returnProperty, controls, abilityName) {\n        var _ability = abilityModel.abilities().find(function(b) {\n            return b.name == abilityName;\n        });\n        return ko.pureComputed(function () {                \n            var inputValue;\n            if (controls == undefined) {\n                if (v == undefined) {\n                    inputValue = v;\n                }\n                else if (typeof v() == 'boolean') {\n                    inputValue = v();\n                }\n                else if (v.controlValueType == undefined) {\n                    inputValue = parseFloat(v());\n                }\n                else if (v.controlValueType == 'string') {\n                    inputValue = v();\n                }\n                else {\n                    inputValue = parseFloat(v());\n                }\n            }\n            else {\n                var v_list = [];\n                for (var i=0;i<controls.length;i++) {\n                    switch (typeof v[controls[i]]()) {\n                        case 'boolean':\n                        case 'object':\n                            v_list.push(v[controls[i]]());\n                        break;\n                        default:\n                            v_list.push(parseFloat(v[controls[i]]()));\n                        break;\n                    }\n                }\n                inputValue = v_list;\n            }\n            \n            var returnVal = fn.call(this, inputValue, attributeValue(), parent, index, abilityModel, _ability);\n            if (returnProperty != undefined) {\n                _ability[returnProperty](returnVal);\n            }\n            return returnVal;\n        }, this);\n    }\n    \n    self.getAbilityLevelByAbilityName = function (abilityName) {\n        for (var i = 0; i < self.abilities().length; i++) {\n            if (self._abilities[i].name == abilityName) {\n                return self._abilities[i].level();\n            }\n        }\n        return -1;\n    }\n\n    self.getAbilityByName = function (abilityName) {\n        for (var i = 0; i < self.abilities().length; i++) {\n            if (self._abilities[i].name == abilityName) {\n                return self._abilities[i];\n            }\n        }\n        return undefined;\n    }\n\n    self.getAbilityPropertyValue = function (ability, property) {\n        return parseFloat(ability[property]()[ability.level()-1]);\n    }\n    \n    self.getAttributeBonusLevel = function () {\n        for (var i = 0; i < self.abilities().length; i++) {\n            if (self._abilities[i].name == 'attribute_bonus') {\n                return self._abilities[i].level();\n            }\n        }\n        return 0;        \n    }\n    \n    self.getAllStatsReduction = ko.computed(function () {\n        var totalAttribute = 0;\n        for (var i = 0; i < self.abilities().length; i++) {\n            var ability = self._abilities[i];\n            if (ability.level() > 0 && (ability.isActive() || (ability.behavior.indexOf('DOTA_ABILITY_BEHAVIOR_PASSIVE') != -1))) {\n                if (!(ability.name in self.abilityData)) {                    \n                    for (var j = 0; j < self._abilities[i].attributes.length; j++) {\n                        var attribute = self._abilities[i].attributes[j];\n                        /*switch(attribute.name) {\n                            // invoker_quas\n                            case 'bonus_strength':\n                                totalAttribute += parseInt(attribute.value[ability.level()-1]);\n                            break;\n                        }*/\n                    }\n                }\n                else if (ability.bonusAllStatsReduction != undefined) {\n                    // slark_essence_shift\n                    totalAttribute+=ability.bonusAllStatsReduction();\n                }\n            }\n        }\n        return totalAttribute;\n    });\n    \n    self.getStrengthReduction = ko.computed(function () {\n        var totalAttribute = 0;\n        for (var i = 0; i < self.abilities().length; i++) {\n            var ability = self._abilities[i];\n            if (ability.level() > 0 && (ability.isActive() || (ability.behavior.indexOf('DOTA_ABILITY_BEHAVIOR_PASSIVE') != -1))) {\n                if (!(ability.name in self.abilityData)) {                    \n                    for (var j = 0; j < self._abilities[i].attributes.length; j++) {\n                        var attribute = self._abilities[i].attributes[j];\n                        /*switch(attribute.name) {\n                            // invoker_quas\n                            case 'bonus_strength':\n                                totalAttribute += parseInt(attribute.value[ability.level()-1]);\n                            break;\n                        }*/\n                    }\n                }\n                else if (ability.bonusStrength != undefined && ability.name == 'undying_decay') {\n                    // undying_decay\n                    totalAttribute-=ability.bonusStrength();\n                }\n            }\n        }\n        return totalAttribute;\n    });\n    \n    self.getStrength = ko.computed(function () {\n        var totalAttribute = 0;\n        for (var i = 0; i < self.abilities().length; i++) {\n            var ability = self._abilities[i];\n            if (ability.level() > 0) {\n                if (!(ability.name in self.abilityData)) {\n                    if (ability.isActive() || (ability.behavior.indexOf('DOTA_ABILITY_BEHAVIOR_PASSIVE') != -1)) {\n                        for (var j = 0; j < self._abilities[i].attributes.length; j++) {\n                            var attribute = self._abilities[i].attributes[j];\n                            /*switch(attribute.name) {\n                                // invoker_quas\n                                case 'bonus_strength':\n                                    totalAttribute += parseInt(attribute.value[ability.level()-1]);\n                                break;\n                            }*/\n                        }\n                    }\n                }\n                else {\n                    if (ability.bonusStrength != undefined) {\n                        if (ability.isActive() || (ability.behavior.indexOf('DOTA_ABILITY_BEHAVIOR_PASSIVE') != -1) || ability.name == 'invoker_quas') {\n                            // pudge_flesh_heap,invoker_quas,morphling_morph_str,morphling_morph_agi,undying_decay\n                            totalAttribute+=ability.bonusStrength();\n                        }\n                    }\n                    if (ability.bonusStrength2 != undefined) {\n                        if (ability.isActive() || (ability.behavior.indexOf('DOTA_ABILITY_BEHAVIOR_PASSIVE') != -1)) {\n                            // morphling_morph_str\n                            totalAttribute+=ability.bonusStrength2();\n                        }\n                    }\n                }\n            }\n        }\n        return totalAttribute;\n    });\n    \n    self.getAgility = ko.computed(function () {\n        var totalAttribute = 0;\n        for (var i = 0; i < self.abilities().length; i++) {\n            var ability = self._abilities[i];\n            if (ability.level() > 0) {\n                if (!(ability.name in self.abilityData)) {\n                    if (ability.isActive() || (ability.behavior.indexOf('DOTA_ABILITY_BEHAVIOR_PASSIVE') != -1)) {\n                        for (var j = 0; j < self._abilities[i].attributes.length; j++) {\n                            var attribute = self._abilities[i].attributes[j];\n                            switch(attribute.name) {\n                                // drow_ranger_marksmanship\n                                case 'marksmanship_agility_bonus':\n                                    totalAttribute += self.getAbilityAttributeValue(self._abilities[i].attributes, attribute.name, ability.level());\n                                break;\n                            }\n                        }\n                    }\n                }\n                else {\n                    if (ability.bonusAgility != undefined) {\n                        if (ability.isActive() || (ability.behavior.indexOf('DOTA_ABILITY_BEHAVIOR_PASSIVE') != -1) || ability.name == 'invoker_wex') {\n                            // invoker_wex,morphling_morph_agi,morphling_morph_str\n                            totalAttribute+=ability.bonusAgility();\n                        }\n                    }\n                    if (ability.bonusAgility2 != undefined) {\n                        if (ability.isActive() || (ability.behavior.indexOf('DOTA_ABILITY_BEHAVIOR_PASSIVE') != -1)) {\n                            // invoker_wex,morphling_morph_agi,morphling_morph_str\n                            totalAttribute+=ability.bonusAgility2();\n                        }\n                    }\n                }\n            }\n        }\n        return totalAttribute;\n    });\n\n    self.getIntelligence = ko.computed(function () {\n        var totalAttribute = 0;\n        for (var i = 0; i < self.abilities().length; i++) {\n            var ability = self._abilities[i];\n            if (ability.level() > 0) {\n                if (!(ability.name in self.abilityData)) {\n                    if (ability.isActive() || (ability.behavior.indexOf('DOTA_ABILITY_BEHAVIOR_PASSIVE') != -1)) {\n                        for (var j = 0; j < self._abilities[i].attributes.length; j++) {\n                            var attribute = self._abilities[i].attributes[j];\n                            switch(attribute.name) {\n                                // invoker_exort\n                            /*    case 'bonus_intelligence':\n                                    totalAttribute += self.getAbilityAttributeValue(self._abilities[i].attributes, attribute.name, ability.level());\n                                break;*/\n                            }\n                        }\n                    }\n                }\n                else if (ability.bonusInt != undefined) {\n                    if (ability.isActive() || (ability.behavior.indexOf('DOTA_ABILITY_BEHAVIOR_PASSIVE') != -1) || ability.name == 'invoker_exort') {\n                        // invoker_exort\n                        totalAttribute+=ability.bonusInt();\n                    }\n                }\n            }\n        }\n        return totalAttribute;\n    });\n    \n    self.getArmor = ko.computed(function () {\n        var totalAttribute = 0;\n        for (var i = 0; i < self.abilities().length; i++) {\n            var ability = self._abilities[i];\n            if (ability.level() > 0 && (ability.isActive() || (ability.behavior.indexOf('DOTA_ABILITY_BEHAVIOR_PASSIVE') != -1))) {\n                if (!(ability.name in self.abilityData)) {\n                    for (var j = 0; j < self._abilities[i].attributes.length; j++) {\n                        var attribute = self._abilities[i].attributes[j];\n                        switch(attribute.name) {\n                            // axe_berserkers_call,dragon_knight_dragon_blood,troll_warlord_berserkers_rage,lycan_shapeshift,enraged_wildkin_toughness_aura\n                            case 'bonus_armor':\n                                if (ability.name != 'templar_assassin_meld') {\n                                    totalAttribute += self.getAbilityAttributeValue(self._abilities[i].attributes, attribute.name, ability.level());\n                                }\n                            break;\n                            // sven_warcry\n                            case 'warcry_armor':\n                                totalAttribute += self.getAbilityAttributeValue(self._abilities[i].attributes, attribute.name, ability.level());\n                            break;\n                            // lich_frost_armor,ogre_magi_frost_armor\n                            case 'armor_bonus':\n                                if (ability.name == 'lich_frost_armor' || ability.name == 'ogre_magi_frost_armor') {\n                                    totalAttribute += self.getAbilityAttributeValue(self._abilities[i].attributes, attribute.name, ability.level());\n                                }\n                            break;\n                        }\n                    }\n                }\n                else if (ability.armor != undefined) {\n                    // shredder_reactive_armor,visage_gravekeepers_cloak\n                    totalAttribute+=ability.armor();\n                }\n            }\n        }\n        return totalAttribute;\n    });\n\n    self.getArmorBaseReduction = ko.computed(function () {\n        var totalAttribute = 1;\n        for (var i = 0; i < self.abilities().length; i++) {\n            var ability = self._abilities[i];\n            if (ability.level() > 0 && (ability.isActive() || (ability.behavior.indexOf('DOTA_ABILITY_BEHAVIOR_PASSIVE') != -1))) {\n                //if (!(ability.name in self.abilityData)) {\n                    switch(ability.name) {\n                        //elder_titan_natural_order\n                        case 'elder_titan_natural_order':\n                            totalAttribute *= (1-self.getAbilityAttributeValue(self._abilities[i].attributes, 'armor_reduction_pct', ability.level())/100);\n                        break;\n                    }\n                //}\n            }\n        }\n        return totalAttribute;\n    });\n    \n    self.getArmorReduction = ko.computed(function () {\n        var totalAttribute = 0;\n        for (var i = 0; i < self.abilities().length; i++) {\n            var ability = self._abilities[i];\n            if (ability.level() > 0 && (ability.isActive() || (ability.behavior.indexOf('DOTA_ABILITY_BEHAVIOR_PASSIVE') != -1))) {\n                if (!(ability.name in self.abilityData)) {\n                    switch(ability.name) {\n                        //templar_assassin_meld\n                        case 'templar_assassin_meld':\n                            totalAttribute += self.getAbilityAttributeValue(self._abilities[i].attributes, 'bonus_armor', ability.level());\n                        break;\n                        // tidehunter_gush\n                        case 'tidehunter_gush':\n                            totalAttribute += self.getAbilityAttributeValue(self._abilities[i].attributes, 'armor_bonus', ability.level());\n                        break;\n                        // naga_siren_rip_tide\n                        case 'naga_siren_rip_tide':\n                        // slardar_amplify_damage\n                        case 'slardar_amplify_damage':\n                        // vengefulspirit_wave_of_terror\n                        case 'vengefulspirit_wave_of_terror':\n                            totalAttribute += self.getAbilityAttributeValue(self._abilities[i].attributes, 'armor_reduction', ability.level());\n                        break;\n                        // nevermore_dark_lord\n                        case 'nevermore_dark_lord':\n                            totalAttribute += self.getAbilityAttributeValue(self._abilities[i].attributes, 'presence_armor_reduction', ability.level());\n                        break;\n                    }\n                }\n                else if (ability.armorReduction != undefined) {\n                    // alchemist_acid_spray\n                    totalAttribute+=ability.armorReduction();\n                }\n            }\n        }\n        return totalAttribute;\n    });\n\n    self.getHealth = ko.computed(function () {\n        var totalAttribute = 0;\n        for (var i = 0; i < self.abilities().length; i++) {\n            var ability = self._abilities[i];\n            if (ability.level() > 0 && (ability.isActive() || (ability.behavior.indexOf('DOTA_ABILITY_BEHAVIOR_PASSIVE') != -1))) {\n                if (!(ability.name in self.abilityData)) {\n                    for (var j = 0; j < self._abilities[i].attributes.length; j++) {\n                        var attribute = self._abilities[i].attributes[j];\n                        switch(attribute.name) {\n                            // lone_druid_true_form,lycan_shapeshift,troll_warlord_berserkers_rage\n                            case 'bonus_hp':\n                                totalAttribute += self.getAbilityAttributeValue(self._abilities[i].attributes, attribute.name, ability.level());\n                            break;\n                            // lone_druid_synergy\n                            case 'true_form_hp_bonus':\n                                if (self.isTrueFormActive()) {\n                                    totalAttribute += self.getAbilityAttributeValue(self._abilities[i].attributes, attribute.name, ability.level());\n                                }\n                            break;\n                        }\n                    }\n                }\n                else if (ability.bonusHealth != undefined) {\n                    // clinkz_death_pact\n                    totalAttribute+=ability.bonusHealth();\n                }\n            }\n        }\n        return totalAttribute;\n    });\n    \n    self.isTrueFormActive = function () {\n        for (var i = 0; i < self.abilities().length; i++) {\n            var ability = self._abilities[i];\n            if (ability.isActive() && ability.name == 'lone_druid_true_form') {\n                return true;\n            }\n        }\n        return false;\n    }\n\n    self.getHealthRegen = ko.computed(function () {\n        var totalAttribute = 0;\n        for (var i = 0; i < self.abilities().length; i++) {\n            var ability = self._abilities[i];\n            if (ability.level() > 0 && (ability.isActive() || (ability.behavior.indexOf('DOTA_ABILITY_BEHAVIOR_PASSIVE') != -1))) {\n                if (!(ability.name in self.abilityData)) {\n                    for (var j = 0; j < self._abilities[i].attributes.length; j++) {\n                        var attribute = self._abilities[i].attributes[j];\n                        switch(attribute.name) {\n                            // alchemist_chemical_rage, dragon_knight_dragon_blood\n                            case 'bonus_health_regen':\n                            // broodmother_spin_web\n                            case 'heath_regen':\n                            // omniknight_guardian_angel,treant_living_armor,satyr_hellcaller_unholy_aura\n                            case 'health_regen':\n                                totalAttribute += self.getAbilityAttributeValue(self._abilities[i].attributes, attribute.name, ability.level());\n                            break;\n                            // legion_commander_press_the_attack\n                            case 'hp_regen':\n                                totalAttribute += self.getAbilityAttributeValue(self._abilities[i].attributes, attribute.name, ability.level());\n                            break;\n                        }\n                    }\n                }\n                else if (ability.healthregen != undefined) {\n                    // shredder_reactive_armor,invoker_quas,necrolyte_sadist\n                    totalAttribute+=ability.healthregen();\n                }\n            }\n        }\n        return totalAttribute;\n    });\n\n    self.getMana = ko.computed(function () {\n        var totalAttribute = 0;\n        for (var i = 0; i < self.abilities().length; i++) {\n            var ability = self._abilities[i];\n            if (ability.level() > 0 && (ability.isActive() || (ability.behavior.indexOf('DOTA_ABILITY_BEHAVIOR_PASSIVE') != -1))) {\n                //if (!(ability.name in self.abilityData)) {\n                    for (var j = 0; j < self._abilities[i].attributes.length; j++) {\n                        var attribute = self._abilities[i].attributes[j];\n                        switch(attribute.name) {\n                            // obsidian_destroyer_essence_aura\n                            case 'bonus_mana':\n                                totalAttribute += self.getAbilityAttributeValue(self._abilities[i].attributes, attribute.name, ability.level());\n                            break;\n                        }\n                    }\n                //}\n            }\n        }\n        return totalAttribute;\n    });\n    \n    self.getManaRegen = ko.computed(function () {\n        var totalAttribute = 0;\n        for (var i = 0; i < self.abilities().length; i++) {\n            var ability = self._abilities[i];\n            if (ability.level() > 0 && (ability.isActive() || (ability.behavior.indexOf('DOTA_ABILITY_BEHAVIOR_PASSIVE') != -1))) {\n                if (!(ability.name in self.abilityData)) {\n                    for (var j = 0; j < self._abilities[i].attributes.length; j++) {\n                        var attribute = self._abilities[i].attributes[j];\n                        switch(attribute.name) {\n                            // alchemist_chemical_rage\n                            case 'bonus_mana_regen':\n                                totalAttribute += self.getAbilityAttributeValue(self._abilities[i].attributes, attribute.name, ability.level());\n                            break;\n                        }\n                    }\n                }\n                else if (ability.manaregen != undefined) {\n                    // necrolyte_sadist\n                    totalAttribute+=ability.manaregen();\n                }\n            }\n        }\n        return totalAttribute;\n    });\n    \n    self.getManaRegenArcaneAura = ko.computed(function () {\n        var totalAttribute = 0;\n        for (var i = 0; i < self.abilities().length; i++) {\n            var ability = self._abilities[i];\n            if (ability.level() > 0 && (ability.isActive() || (ability.behavior.indexOf('DOTA_ABILITY_BEHAVIOR_PASSIVE') != -1))) {\n                //if (!(ability.name in self.abilityData)) {\n                    for (var j = 0; j < self._abilities[i].attributes.length; j++) {\n                        var attribute = self._abilities[i].attributes[j];\n                        switch(attribute.name) {\n                            // crystal_maiden_brilliance_aura\n                            case 'mana_regen':\n                                if (ability.name == 'crystal_maiden_brilliance_aura') {\n                                    totalAttribute += self.getAbilityAttributeValue(self._abilities[i].attributes, attribute.name, ability.level());\n                                }\n                            break;\n                        }\n                    }\n                //}\n            }\n        }\n        return totalAttribute;\n    });\n\n    self.getManaRegenReduction = ko.computed(function () {\n        var totalAttribute = 0;\n        for (var i = 0; i < self.abilities().length; i++) {\n            var ability = self._abilities[i];\n            if (ability.level() > 0 && (ability.isActive() || (ability.behavior.indexOf('DOTA_ABILITY_BEHAVIOR_PASSIVE') != -1))) {\n                /*if (!(ability.name in self.abilityData)) {\n                    for (var j = 0; j < self._abilities[i].attributes.length; j++) {\n                        var attribute = self._abilities[i].attributes[j];\n                        //switch(attribute.name) {\n                        //    // \n                        //    case '':\n                        //        totalAttribute += parseInt(attribute.value[ability.level()-1]);\n                        //    break;\n                        //}\n                    }\n                }\n                else*/ if (ability.manaregenreduction != undefined) {\n                    // pugna_nether_ward\n                    totalAttribute+=ability.manaregenreduction();\n                }\n            }\n        }\n        return totalAttribute;\n    });\n    \n    self.getAttackRange = ko.computed(function () {\n        var totalAttribute = 0;\n        for (var i = 0; i < self.abilities().length; i++) {\n            var ability = self._abilities[i];\n            if (ability.level() > 0) {\n                if (!(ability.name in self.abilityData)) {\n                    if (ability.isActive() || (ability.behavior.indexOf('DOTA_ABILITY_BEHAVIOR_PASSIVE') != -1)) {\n                        for (var j = 0; j < self._abilities[i].attributes.length; j++) {\n                            var attribute = self._abilities[i].attributes[j];\n                            switch(attribute.name) {\n                                // winter_wyvern_arctic_burn\n                                case 'attack_range_bonus':\n                                // templar_assassin_psi_blades,sniper_take_aim\n                                case 'bonus_attack_range':\n                                    totalAttribute += self.getAbilityAttributeValue(self._abilities[i].attributes, attribute.name, ability.level());\n                                break;\n                                // terrorblade_metamorphosis,troll_warlord_berserkers_rage\n                                case 'bonus_range':\n                                    if (ability.name == 'terrorblade_metamorphosis') {\n                                        totalAttribute += self.getAbilityAttributeValue(self._abilities[i].attributes, attribute.name, ability.level());\n                                    }\n                                    if (ability.name == 'troll_warlord_berserkers_rage') {\n                                        totalAttribute -= self.getAbilityAttributeValue(self._abilities[i].attributes, attribute.name, ability.level());\n                                    }\n                                break;\n                                // tiny_grow\n                                case 'bonus_range_scepter':\n                                    if (ability.name == 'tiny_grow' && self.hasScepter()) {\n                                        totalAttribute += self.getAbilityAttributeValue(self._abilities[i].attributes, attribute.name, ability.level());\n                                    }\n                                break;\n                                // enchantress_impetus\n                                case 'bonus_attack_range_scepter':\n                                    if (ability.name == 'enchantress_impetus' && self.hasScepter()) {\n                                        totalAttribute += self.getAbilityAttributeValue(self._abilities[i].attributes, attribute.name, ability.level());\n                                    }\n                                break;\n                            }\n                        }\n                        // lone_druid_true_form\n                        if (ability.name == 'lone_druid_true_form') {\n                            totalAttribute -= 422;\n                        }\n                    }\n                    else if (ability.name == 'enchantress_impetus' && self.hasScepter()) {\n                        for (var j = 0; j < self._abilities[i].attributes.length; j++) {\n                            var attribute = self._abilities[i].attributes[j];\n                            switch(attribute.name) {\n                              case 'bonus_attack_range_scepter':\n                                totalAttribute += self.getAbilityAttributeValue(self._abilities[i].attributes, attribute.name, ability.level());\n                              break;\n                            }\n                        }\n                    }\n                }\n                else if (ability.attackrange != undefined) {\n                    if (ability.isActive() || (ability.behavior.indexOf('DOTA_ABILITY_BEHAVIOR_PASSIVE') != -1)) {\n                        // dragon_knight_elder_dragon_form\n                        totalAttribute+=ability.attackrange();\n                    }\n                }\n            }\n        }\n        return totalAttribute;\n    });\n    \n    self.getAttackSpeed = ko.computed(function () {\n        var totalAttribute = 0;\n        for (var i = 0; i < self.abilities().length; i++) {\n            var ability = self._abilities[i];\n            if (ability.level() > 0 && (ability.isActive() || (ability.behavior.indexOf('DOTA_ABILITY_BEHAVIOR_PASSIVE') != -1))) {\n                if (!(ability.name in self.abilityData)) {\n                    for (var j = 0; j < self._abilities[i].attributes.length; j++) {\n                        var attribute = self._abilities[i].attributes[j];\n                        switch(attribute.name) {\n                            // abaddon_frostmourne,troll_warlord_battle_trance\n                            case 'attack_speed':\n                            // visage_grave_chill\n                            case 'attackspeed_bonus':\n                            // mirana_leap\n                            case 'leap_speedbonus_as':\n                            // life_stealer\n                            case 'attack_speed_bonus':\n                                totalAttribute += self.getAbilityAttributeValue(self._abilities[i].attributes, attribute.name, ability.level());\n                            break;\n                            // clinkz_strafe,ursa_overpower\n                            case 'attack_speed_bonus_pct':\n                                if (ability.name == 'clinkz_strafe' || ability.name == 'ursa_overpower') {\n                                    totalAttribute += self.getAbilityAttributeValue(self._abilities[i].attributes, attribute.name, ability.level());\n                                }\n                            break;\n                            // axe_culling_blade,necronomicon_archer_aoe\n                            case 'speed_bonus':\n                                if (ability.name == 'axe_culling_blade' || ability.name == 'necronomicon_archer_aoe') {\n                                    totalAttribute += self.getAbilityAttributeValue(self._abilities[i].attributes, attribute.name, ability.level());\n                                }\n                            break;\n                            // ancient_apparition_chilling_touch\n                            case 'attack_speed_pct':\n                                if (ability.name == 'ancient_apparition_chilling_touch') {\n                                    totalAttribute += self.getAbilityAttributeValue(self._abilities[i].attributes, attribute.name, ability.level());\n                                }\n                            break;\n                            // beastmaster_inner_beast,lycan_feral_impulse,lone_druid_rabid,tiny_grow,phantom_assassin_phantom_strike,windrunner_focusfire,ogre_magi_bloodlust,centaur_khan_endurance_aura\n                            case 'bonus_attack_speed':\n                                if (ability.name == 'beastmaster_inner_beast' \n                                 || ability.name == 'lycan_feral_impulse' \n                                 || ability.name == 'lone_druid_rabid' \n                                 || ability.name == 'tiny_grow' \n                                 || ability.name == 'phantom_assassin_phantom_strike' \n                                 || ability.name == 'windrunner_focusfire' \n                                 || ability.name == 'ogre_magi_bloodlust'\n                                 || ability.name == 'centaur_khan_endurance_aura') {\n                                    totalAttribute += self.getAbilityAttributeValue(self._abilities[i].attributes, attribute.name, ability.level());\n                                }\n                            break;\n                        }\n                    }\n                }\n                else if (ability.attackspeed != undefined) {\n                    // troll_warlord_fervor,wisp_overcharge,lina_fiery_soul,invoker_alacrity,invoker_wex,huskar_berserkers_blood\n                    totalAttribute+=ability.attackspeed();\n                }\n            }\n        }\n        return totalAttribute;\n    });\n\n    self.getAttackSpeedReduction = ko.computed(function () {\n        var totalAttribute = 0;\n        for (var i = 0; i < self.abilities().length; i++) {\n            var ability = self._abilities[i];\n            if (ability.level() > 0 && (ability.isActive() || (ability.behavior.indexOf('DOTA_ABILITY_BEHAVIOR_PASSIVE') != -1))) {\n                if (!(ability.name in self.abilityData)) {\n                    for (var j = 0; j < self._abilities[i].attributes.length; j++) {\n                        var attribute = self._abilities[i].attributes[j];\n                        switch(attribute.name) {\n                            // night_stalker_void,crystal_maiden_crystal_nova,ghost_frost_attack,ogre_magi_frost_armor,polar_furbolg_ursa_warrior_thunder_clap\n                            case 'attackspeed_slow':\n                            // lich_frost_armor,lich_frost_nova,enchantress_untouchable\n                            case 'slow_attack_speed':\n                            // beastmaster_primal_roar\n                            case 'slow_attack_speed_pct':\n                            // storm_spirit_overload\n                            case 'overload_attack_slow':\n                                totalAttribute += self.getAbilityAttributeValue(self._abilities[i].attributes, attribute.name, ability.level());\n                            break;\n                            // omniknight_degen_aura\n                            case 'speed_bonus':\n                                if (ability.name == 'omniknight_degen_aura') {\n                                    totalAttribute += self.getAbilityAttributeValue(self._abilities[i].attributes, attribute.name, ability.level());\n                                }\n                            break;\n                            // tusk_frozen_sigil,crystal_maiden_freezing_field\n                            case 'attack_slow':\n                                if (ability.name == 'crystal_maiden_freezing_field' && !self.hasScepter()) {\n                                    totalAttribute += self.getAbilityAttributeValue(self._abilities[i].attributes, attribute.name, ability.level());\n                                }\n                                else if (ability.name == 'tusk_frozen_sigil') {\n                                    totalAttribute -= self.getAbilityAttributeValue(self._abilities[i].attributes, attribute.name, ability.level());\n                                }\n                            break;\n                            case 'attack_slow_scepter':\n                                if (ability.name == 'crystal_maiden_freezing_field' && self.hasScepter()) {\n                                    totalAttribute += self.getAbilityAttributeValue(self._abilities[i].attributes, attribute.name, ability.level());\n                                }\n                            break;\n                            // faceless_void_time_walk\n                            case 'attack_speed_pct':\n                                if (ability.name == 'faceless_void_time_walk') {\n                                    totalAttribute += self.getAbilityAttributeValue(self._abilities[i].attributes, attribute.name, ability.level());\n                                }\n                            break;\n                            // bounty_hunter_jinada\n                            case 'bonus_attackspeed':\n                                if (ability.name == 'bounty_hunter_jinada') {\n                                    totalAttribute += self.getAbilityAttributeValue(self._abilities[i].attributes, attribute.name, ability.level());\n                                }\n                            break;\n                            // brewmaster_thunder_clap\n                            case 'attack_speed_slow':\n                                if (ability.name == 'brewmaster_thunder_clap') {\n                                    totalAttribute -= self.getAbilityAttributeValue(self._abilities[i].attributes, attribute.name, ability.level());\n                                }\n                            break;\n                            // medusa_stone_gaze\n                            case 'slow':\n                                if (ability.name == 'medusa_stone_gaze') {\n                                    totalAttribute -= self.getAbilityAttributeValue(self._abilities[i].attributes, attribute.name, ability.level());\n                                }\n                            break;\n                            // visage_grave_chill\n                            case 'attackspeed_bonus':\n                                totalAttribute -= self.getAbilityAttributeValue(self._abilities[i].attributes, attribute.name, ability.level());\n                            break;\n                            // abaddon_frostmourne\n                            case 'attack_slow_tooltip':\n                                if (ability.name == 'abaddon_frostmourne') {\n                                    totalAttribute -= self.getAbilityAttributeValue(self._abilities[i].attributes, attribute.name, ability.level());\n                                }\n                            break;\n                        }\n                    }\n                    if (ability.name == 'enraged_wildkin_tornado') {\n                        totalAttribute -= 15;\n                    }\n                }\n                else if (ability.attackspeedreduction != undefined) {\n                    // viper_viper_strike,viper_corrosive_skin,jakiro_liquid_fire,lich_chain_frost,sandking_epicenter,earth_spirit_rolling_boulder\n                    totalAttribute+=ability.attackspeedreduction();\n                }\n            }\n        }\n        return totalAttribute;\n    });\n    self.getBash = ko.computed(function () {\n        var totalAttribute = 1;\n        for (var i = 0; i < self.abilities().length; i++) {\n            var ability = self._abilities[i];\n            if (ability.level() > 0 && (ability.isActive() || (ability.behavior.indexOf('DOTA_ABILITY_BEHAVIOR_PASSIVE') != -1))) {\n                if (!(ability.name in self.abilityData)) {\n                    for (var j = 0; j < self._abilities[i].attributes.length; j++) {\n                        var attribute = self._abilities[i].attributes[j];\n                        switch(attribute.name) {\n                            // slardar_bash\n                            case 'chance':\n                            // sniper_headshot\n                            case 'proc_chance':\n                                totalAttribute *= (1 - self.getAbilityAttributeValue(self._abilities[i].attributes, attribute.name, ability.level())/100);\n                            break;\n                        }\n                    }\n                }\n                else if (ability.bash != undefined) {\n                    // spirit_breaker_greater_bash,faceless_void_time_lock\n                    totalAttribute *= (1 - ability.bash()/100);\n                }\n            }\n        }\n        return totalAttribute;\n    });    \n    self.getBaseDamage = ko.computed(function () {\n        var totalAttribute = 0;\n        var totalMultiplier = 1;\n        var sources = {};\n        for (var i = 0; i < self.abilities().length; i++) {\n            var ability = self._abilities[i];\n            if (ability.level() > 0 && (ability.isActive() || (ability.behavior.indexOf('DOTA_ABILITY_BEHAVIOR_PASSIVE') != -1))) {\n                if (!(ability.name in self.abilityData)) {\n                    for (var j = 0; j < self._abilities[i].attributes.length; j++) {\n                        var attribute = self._abilities[i].attributes[j];\n                        switch(attribute.name) {\n                            // tiny_grow,terrorblade_metamorphosis\n                            case 'bonus_damage':\n                                if (ability.name == 'tiny_grow' || ability.name == 'terrorblade_metamorphosis') {\n                                    totalAttribute += self.getAbilityAttributeValue(self._abilities[i].attributes, attribute.name, ability.level());\n                                    sources[ability.name] = {\n                                        'damage': self.getAbilityAttributeValue(self._abilities[i].attributes, attribute.name, ability.level()),\n                                        'damageType': 'physical',\n                                        'displayname': ability.displayname\n                                    }\n                                }\n                            break;\n                        }\n                    }\n                }\n                else {\n                    if (ability.baseDamageMultiplier != undefined) {\n                        // earthshaker_enchant_totem\n                        totalMultiplier += ability.baseDamageMultiplier()/100;\n                        /*totalAttribute += ability.baseDamage();\n                        sources[ability.name] = {\n                            'damage': ability.baseDamage(),\n                            'damageType': 'physical',\n                            'displayname': ability.displayname\n                        }*/\n                    }\n                    if (ability.baseDamage != undefined) {\n                        // clinkz_death_pact\n                        totalAttribute += ability.baseDamage();\n                        sources[ability.name] = {\n                            'damage': ability.baseDamage(),\n                            'damageType': 'physical',\n                            'displayname': ability.displayname\n                        }\n                    }\n                }\n            }\n        }\n        return { sources: sources, total: totalAttribute, multiplier: totalMultiplier };\n    });\n    \n    self.getSelfBaseDamageReductionPct = ko.computed(function () {\n        var totalAttribute = 1;\n        for (var i = 0; i < self.abilities().length; i++) {\n            var ability = self._abilities[i];\n            if (ability.level() > 0 && (ability.isActive() || (ability.behavior.indexOf('DOTA_ABILITY_BEHAVIOR_PASSIVE') != -1))) {\n                if (!(ability.name in self.abilityData)) {\n                    for (var j = 0; j < self._abilities[i].attributes.length; j++) {\n                        var attribute = self._abilities[i].attributes[j];\n                        switch(attribute.name) {\n                            // medusa_split_shot\n                            case 'damage_modifier':\n                                totalAttribute *= (1 + self.getAbilityAttributeValue(self._abilities[i].attributes, attribute.name, ability.level())/100);\n                            break;\n                            // windrunner_focusfire\n                            case 'focusfire_damage_reduction':\n                                if (!self.hasScepter()) {\n                                    totalAttribute *= (1 + self.getAbilityAttributeValue(self._abilities[i].attributes, attribute.name, ability.level())/100);\n                                }\n                            break;\n                            case 'focusfire_damage_reduction_scepter':\n                                if (self.hasScepter()) {\n                                    totalAttribute *= (1 + self.getAbilityAttributeValue(self._abilities[i].attributes, attribute.name, ability.level())/100);\n                                }\n                            break;\n                        }\n                    }\n                }\n            }\n        }\n        return totalAttribute;\n    });\n    \n    self.getBaseDamageReductionPct = ko.computed(function () {\n        var totalAttribute = 1;\n        for (var i = 0; i < self.abilities().length; i++) {\n            var ability = self._abilities[i];\n            if (ability.level() > 0 && (ability.isActive() || (ability.behavior.indexOf('DOTA_ABILITY_BEHAVIOR_PASSIVE') != -1))) {\n                if (!(ability.name in self.abilityData)) {\n                    for (var j = 0; j < self._abilities[i].attributes.length; j++) {\n                        var attribute = self._abilities[i].attributes[j];\n                        switch(attribute.name) {\n                            // vengefulspirit_command_aura\n                            case 'bonus_damage_pct':\n                                if (ability.name == 'vengefulspirit_command_aura') {\n                                    totalAttribute *= (1 - self.getAbilityAttributeValue(self._abilities[i].attributes, attribute.name, ability.level())/100);\n                                }\n                            break;\n                        }\n                    }\n                }\n                else if (ability.baseDamageReductionPct != undefined) {\n                    // nevermore_requiem\n                    totalAttribute *= (1 + ability.baseDamageReductionPct()/100);\n                }\n            }\n        }\n        return totalAttribute;\n    });\n    \n    self.getBAT = ko.computed(function () {\n        var totalAttribute = 0;\n        for (var i = 0; i < self.abilities().length; i++) {\n            var ability = self._abilities[i];\n            if (ability.level() > 0 && (ability.isActive() || (ability.behavior.indexOf('DOTA_ABILITY_BEHAVIOR_PASSIVE') != -1))) {\n                if (!(ability.name in self.abilityData)) {\n                    for (var j = 0; j < self._abilities[i].attributes.length; j++) {\n                        var attribute = self._abilities[i].attributes[j];\n                        switch(attribute.name) {\n                            // troll_warlord_berserkers_rage,alchemist_chemical_rage,lone_druid_true_form,lycan_shapeshift\n                            case 'base_attack_time':\n                                totalAttribute += self.getAbilityAttributeValue(self._abilities[i].attributes, attribute.name, ability.level());\n                            break;\n                        }\n                    }\n                }\n            }\n        }\n        return totalAttribute;\n    });\n    self.getBonusDamage = ko.computed(function () {\n        var totalAttribute = 0;\n        var sources = {};\n        for (var i = 0; i < self.abilities().length; i++) {\n            var ability = self._abilities[i];\n            if (ability.level() > 0 && (ability.isActive() || (ability.behavior.indexOf('DOTA_ABILITY_BEHAVIOR_PASSIVE') != -1))) {\n                if (!(ability.name in self.abilityData)) {\n                    for (var j = 0; j < self._abilities[i].attributes.length; j++) {\n                        var attribute = self._abilities[i].attributes[j];\n                        switch(attribute.name) {\n                            // broodmother_insatiable_hunger,luna_lunar_blessing,templar_assassin_refraction,templar_assassin_meld,troll_warlord_berserkers_rage,lone_druid_true_form_battle_cry\n                            case 'bonus_damage':\n                                if (ability.name == 'broodmother_insatiable_hunger' || ability.name == 'luna_lunar_blessing'\n                                 || ability.name == 'templar_assassin_refraction' || ability.name == 'templar_assassin_meld'\n                                 || ability.name == 'troll_warlord_berserkers_rage' || ability.name == 'lone_druid_true_form_battle_cry') {\n                                    totalAttribute += self.getAbilityAttributeValue(self._abilities[i].attributes, attribute.name, ability.level());\n                                    sources[ability.name] = {\n                                        'damage': self.getAbilityAttributeValue(self._abilities[i].attributes, attribute.name, ability.level()),\n                                        'damageType': 'physical',\n                                        'displayname': ability.displayname\n                                    }\n                                }\n                            break;\n                            // lycan_howl\n                            case 'hero_bonus_damage':\n                                totalAttribute += self.getAbilityAttributeValue(self._abilities[i].attributes, attribute.name, ability.level());\n                                sources[ability.name] = {\n                                    'damage': self.getAbilityAttributeValue(self._abilities[i].attributes, attribute.name, ability.level()),\n                                    'damageType': 'physical',\n                                    'displayname': ability.displayname\n                                }\n                            break;\n                        }\n                    }\n                    if (ability.name == 'storm_spirit_overload') {\n                        totalAttribute += self.getAbilityPropertyValue(ability, 'damage');\n                        sources[ability.name] = {\n                            'damage': self.getAbilityPropertyValue(ability, 'damage'),\n                            'damageType': 'magic',\n                            'displayname': ability.displayname\n                        }                        \n                    }\n                }\n                else if (ability.bonusDamage != undefined && ability.bonusDamage() != 0) {\n                    // nevermore_necromastery,ursa_fury_swipes,ursa_enrage,invoker_alacrity,invoker_exort,elder_titan_ancestral_spirit,spectre_desolate,razor_static_link\n                    totalAttribute+=ability.bonusDamage();\n                    sources[ability.name] = {\n                        'damage': ability.bonusDamage(),\n                        'damageType': ability.name == 'spectre_desolate' ? 'pure' : 'physical',\n                        'displayname': ability.displayname\n                    }\n                }\n            }\n        }\n        return { sources: sources, total: totalAttribute };\n    });\n\n    self.getBonusDamagePercent = ko.computed(function () {\n        var totalAttribute = 0;\n        var sources = {};\n        for (var i = 0; i < self.abilities().length; i++) {\n            var ability = self._abilities[i];\n            if (ability.level() > 0 && (ability.isActive() || (ability.behavior.indexOf('DOTA_ABILITY_BEHAVIOR_PASSIVE') != -1))) {\n                if (!(ability.name in self.abilityData)) {\n                    for (var j = 0; j < self._abilities[i].attributes.length; j++) {\n                        var attribute = self._abilities[i].attributes[j];\n                        switch(attribute.name) {\n                            // bloodseeker_bloodrage\n                            case 'damage_increase_pct':\n                                if (ability.name == 'bloodseeker_bloodrage') {\n                                    totalAttribute += self.getAbilityAttributeValue(self._abilities[i].attributes, attribute.name, ability.level())/100;\n                                    sources[ability.name] = {\n                                        'damage': self.getAbilityAttributeValue(self._abilities[i].attributes, attribute.name, ability.level())/100,\n                                        'damageType': 'physical',\n                                        'displayname': ability.displayname\n                                    }\n                                }\n                            break;\n                            // magnataur_empower,vengefulspirit_command_aura,alpha_wolf_command_aura\n                            case 'bonus_damage_pct':\n                                if (ability.name == 'magnataur_empower' || ability.name == 'vengefulspirit_command_aura' || ability.name == 'alpha_wolf_command_aura') {\n                                    totalAttribute += self.getAbilityAttributeValue(self._abilities[i].attributes, attribute.name, ability.level())/100;\n                                    sources[ability.name] = {\n                                        'damage': self.getAbilityAttributeValue(self._abilities[i].attributes, attribute.name, ability.level())/100,\n                                        'damageType': 'physical',\n                                        'displayname': ability.displayname\n                                    }\n                                }\n                            break;\n                            // sven_gods_strength\n                            case 'gods_strength_damage':\n                                if (ability.name == 'sven_gods_strength' && self.hero != undefined && self.hero.heroId() == 'sven') {\n                                    totalAttribute += self.getAbilityAttributeValue(self._abilities[i].attributes, attribute.name, ability.level())/100;\n                                    sources[ability.name] = {\n                                        'damage': self.getAbilityAttributeValue(self._abilities[i].attributes, attribute.name, ability.level())/100,\n                                        'damageType': 'physical',\n                                        'displayname': ability.displayname\n                                    }\n                                }\n                            break;\n                            case 'gods_strength_damage_scepter':\n                                if (ability.name == 'sven_gods_strength' && self.hero == undefined) {\n                                    totalAttribute += self.getAbilityAttributeValue(self._abilities[i].attributes, attribute.name, ability.level())/100;\n                                    sources[ability.name] = {\n                                        'damage': self.getAbilityAttributeValue(self._abilities[i].attributes, attribute.name, ability.level())/100,\n                                        'damageType': 'physical',\n                                        'displayname': ability.displayname\n                                    }\n                                }\n                            break;\n                        }\n                    }\n                }\n                /*else if (ability.bonusDamagePct != undefined && ability.bonusDamagePct() != 0) {\n                    // bloodseeker_bloodrage\n                    // totalAttribute+=ability.bonusDamagePct()/100;\n                    // sources[ability.name] = {\n                        // 'damage': ability.bonusDamagePct()/100,\n                        // 'damageType': 'physical',\n                        // 'displayname': ability.displayname\n                    // }\n                }*/\n            }\n        }\n        return { sources: sources, total: totalAttribute };\n    });\n\n    self.getBonusDamageBackstab = ko.computed(function () {\n        var totalAttribute1 = 0;\n        var totalAttribute2 = 0;\n        var sources = [];\n        for (var i = 0; i < self.abilities().length; i++) {\n            var ability = self._abilities[i];\n            if (ability.name == 'riki_backstab') {\n                if (ability.level() > 0 && (ability.isActive() || (ability.behavior.indexOf('DOTA_ABILITY_BEHAVIOR_PASSIVE') != -1))) {\n                    for (var j = 0; j < self._abilities[i].attributes.length; j++) {\n                        var attribute = self._abilities[i].attributes[j];\n                        switch(attribute.name) {\n                            // riki_backstab\n                            case 'damage_multiplier':\n                                totalAttribute1 += self.getAbilityAttributeValue(self._abilities[i].attributes, attribute.name, ability.level());\n                                sources.push({\n                                    'damage': self.getAbilityAttributeValue(self._abilities[i].attributes, attribute.name, ability.level()),\n                                    'damageType': 'physical',\n                                    'displayname': ability.displayname\n                                });\n                            break;\n                        }\n                    }/*\n                    if (ability.bonusDamageBackstab != undefined) {\n                        console.log('bonusDamageBackstab');\n                        // damage_multiplier\n                        totalAttribute2+=ability.bonusDamageBackstab();\n                        sources.push({\n                            'damage': ability.bonusDamageBackstab(),\n                            'damageType': 'physical',\n                            'displayname': ability.displayname\n                        });\n                    }\n                    */\n                }\n            }\n        }\n        return { sources: sources, total: [totalAttribute1,totalAttribute2] };\n    });\n    \n    self.getBonusDamagePrecisionAura = ko.computed(function () {\n        var totalAttribute1 = 0;\n        var totalAttribute2 = 0;\n        var sources = [];\n        for (var i = 0; i < self.abilities().length; i++) {\n            var ability = self._abilities[i];\n            if (ability.name == 'drow_ranger_trueshot') {\n                if (ability.level() > 0 && (ability.isActive() || (ability.behavior.indexOf('DOTA_ABILITY_BEHAVIOR_PASSIVE') != -1))) {\n                    for (var j = 0; j < self._abilities[i].attributes.length; j++) {\n                        var attribute = self._abilities[i].attributes[j];\n                        switch(attribute.name) {\n                            // drow_ranger_trueshot\n                            case 'trueshot_ranged_damage':\n                                totalAttribute1 += self.getAbilityAttributeValue(self._abilities[i].attributes, attribute.name, ability.level())/100;\n                                sources.push({\n                                    'damage': self.getAbilityAttributeValue(self._abilities[i].attributes, attribute.name, ability.level())/100,\n                                    'damageType': 'physical',\n                                    'displayname': ability.displayname\n                                });\n                            break;\n                        }\n                    }\n                    if (ability.bonusDamagePrecisionAura != undefined) {\n                        // drow_ranger_trueshot\n                        totalAttribute2+=ability.bonusDamagePrecisionAura();\n                        sources.push({\n                            'damage': ability.bonusDamagePrecisionAura(),\n                            'damageType': 'physical',\n                            'displayname': ability.displayname\n                        });\n                    }\n                }\n            }\n        }\n        return { sources: sources, total: [totalAttribute1,totalAttribute2] };\n    });\n    \n    self.getBonusDamageReduction = ko.computed(function () {\n        var totalAttribute = 0;\n        for (var i = 0; i < self.abilities().length; i++) {\n            var ability = self._abilities[i];\n            if (ability.level() > 0 && (ability.isActive() || (ability.behavior.indexOf('DOTA_ABILITY_BEHAVIOR_PASSIVE') != -1))) {\n                if (!(ability.name in self.abilityData)) {\n                    for (var j = 0; j < self._abilities[i].attributes.length; j++) {\n                        var attribute = self._abilities[i].attributes[j];\n                        switch(attribute.name) {\n                            // bane_enfeeble\n                            case 'enfeeble_attack_reduction':\n                                totalAttribute += self.getAbilityAttributeValue(self._abilities[i].attributes, attribute.name, ability.level());\n                            break;\n                        }\n                    }\n                }\n                else if (ability.bonusDamageReduction != undefined) {\n                    // rubick_fade_bolt,razor_static_link\n                    totalAttribute+=ability.bonusDamageReduction();\n                }\n            }\n        }\n        return totalAttribute;\n    });\n    \n    self.getBonusDamageReductionPct = ko.computed(function () {\n        var totalAttribute = 1;\n        for (var i = 0; i < self.abilities().length; i++) {\n            var ability = self._abilities[i];\n            if (ability.level() > 0 && (ability.isActive() || (ability.behavior.indexOf('DOTA_ABILITY_BEHAVIOR_PASSIVE') != -1))) {\n                if (!(ability.name in self.abilityData)) {\n                    for (var j = 0; j < self._abilities[i].attributes.length; j++) {\n                        var attribute = self._abilities[i].attributes[j];\n                        switch(attribute.name) {\n                            // medusa_split_shot\n                            case 'damage_modifier':\n                                totalAttribute *= (1 + self.getAbilityAttributeValue(self._abilities[i].attributes, attribute.name, ability.level())/100);\n                            break;\n                            // windrunner_focusfire\n                            case 'focusfire_damage_reduction':\n                                if (!self.hasScepter()) {\n                                    totalAttribute *= (1 + self.getAbilityAttributeValue(self._abilities[i].attributes, attribute.name, ability.level())/100);\n                                }\n                            break;\n                            case 'focusfire_damage_reduction_scepter':\n                                if (self.hasScepter()) {\n                                    totalAttribute *= (1 + self.getAbilityAttributeValue(self._abilities[i].attributes, attribute.name, ability.level())/100);\n                                }\n                            break;\n                        }\n                    }\n                }\n            }\n        }\n        return totalAttribute;\n    });\n\n    self.getDamageAmplification = ko.computed(function () {\n        var totalAttribute = 1;\n        for (var i = 0; i < self.abilities().length; i++) {\n            var ability = self._abilities[i];\n            if (ability.level() > 0 && (ability.isActive() || (ability.behavior.indexOf('DOTA_ABILITY_BEHAVIOR_PASSIVE') != -1))) {\n                /*if (!(ability.name in self.abilityData)) {\n                    if (ability.level() > 0 && (ability.isActive() || (ability.behavior.indexOf('DOTA_ABILITY_BEHAVIOR_PASSIVE') != -1))) {\n                        for (var j = 0; j < self._abilities[i].attributes.length; j++) {\n                            var attribute = self._abilities[i].attributes[j];\n                            switch(attribute.name) {\n                                // bane_enfeeble\n                                case 'enfeeble_attack_reduction':\n                                    totalAttribute += self.getAbilityAttributeValue(self._abilities[i].attributes, attribute.name, ability.level());\n                                break;\n                            }\n                        }\n                    }\n                }\n                else*/ if (ability.damageAmplification != undefined) {\n                        // undying_flesh_golem\n                        totalAttribute *= (1 + ability.damageAmplification()/100);\n                }\n            }\n        }\n        return totalAttribute;\n    });\n    \n    self.getDamageReduction = ko.computed(function () {\n        var totalAttribute = 1;\n        for (var i = 0; i < self.abilities().length; i++) {\n            var ability = self._abilities[i];\n            if (ability.level() > 0 && (ability.isActive() || (ability.behavior.indexOf('DOTA_ABILITY_BEHAVIOR_PASSIVE') != -1))) {\n                if (!(ability.name in self.abilityData)) {\n                    for (var j = 0; j < self._abilities[i].attributes.length; j++) {\n                        var attribute = self._abilities[i].attributes[j];\n                        switch(attribute.name) {\n                            // bloodseeker_bloodrage\n                            case 'damage_increase_pct':\n                                if (ability.name == 'bloodseeker_bloodrage') {\n                                    totalAttribute *= (1 + self.getAbilityAttributeValue(self._abilities[i].attributes, attribute.name, ability.level())/100);\n                                }\n                            break;\n                        }\n                    }\n                    // kunkka_ghostship\n                    if (ability.name == 'kunkka_ghostship') {\n                        totalAttribute *= (1 - 50/100);\n                    }\n                }\n                else if (ability.damageReduction != undefined) {\n                    // wisp_overcharge,bristleback_bristleback,spectre_dispersion,medusa_mana_shield,ursa_enrage\n                    totalAttribute *= (1 + ability.damageReduction()/100);\n                }\n            }\n        }\n        return totalAttribute;\n    });\n\n    self.getCritSource = ko.computed(function () {\n        var sources = {};\n        for (var i = 0; i < self.abilities().length; i++) {\n            var ability = self._abilities[i];\n            if (ability.level() > 0 && (ability.isActive() || (ability.behavior.indexOf('DOTA_ABILITY_BEHAVIOR_PASSIVE') != -1))) {\n                if (!(ability.name in self.abilityData)) {\n                    switch(ability.name) {\n                        // phantom_assassin_coup_de_grace,brewmaster_drunken_brawler,chaos_knight_chaos_strike,lycan_shapeshift,skeleton_king_mortal_strike,juggernaut_blade_dance,alpha_wolf_critical_strike,giant_wolf_critical_strike\n                        case 'phantom_assassin_coup_de_grace':\n                            if (sources[ability.name] == undefined) {\n                                sources[ability.name] = {\n                                    'chance': self.getAbilityAttributeValue(self._abilities[i].attributes, 'crit_chance', ability.level())/100,\n                                    'multiplier': self.getAbilityAttributeValue(self._abilities[i].attributes, 'crit_bonus', ability.level())/100,\n                                    'count': 1,\n                                    'displayname': ability.displayname\n                                }\n                            }\n                            else {\n                                sources[ability.name].count += 1;\n                            }\n                        break;\n                        case 'brewmaster_drunken_brawler':\n                            if (sources[ability.name] == undefined) {\n                                sources[ability.name] = {\n                                    'chance': self.getAbilityAttributeValue(self._abilities[i].attributes, 'crit_chance', ability.level())/100,\n                                    'multiplier': self.getAbilityAttributeValue(self._abilities[i].attributes, 'crit_multiplier', ability.level())/100,\n                                    'count': 1,\n                                    'displayname': ability.displayname\n                                }\n                            }\n                            else {\n                                sources[ability.name].count += 1;\n                            }\n                        break;\n                        case 'chaos_knight_chaos_strike':\n                        case 'lycan_shapeshift':\n                            if (sources[ability.name] == undefined) {\n                                sources[ability.name] = {\n                                    'chance': self.getAbilityAttributeValue(self._abilities[i].attributes, 'crit_chance', ability.level())/100,\n                                    'multiplier': self.getAbilityAttributeValue(self._abilities[i].attributes, 'crit_multiplier', ability.level())/100,\n                                    'count': 1,\n                                    'displayname': ability.displayname\n                                }\n                            }\n                            else {\n                                sources[ability.name].count += 1;\n                            }\n                        break;\n                        case 'skeleton_king_mortal_strike':\n                            if (sources[ability.name] == undefined) {\n                                sources[ability.name] = {\n                                    'chance': self.getAbilityAttributeValue(self._abilities[i].attributes, 'crit_chance', ability.level())/100,\n                                    'multiplier': self.getAbilityAttributeValue(self._abilities[i].attributes, 'crit_mult', ability.level())/100,\n                                    'count': 1,\n                                    'displayname': ability.displayname\n                                }\n                            }\n                            else {\n                                sources[ability.name].count += 1;\n                            }\n                        break;\n                        case 'juggernaut_blade_dance':\n                            if (sources[ability.name] == undefined) {\n                                sources[ability.name] = {\n                                    'chance': self.getAbilityAttributeValue(self._abilities[i].attributes, 'blade_dance_crit_chance', ability.level())/100,\n                                    'multiplier': self.getAbilityAttributeValue(self._abilities[i].attributes, 'blade_dance_crit_mult', ability.level())/100,\n                                    'count': 1,\n                                    'displayname': ability.displayname\n                                }\n                            }\n                            else {\n                                sources[ability.name].count += 1;\n                            }\n                        break;\n                        case 'alpha_wolf_critical_strike':\n                        case 'giant_wolf_critical_strike':\n                            if (sources[ability.name] == undefined) {\n                                sources[ability.name] = {\n                                    'chance': self.getAbilityAttributeValue(self._abilities[i].attributes, 'crit_chance', ability.level())/100,\n                                    'multiplier': self.getAbilityAttributeValue(self._abilities[i].attributes, 'crit_mult', ability.level())/100,\n                                    'count': 1,\n                                    'displayname': ability.displayname\n                                }\n                            }\n                            else {\n                                sources[ability.name].count += 1;\n                            }\n                        break;\n                    }\n                }\n            }\n        }\n        return sources;\n    });    \n\n    self.getCleaveSource = ko.computed(function () {\n        var sources = {};\n        for (var i = 0; i < self.abilities().length; i++) {\n            var ability = self._abilities[i];\n            if (ability.level() > 0 && (ability.isActive() || (ability.behavior.indexOf('DOTA_ABILITY_BEHAVIOR_PASSIVE') != -1))) {\n                if (!(ability.name in self.abilityData)) {\n                    switch(ability.name) {\n                        // magnataur_empower\n                        case 'magnataur_empower':\n                            if (sources[ability.name] == undefined) {\n                                sources[ability.name] = {\n                                    'radius': self.getAbilityAttributeValue(self._abilities[i].attributes, 'cleave_radius', ability.level()),\n                                    'magnitude': self.getAbilityAttributeValue(self._abilities[i].attributes, 'cleave_damage_pct', ability.level())/100,\n                                    'count': 1,\n                                    'displayname': ability.displayname\n                                }\n                            }\n                            else {\n                                sources[ability.name].count += 1;\n                            }\n                        break;\n                        // sven_great_cleave\n                        case 'sven_great_cleave':\n                            if (sources[ability.name] == undefined) {\n                                sources[ability.name] = {\n                                    'radius': self.getAbilityAttributeValue(self._abilities[i].attributes, 'great_cleave_radius', ability.level()),\n                                    'magnitude': self.getAbilityAttributeValue(self._abilities[i].attributes, 'great_cleave_damage', ability.level())/100,\n                                    'count': 1,\n                                    'displayname': ability.displayname\n                                }\n                            }\n                            else {\n                                sources[ability.name].count += 1;\n                            }\n                        break;\n                        // kunkka_tidebringer\n                        case 'kunkka_tidebringer':\n                            if (sources[ability.name] == undefined) {\n                                sources[ability.name] = {\n                                    'radius': self.getAbilityAttributeValue(self._abilities[i].attributes, 'radius', ability.level()),\n                                    'magnitude': 1,\n                                    'count': 1,\n                                    'displayname': ability.displayname\n                                }\n                            }\n                            else {\n                                sources[ability.name].count += 1;\n                            }\n                        break;\n                        // tiny_grow\n                        case 'tiny_grow':\n                            if (self.hasScepter()) {\n                                if (sources[ability.name] == undefined) {\n                                    sources[ability.name] = {\n                                        'radius': self.getAbilityAttributeValue(self._abilities[i].attributes, 'bonus_cleave_radius_scepter', ability.level()),\n                                        'magnitude': self.getAbilityAttributeValue(self._abilities[i].attributes, 'bonus_cleave_damage_scepter', ability.level())/100,\n                                        'count': 1,\n                                        'displayname': ability.displayname\n                                    }\n                                }\n                                else {\n                                    sources[ability.name].count += 1;\n                                }\n                            }\n                        break;\n                    }\n                }\n            }\n        }\n        return sources;\n    });    \n    \n    self.getCritChance = ko.computed(function () {\n        var totalAttribute = 1;\n        for (var i = 0; i < self.abilities().length; i++) {\n            var ability = self._abilities[i];\n            if (ability.level() > 0 && (ability.isActive() || (ability.behavior.indexOf('DOTA_ABILITY_BEHAVIOR_PASSIVE') != -1))) {\n                if (!(ability.name in self.abilityData)) {\n                    for (var j = 0; j < self._abilities[i].attributes.length; j++) {\n                        var attribute = self._abilities[i].attributes[j];\n                        switch(attribute.name) {\n                            // phantom_assassin_coup_de_grace,brewmaster_drunken_brawler,chaos_knight_chaos_strike,lycan_shapeshift,skeleton_king_mortal_strike\n                            case 'crit_chance':\n                                totalAttribute *= (1 - self.getAbilityAttributeValue(self._abilities[i].attributes, attribute.name, ability.level())/100);\n                            break;\n                        }\n                    }\n                }\n            }\n        }\n        return totalAttribute;\n    });            \n    \n    self.getEvasion = ko.computed(function () {\n        var totalAttribute = 1;\n        for (var i = 0; i < self.abilities().length; i++) {\n            var ability = self._abilities[i];\n            if (ability.level() > 0 && (ability.isActive() || (ability.behavior.indexOf('DOTA_ABILITY_BEHAVIOR_PASSIVE') != -1))) {\n                if (!(ability.name in self.abilityData)) {\n                    for (var j = 0; j < self._abilities[i].attributes.length; j++) {\n                        var attribute = self._abilities[i].attributes[j];\n                        switch(attribute.name) {\n                            // phantom_assassin_blur\n                            case 'bonus_evasion':\n                            // brewmaster_drunken_brawler\n                            case 'dodge_chance':\n                                totalAttribute *= (1 - self.getAbilityAttributeValue(self._abilities[i].attributes, attribute.name, ability.level())/100);\n                            break;\n                        }\n                    }\n                }\n            }\n        }\n        return totalAttribute;\n    });\n    \n    self.getEvasionBacktrack = ko.computed(function () {\n        var totalAttribute = 1;\n        for (var i = 0; i < self.abilities().length; i++) {\n            var ability = self._abilities[i];\n            if (ability.level() > 0 && (ability.isActive() || (ability.behavior.indexOf('DOTA_ABILITY_BEHAVIOR_PASSIVE') != -1))) {\n                if (!(ability.name in self.abilityData)) {\n                    for (var j = 0; j < self._abilities[i].attributes.length; j++) {\n                        var attribute = self._abilities[i].attributes[j];\n                        switch(attribute.name) {\n                            // faceless_void_backtrack\n                            case 'dodge_chance_pct':\n                                totalAttribute *= (1 - self.getAbilityAttributeValue(self._abilities[i].attributes, attribute.name, ability.level())/100);\n                            break;\n                        }\n                    }\n                }\n            }\n        }\n        return totalAttribute;\n    });\n    \n    self.getMissChance = ko.computed(function () {\n        var totalAttribute = 1;\n        for (var i = 0; i < self.abilities().length; i++) {\n            var ability = self._abilities[i];\n            if (ability.level() > 0 && (ability.isActive() || (ability.behavior.indexOf('DOTA_ABILITY_BEHAVIOR_PASSIVE') != -1))) {\n                if (!(ability.name in self.abilityData)) {\n                    for (var j = 0; j < self._abilities[i].attributes.length; j++) {\n                        var attribute = self._abilities[i].attributes[j];\n                        switch(attribute.name) {\n                            // broodmother_incapacitating_bite,brewmaster_drunken_haze\n                            case 'miss_chance':\n                            // riki_smoke_screen,keeper_of_the_light_blinding_light,tinker_laser\n                            case 'miss_rate':\n                                totalAttribute *= (1 - self.getAbilityAttributeValue(self._abilities[i].attributes, attribute.name, ability.level())/100);\n                            break;\n                        }\n                    }\n                }\n                else if (ability.missChance != undefined) {\n                    // night_stalker_crippling_fear\n                    totalAttribute*=(1-ability.missChance()/100);\n                }\n            }\n        }\n        return totalAttribute;\n    });\n    \n    self.getLifesteal = ko.computed(function () {\n        var totalAttribute = 0;\n        for (var i = 0; i < self.abilities().length; i++) {\n            var ability = self._abilities[i];\n            if (ability.level() > 0 && (ability.isActive() || (ability.behavior.indexOf('DOTA_ABILITY_BEHAVIOR_PASSIVE') != -1))) {\n                if (!(ability.name in self.abilityData)) {\n                    for (var j = 0; j < self._abilities[i].attributes.length; j++) {\n                        var attribute = self._abilities[i].attributes[j];\n                        switch(attribute.name) {\n                            // skeleton_king_vampiric_aura\n                            case 'vampiric_aura':\n                            // broodmother_insatiable_hunger\n                            case 'lifesteal_pct':\n                                totalAttribute += self.getAbilityAttributeValue(self._abilities[i].attributes, attribute.name, ability.level());\n                            break;\n                        }\n                    }\n                }\n                else if (ability.lifesteal != undefined) {\n                    // life_stealer_open_wounds\n                    totalAttribute+=ability.lifesteal();\n                }\n            }\n        }\n        return totalAttribute;\n    });\n    \n    self.getMagicResist = ko.computed(function () {\n        var totalAttribute = 1;\n        for (var i = 0; i < self.abilities().length; i++) {\n            var ability = self._abilities[i];\n            if (ability.level() > 0 && (ability.isActive() || (ability.behavior.indexOf('DOTA_ABILITY_BEHAVIOR_PASSIVE') != -1))) {\n                if (!(ability.name in self.abilityData)) {\n                    for (var j = 0; j < self._abilities[i].attributes.length; j++) {\n                        var attribute = self._abilities[i].attributes[j];\n                        switch(attribute.name) {\n                            // antimage_spell_shield\n                            case 'spell_shield_resistance':\n                                totalAttribute *= (1 - self.getAbilityAttributeValue(self._abilities[i].attributes, attribute.name, ability.level())/100);\n                            break;\n                            // phantom_lancer_phantom_edge\n                            case 'magic_resistance_pct':\n                                if (ability.name == 'phantom_lancer_phantom_edge') {\n                                    totalAttribute *= (1 - self.getAbilityAttributeValue(self._abilities[i].attributes, attribute.name, ability.level())/100);\n                                }\n                            break;\n                            // rubick_null_field\n                            case 'magic_damage_reduction_pct':\n                                if (ability.name == 'rubick_null_field') {\n                                    totalAttribute *= (1 - self.getAbilityAttributeValue(self._abilities[i].attributes, attribute.name, ability.level())/100);\n                                }\n                            break;\n                        }\n                    }\n                }\n                else if (ability.magicResist != undefined) {\n                    // huskar_berserkers_blood,viper_corrosive_skin,visage_gravekeepers_cloak\n                    totalAttribute *= (1 - ability.magicResist()/100);\n                }\n            }\n        }\n        return totalAttribute;\n    });\n\n    self.getMagicResistReduction = ko.computed(function () {\n        var totalAttribute = 1;\n        for (var i = 0; i < self.abilities().length; i++) {\n            var ability = self._abilities[i];\n            if (ability.level() > 0 && (ability.isActive() || (ability.behavior.indexOf('DOTA_ABILITY_BEHAVIOR_PASSIVE') != -1))) {\n                if (!(ability.name in self.abilityData)) {\n                    for (var j = 0; j < self._abilities[i].attributes.length; j++) {\n                        var attribute = self._abilities[i].attributes[j];\n                        switch(attribute.name) {\n                            // ancient_apparition_ice_vortex\n                            case 'spell_resist_pct':\n                            // pugna_decrepify\n                            case 'bonus_spell_damage_pct':\n                            // skywrath_mage_ancient_seal\n                            case 'resist_debuff':\n                                totalAttribute *= (1 - self.getAbilityAttributeValue(self._abilities[i].attributes, attribute.name, ability.level())/100);\n                            break;\n                            // elder_titan_natural_order\n                            case 'magic_resistance_pct':\n                                totalAttribute *= (1 - self.getAbilityAttributeValue(self._abilities[i].attributes, attribute.name, ability.level())/100);\n                            break;\n                        }\n                    }\n                }\n            }\n        }\n        return totalAttribute;\n    });\n    \n    self.getMovementSpeedFlat = ko.computed(function () {\n        var totalAttribute = 0;\n        for (var i = 0; i < self.abilities().length; i++) {\n            var ability = self._abilities[i];\n            if (ability.level() > 0 && (ability.isActive() || (ability.behavior.indexOf('DOTA_ABILITY_BEHAVIOR_PASSIVE') != -1))) {\n                if (!(ability.name in self.abilityData)) {\n                    for (var j = 0; j < self._abilities[i].attributes.length; j++) {\n                        var attribute = self._abilities[i].attributes[j];\n                        switch(attribute.name) {\n                            // alchemist_chemical_rage\n                            case 'bonus_movespeed':\n                                if (ability.name == 'alchemist_chemical_rage') {\n                                    totalAttribute += self.getAbilityAttributeValue(self._abilities[i].attributes, attribute.name, ability.level());\n                                }\n                            break;\n                            // tiny_grow\n                            case 'bonus_movement_speed':\n                                if (ability.name == 'tiny_grow') {\n                                    totalAttribute += self.getAbilityAttributeValue(self._abilities[i].attributes, attribute.name, ability.level());\n                                }\n                            break;\n                            // troll_warlord_berserkers_rage\n                            case 'bonus_move_speed':\n                                if (ability.name == 'troll_warlord_berserkers_rage') {\n                                    totalAttribute += self.getAbilityAttributeValue(self._abilities[i].attributes, attribute.name, ability.level());\n                                }                                \n                            break;\n                            // lone_druid_true_form\n                            case 'speed_loss':\n                                totalAttribute -= self.getAbilityAttributeValue(self._abilities[i].attributes, attribute.name, ability.level());\n                            break;\n                        }\n                    }\n                }\n                else if (ability.movementSpeedFlat != undefined) {\n                // dragon_knight_elder_dragon_form\n                    totalAttribute+=ability.movementSpeedFlat();\n                }\n            }\n        }\n        return totalAttribute;\n    });\n    \n    self.getMovementSpeedPercent = ko.computed(function () {\n        var totalAttribute = 0;\n        for (var i = 0; i < self.abilities().length; i++) {\n            var ability = self._abilities[i];\n            if (ability.level() > 0 && (ability.isActive() || (ability.behavior.indexOf('DOTA_ABILITY_BEHAVIOR_PASSIVE') != -1))) {\n                if (!(ability.name in self.abilityData)) {\n                    for (var j = 0; j < self._abilities[i].attributes.length; j++) {\n                        var attribute = self._abilities[i].attributes[j];\n                        switch(attribute.name) {\n                            // abaddon_frostmourne \n                            case 'move_speed_pct':\n                            // bounty_hunter_track \n                            case 'bonus_move_speed_pct':\n                            // mirana_leap \n                            case 'leap_speedbonus':\n                            // sven_warcry \n                            case 'warcry_movespeed':\n                            // clinkz_wind_walk\n                            case 'move_speed_bonus_pct':\n                            // windrunner_windrun\n                            case 'movespeed_bonus_pct':\n                                totalAttribute += self.getAbilityAttributeValue(self._abilities[i].attributes, attribute.name, ability.level())/100;\n                            break;\n                            // broodmother_spin_web,spectre_spectral_dagger\n                            case 'bonus_movespeed':\n                                if (ability.name == 'broodmother_spin_web' || ability.name == 'spectre_spectral_dagger') {\n                                    totalAttribute += self.getAbilityAttributeValue(self._abilities[i].attributes, attribute.name, ability.level())/100;\n                                }\n                            break;\n                            // axe_culling_blade,necronomicon_archer_aoe\n                            case 'speed_bonus':\n                                if (ability.name == 'axe_culling_blade' || ability.name == 'necronomicon_archer_aoe') {\n                                    totalAttribute += self.getAbilityAttributeValue(self._abilities[i].attributes, attribute.name, ability.level())/100;\n                                }\n                            break;\n                            // nyx_assassin_vendetta \n                            case 'movement_speed':\n                                if (ability.name == 'nyx_assassin_vendetta') {\n                                    totalAttribute += self.getAbilityAttributeValue(self._abilities[i].attributes, attribute.name, ability.level())/100;\n                                }\n                            break;\n                            // spirit_breaker_empowering_haste\n                            case 'bonus_movespeed_pct':\n                                if (ability.name == 'spirit_breaker_empowering_haste') {\n                                    totalAttribute += self.getAbilityAttributeValue(self._abilities[i].attributes, attribute.name, ability.level())/100;\n                                }\n                            break;\n                            // ogre_magi_bloodlust,death_prophet_witchcraft,kobold_taskmaster_speed_aura\n                            case 'bonus_movement_speed':\n                                if (ability.name == 'ogre_magi_bloodlust' || ability.name == 'death_prophet_witchcraft' || ability.name == 'kobold_taskmaster_speed_aura') {\n                                    totalAttribute += self.getAbilityAttributeValue(self._abilities[i].attributes, attribute.name, ability.level())/100;\n                                }\n                            break;\n                            // razor_unstable_current,phantom_lancer_doppelwalk\n                            case 'movement_speed_pct':\n                                if (ability.name == 'razor_unstable_current' || ability.name == 'phantom_lancer_doppelwalk') {\n                                    totalAttribute += self.getAbilityAttributeValue(self._abilities[i].attributes, attribute.name, ability.level())/100;\n                                }\n                            break;\n                            // treant_natures_guise,lone_druid_rabid\n                            case 'bonus_move_speed':\n                                if (ability.name == 'treant_natures_guise' || ability.name == 'lone_druid_rabid') {\n                                    totalAttribute += self.getAbilityAttributeValue(self._abilities[i].attributes, attribute.name, ability.level())/100;\n                                }\n                            break;\n                            // wisp_tether\n                            case 'movespeed':\n                                if (ability.name == 'wisp_tether') {\n                                    totalAttribute += self.getAbilityAttributeValue(self._abilities[i].attributes, attribute.name, ability.level())/100;\n                                }\n                            break;\n                            // kunkka_ghostship,visage_grave_chill\n                            case 'movespeed_bonus':\n                                if (ability.name == 'kunkka_ghostship' || ability.name == 'visage_grave_chill') {\n                                    totalAttribute += self.getAbilityAttributeValue(self._abilities[i].attributes, attribute.name, ability.level())/100;\n                                }                                \n                            break;\n                        }\n                    }\n                }\n                else if (ability.movementSpeedPct != undefined) {\n                // axe_battle_hunger,bristleback_warpath,spirit_breaker_greater_bash,lina_fiery_soul,invoker_ghost_walk,invoker_wex,elder_titan_ancestral_spirit\n                    totalAttribute+=ability.movementSpeedPct()/100;\n                }\n            }\n        }\n        return totalAttribute;\n    });\n\n    self.getMovementSpeedPercentReduction = ko.computed(function () {\n        var totalAttribute = 0;\n        for (var i = 0; i < self.abilities().length; i++) {\n            var ability = self._abilities[i];\n            if (ability.level() > 0 && (ability.isActive() || (ability.behavior.indexOf('DOTA_ABILITY_BEHAVIOR_PASSIVE') != -1))) {\n                if (!(ability.name in self.abilityData)) {\n                    for (var j = 0; j < self._abilities[i].attributes.length; j++) {\n                        var attribute = self._abilities[i].attributes[j];\n                        switch(attribute.name) {\n                            // crystal_maiden_freezing_field\n                            case 'movespeed_slow':\n                                if (ability.name == 'crystal_maiden_freezing_field' && !self.hasScepter()) {\n                                    totalAttribute += self.getAbilityAttributeValue(self._abilities[i].attributes, attribute.name, ability.level())/100;\n                                }\n                            break;\n                            case 'movespeed_slow_scepter':\n                                if (ability.name == 'crystal_maiden_freezing_field' && self.hasScepter()) {\n                                    totalAttribute += self.getAbilityAttributeValue(self._abilities[i].attributes, attribute.name, ability.level())/100;\n                                }\n                            break;\n                            // elder_titan_earth_splitter,magnataur_skewer,abaddon_frostmourne \n                            case 'slow_pct':\n                                totalAttribute -= self.getAbilityAttributeValue(self._abilities[i].attributes, attribute.name, ability.level())/100;\n                            break;\n                            // night_stalker_void,crystal_maiden_crystal_nova,ghost_frost_attack,ogre_magi_frost_armor,polar_furbolg_ursa_warrior_thunder_clap\n                            case 'movespeed_slow':\n                                if (ability.name != 'crystal_maiden_freezing_field') {\n                                    totalAttribute += self.getAbilityAttributeValue(self._abilities[i].attributes, attribute.name, ability.level())/100;\n                                }\n                            break;\n                            // lich_frost_armor,lich_frost_nova,enchantress_enchant\n                            case 'slow_movement_speed':\n                            // beastmaster_primal_roar\n                            case 'slow_movement_speed_pct':\n                            // drow_ranger_frost_arrows\n                            case 'frost_arrows_movement_speed':\n                            // skeleton_king_hellfire_blast\n                            case 'blast_slow':\n                            // slardar_slithereen_crush\n                            case 'crush_extra_slow':\n                            // storm_spirit_overload:\n                            case 'overload_move_slow':\n                            // windrunner_windrun\n                            case 'enemy_movespeed_bonus_pct':\n                                totalAttribute += self.getAbilityAttributeValue(self._abilities[i].attributes, attribute.name, ability.level())/100;\n                            break;\n                            // phantom_assassin_stifling_dagger,tusk_frozen_sigil\n                            case 'move_slow':\n                                if (ability.name == 'phantom_assassin_stifling_dagger') {\n                                    totalAttribute += self.getAbilityAttributeValue(self._abilities[i].attributes, attribute.name, ability.level())/100;\n                                }\n                                else if (ability.name == 'tusk_frozen_sigil') {\n                                    totalAttribute -= self.getAbilityAttributeValue(self._abilities[i].attributes, attribute.name, ability.level())/100;\n                                }\n                            break;\n                            // invoker_ice_wall,medusa_stone_gaze,wisp_tether\n                            case 'slow':\n                                if (ability.name == 'medusa_stone_gaze') {\n                                    totalAttribute -= self.getAbilityAttributeValue(self._abilities[i].attributes, attribute.name, ability.level())/100;\n                                }\n                                else {\n                                    totalAttribute += self.getAbilityAttributeValue(self._abilities[i].attributes, attribute.name, ability.level())/100;\n                                }\n                            break;\n                            // broodmother_incapacitating_bite,bounty_hunter_jinada,spectre_spectral_dagger,winter_wyvern_arctic_burn\n                            case 'bonus_movespeed':\n                                if (ability.name == 'broodmother_incapacitating_bite' || ability.name == 'bounty_hunter_jinada' || ability.name == 'winter_wyvern_arctic_burn' || ability.name == 'winter_wyvern_splinter_blast') {\n                                    totalAttribute += self.getAbilityAttributeValue(self._abilities[i].attributes, attribute.name, ability.level())/100;\n                                }\n                                else if (ability.name == 'spectre_spectral_dagger') {\n                                    totalAttribute -= self.getAbilityAttributeValue(self._abilities[i].attributes, attribute.name, ability.level())/100;\n                                }\n                            break;\n                            // omniknight_degen_aura\n                            case 'speed_bonus':\n                                if (ability.name == 'omniknight_degen_aura') {\n                                    totalAttribute += self.getAbilityAttributeValue(self._abilities[i].attributes, attribute.name, ability.level())/100;\n                                }\n                            break;\n                            // tidehunter_gush\n                            case 'movement_speed':\n                                if (ability.name == 'tidehunter_gush') {\n                                    totalAttribute += self.getAbilityAttributeValue(self._abilities[i].attributes, attribute.name, ability.level())/100;\n                                }\n                            break;\n                            // pugna_decrepify,chen_penitence\n                            case 'bonus_movement_speed':\n                                if (ability.name == 'pugna_decrepify' || ability.name == 'chen_penitence') {\n                                    totalAttribute += self.getAbilityAttributeValue(self._abilities[i].attributes, attribute.name, ability.level())/100;\n                                }\n                            break;\n                            // ancient_apparition_ice_vortex,phantom_lancer_spirit_lance,skywrath_mage_concussive_shot,faceless_void_time_walk\n                            case 'movement_speed_pct':\n                                if (ability.name == 'ancient_apparition_ice_vortex' || ability.name == 'phantom_lancer_spirit_lance' || ability.name == 'faceless_void_time_walk') {\n                                    totalAttribute += self.getAbilityAttributeValue(self._abilities[i].attributes, attribute.name, ability.level())/100;\n                                }\n                                else if (ability.name == 'skywrath_mage_concussive_shot') {\n                                    totalAttribute -= self.getAbilityAttributeValue(self._abilities[i].attributes, attribute.name, ability.level())/100;\n                                }\n                            break;\n                            // razor_unstable_current\n                            case 'slow_amount':\n                                if (ability.name == 'razor_unstable_current') {\n                                    totalAttribute += self.getAbilityAttributeValue(self._abilities[i].attributes, attribute.name, ability.level())/100;\n                                }\n                            break;\n                            // brewmaster_drunken_haze,brewmaster_thunder_clap,treant_leech_seed\n                            case 'movement_slow':\n                                if (ability.name == 'brewmaster_drunken_haze' || ability.name == 'brewmaster_thunder_clap') {\n                                    totalAttribute -= self.getAbilityAttributeValue(self._abilities[i].attributes, attribute.name, ability.level())/100;\n                                }\n                                else if (ability.name == 'ursa_earthshock' || ability.name == 'treant_leech_seed') {\n                                    totalAttribute += self.getAbilityAttributeValue(self._abilities[i].attributes, attribute.name, ability.level())/100;\n                                }\n                            break;\n                            // skeleton_king_reincarnation\n                            case 'movespeed':\n                                if (ability.name == 'skeleton_king_reincarnation') {\n                                    totalAttribute += self.getAbilityAttributeValue(self._abilities[i].attributes, attribute.name, ability.level())/100;\n                                }\n                            break;\n                            // kunkka_torrent,visage_grave_chill\n                            case 'movespeed_bonus':\n                                if (ability.name == 'kunkka_torrent') {\n                                    totalAttribute += self.getAbilityAttributeValue(self._abilities[i].attributes, attribute.name, ability.level())/100;\n                                }\n                                else if (ability.name == 'visage_grave_chill') {\n                                    totalAttribute -= self.getAbilityAttributeValue(self._abilities[i].attributes, attribute.name, ability.level())/100;\n                                }\n                            break;\n                        }\n                    }\n                    if (ability.name == 'satyr_trickster_purge') {\n                        totalAttribute -= 80/100;\n                    }\n                    else if (ability.name == 'enraged_wildkin_tornado') {\n                        totalAttribute -= 15/100;\n                    }\n                }\n                else if (ability.movementSpeedPctReduction != undefined) {\n                    // axe_battle_hunger,batrider_sticky_napalm,shredder_chakram,meepo_geostrike,life_stealer_open_wounds,\n                    // venomancer_poison_sting,viper_viper_strike,viper_corrosive_skin,viper_poison_attack,venomancer_venomous_gale,treant_leech_seed\n                    // lich_chain_frost,sniper_shrapnel,centaur_stampede,huskar_life_break,jakiro_dual_breath,meepo_geostrike,sandking_epicenter\n                    // earth_spirit_rolling_boulder,invoker_ghost_walk,invoker_ice_wall,elder_titan_earth_splitter\n                    // undying_flesh_golem,templar_assassin_psionic_trap,nevermore_requiem,queenofpain_shadow_strike\n                    totalAttribute+=ability.movementSpeedPctReduction()/100;\n                }\n            }\n        }\n        return totalAttribute;\n    });\n\n    self.getTurnRateReduction = ko.computed(function () {\n        var totalAttribute = 0;\n        for (var i = 0; i < self.abilities().length; i++) {\n            var ability = self._abilities[i];\n            if (ability.level() > 0 && (ability.isActive() || (ability.behavior.indexOf('DOTA_ABILITY_BEHAVIOR_PASSIVE') != -1))) {\n                if (!(ability.name in self.abilityData)) {\n                    for (var j = 0; j < self._abilities[i].attributes.length; j++) {\n                        var attribute = self._abilities[i].attributes[j];\n                        switch(attribute.name) {\n                            // medusa_stone_gaze\n                            case 'slow':\n                                if (ability.name == 'medusa_stone_gaze') {\n                                    totalAttribute -= self.getAbilityAttributeValue(self._abilities[i].attributes, attribute.name, ability.level())/100;\n                                }\n                            break;\n                        }\n                    }\n                }\n                else if (ability.turnRateReduction != undefined) {\n                    // batrider_sticky_napalm\n                    totalAttribute+=ability.turnRateReduction()/100;\n                }\n            }\n        }\n        return totalAttribute;\n    });\n    \n    self.getVisionRangeNight = ko.computed(function () {\n        var totalAttribute = 0;\n        for (var i = 0; i < self.abilities().length; i++) {\n            var ability = self._abilities[i];\n            if (ability.level() > 0 && (ability.isActive() || (ability.behavior.indexOf('DOTA_ABILITY_BEHAVIOR_PASSIVE') != -1))) {\n                if (!(ability.name in self.abilityData)) {\n                    for (var j = 0; j < self._abilities[i].attributes.length; j++) {\n                        var attribute = self._abilities[i].attributes[j];\n                        switch(attribute.name) {\n                            // winter_wyvern_arctic_burn\n                            case 'night_vision_bonus':\n                            // lycan_shapeshift,luna_lunar_blessing\n                            case 'bonus_night_vision':\n                                totalAttribute += self.getAbilityAttributeValue(self._abilities[i].attributes, attribute.name, ability.level());\n                            break;\n                        }\n                    }\n                }\n                else if (ability.visionnight != undefined) {\n                    // \n                    totalAttribute+=ability.visionnight();\n                }\n            }\n        }\n        return totalAttribute;\n    });\n\n    self.getVisionRangePctReduction = ko.computed(function () {\n        var totalAttribute = 0;\n        for (var i = 0; i < self.abilities().length; i++) {\n            var ability = self._abilities[i];\n            if (ability.level() > 0 && (ability.isActive() || (ability.behavior.indexOf('DOTA_ABILITY_BEHAVIOR_PASSIVE') != -1))) {\n                if (!(ability.name in self.abilityData)) {\n                    for (var j = 0; j < self._abilities[i].attributes.length; j++) {\n                        var attribute = self._abilities[i].attributes[j];\n                        switch(attribute.name) {\n                            // night_stalker_darkness\n                            case 'blind_percentage':\n                                totalAttribute += self.getAbilityAttributeValue(self._abilities[i].attributes, attribute.name, ability.level())/100;\n                            break;\n                        }\n                    }\n                }\n            }\n        }\n        return totalAttribute;\n    });\n\n    self.setEvasion = ko.computed(function () {\n        var totalAttribute = 0;\n        for (var i = 0; i < self.abilities().length; i++) {\n            var ability = self._abilities[i];\n            if (ability.level() > 0 && (ability.isActive() || (ability.behavior.indexOf('DOTA_ABILITY_BEHAVIOR_PASSIVE') != -1))) {\n                if (ability.name == 'windrunner_windrun') {\n                    return 1;\n                }\n            }\n        }\n        return totalAttribute;\n    });\n    \n    self.setMovementSpeed = ko.computed(function () {\n        var MAX_MOVESPEED = 522;\n        var MIN_MOVESPEED = 100;\n        var totalAttribute = 0;\n        for (var i = 0; i < self.abilities().length; i++) {\n            var ability = self._abilities[i];\n            if (ability.level() > 0 && (ability.isActive() || (ability.behavior.indexOf('DOTA_ABILITY_BEHAVIOR_PASSIVE') != -1))) {\n                if (ability.name == 'spirit_breaker_charge_of_darkness') {\n                    return self.getAbilityAttributeValue(ability.attributes, 'movement_speed', ability.level());\n                }\n                if (ability.name == 'dark_seer_surge') {\n                    return MAX_MOVESPEED;\n                }\n                if (ability.name == 'centaur_stampede') {\n                    return MAX_MOVESPEED;\n                }\n                if (ability.name == 'lycan_shapeshift') {\n                    return MAX_MOVESPEED;\n                }\n                if (ability.name == 'lion_voodoo' || ability.name == 'shadow_shaman_voodoo') {\n                    return MIN_MOVESPEED;\n                }\n            }\n        }\n        return totalAttribute;\n    });\n\n    self.getBashSource = function (attacktype) {\n        var sources = {};\n        for (var i = 0; i < self.abilities().length; i++) {\n            var ability = self._abilities[i];\n            if (ability.level() > 0 && (ability.isActive() || (ability.behavior.indexOf('DOTA_ABILITY_BEHAVIOR_PASSIVE') != -1))) {\n                if (!(ability.name in self.abilityData)) {\n                    for (var j = 0; j < self._abilities[i].attributes.length; j++) {\n                        var attribute = self._abilities[i].attributes[j];\n                        switch(attribute.name) {\n                            // sniper_headshot\n                            case 'proc_chance':\n                                if (sources[ability.name] == undefined && ability.name == 'sniper_headshot') {\n                                    sources[ability.name] = {\n                                        'chance': self.getAbilityAttributeValue(ability.attributes, attribute.name, ability.level())/100,\n                                        'damage': self.getAbilityPropertyValue(ability, 'damage'),\n                                        'count': 1,\n                                        'damageType': 'physical',\n                                        'displayname': ability.displayname\n                                    }\n                                }\n                            break;\n                            // slardar_bash\n                            case 'chance':\n                                if (sources[ability.name] == undefined && ability.name == 'slardar_bash') {\n                                    sources[ability.name] = {\n                                        'chance': self.getAbilityAttributeValue(ability.attributes, attribute.name, ability.level())/100,\n                                        'damage': self.getAbilityAttributeValue(ability.attributes, 'bonus_damage', ability.level()),\n                                        'count': 1,\n                                        'damageType': 'physical',\n                                        'displayname': ability.displayname\n                                    }\n                                }\n                            break;\n                        }\n                    }\n                }\n                else if (ability.bashBonusDamage != undefined) {\n                    // faceless_void_time_lock\n                    if (sources[ability.name] == undefined && ability.name == 'faceless_void_time_lock') {\n                        sources[ability.name] = {\n                            'chance': ability.bash()/100,\n                            'damage': ability.bashBonusDamage(),\n                            'count': 1,\n                            'damageType': 'magic',\n                            'displayname': ability.displayname\n                        }\n                    }\n                    // spirit_breaker_greater_bash\n                    if (sources[ability.name] == undefined && ability.name == 'spirit_breaker_greater_bash') {\n                        sources[ability.name] = {\n                            'chance': ability.bash()/100,\n                            'damage': ability.bashBonusDamage()/100,\n                            'count': 1,\n                            'damageType': 'magic',\n                            'displayname': ability.displayname\n                        }\n                    }\n                }\n            }\n        }\n\n        return sources;\n    };\n    \n    self.getOrbSource = function () {\n        var sources = {};\n        for (var i = 0; i < self.abilities().length; i++) {\n            var ability = self._abilities[i];\n            if (ability.level() > 0 && (ability.isActive() || (ability.behavior.indexOf('DOTA_ABILITY_BEHAVIOR_PASSIVE') != -1))) {\n                if (!(ability.name in self.abilityData)) {\n                    for (var j = 0; j < self._abilities[i].attributes.length; j++) {\n                        var attribute = self._abilities[i].attributes[j];\n                        switch(attribute.name) {\n                            // antimage_mana_break\n                            case 'mana_per_hit':\n                                if (sources[ability.name] == undefined && ability.name == 'antimage_mana_break') {\n                                    sources[ability.name] = {\n                                        'damage': self.getAbilityAttributeValue(ability.attributes, attribute.name, ability.level()) \n                                                * self.getAbilityAttributeValue(ability.attributes, 'damage_per_burn', ability.level()),\n                                        'damageType': 'physical',\n                                        'displayname': ability.displayname\n                                    }\n                                }\n                            break;\n                            // clinkz_searing_arrows\n                            case 'damage_bonus':\n                                if (sources[ability.name] == undefined && ability.name == 'clinkz_searing_arrows') {\n                                    sources[ability.name] = {\n                                        'damage': self.getAbilityAttributeValue(ability.attributes, attribute.name, ability.level()),\n                                        'damageType': 'physical',\n                                        'displayname': ability.displayname\n                                    }\n                                }\n                            // silencer_glaives_of_wisdom\n                            case 'intellect_damage_pct':\n                                if (sources[ability.name] == undefined && ability.name == 'silencer_glaives_of_wisdom') {\n                                    sources[ability.name] = {\n                                        'damage': self.getAbilityAttributeValue(ability.attributes, attribute.name, ability.level())/100 * self.hero.totalInt(),\n                                        'damageType': 'pure',\n                                        'displayname': ability.displayname\n                                    }\n                                }\n                            break;\n                        }\n                    }\n                }\n                else if (ability.bonusDamageOrb != undefined) {\n                    // obsidian_destroyer_arcane_orb\n                    if (sources[ability.name] == undefined && ability.name == 'obsidian_destroyer_arcane_orb') {\n                        sources[ability.name] = {\n                            'damage': ability.bonusDamageOrb(),\n                            'damageType': 'pure',\n                            'displayname': ability.displayname\n                        }\n                    }\n                }\n            }\n        }\n        \n        return sources;\n    };\n    \n    self.toggleAbility = function (index, data, event) {\n        if (self.abilities()[index()].behavior.indexOf('DOTA_ABILITY_BEHAVIOR_PASSIVE') < 0) {\n            if (self.abilities()[index()].isActive()) {\n                self.abilities()[index()].isActive(false);\n            }\n            else {\n                self.abilities()[index()].isActive(true);\n            }\n            \n            if (self.abilities()[index()].name == 'lycan_shapeshift') {\n                self.isShapeShiftActive(self.abilities()[index()].isActive());\n            }\n        }\n    }.bind(this);\n\n    self.toggleAbilityDetail = function (index, data, event) {\n        if (self.abilities()[index()].isDetail()) {\n            self.abilities()[index()].isDetail(false);\n        }\n        else {\n            self.abilities()[index()].isDetail(true);\n        }\n    }.bind(this);\n    \n    self.getAbility = function (abilityName) {\n        return self.abilities().find(function(b) {\n            return b.name == abilityName;\n        });\n    }\n}\n\nmy.prototype.AbilityModel.prototype.levelUpAbility = function (index, data, event, hero) {\n    var self = this;\n    if (self.abilities()[index()].level() < hero.getAbilityLevelMax(data) && hero.availableSkillPoints() > 0 ) {\n        switch(self.abilities()[index()].abilitytype) {\n            case 'DOTA_ABILITY_TYPE_ULTIMATE':\n                if (hero.heroId() == 'invoker') {\n                    if (\n                        (self.abilities()[index()].level() == 0) && (parseInt(hero.selectedHeroLevel()) >= 2) ||\n                        (self.abilities()[index()].level() == 1) && (parseInt(hero.selectedHeroLevel()) >= 7) ||\n                        (self.abilities()[index()].level() == 2) && (parseInt(hero.selectedHeroLevel()) >= 11) ||\n                        (self.abilities()[index()].level() == 3) && (parseInt(hero.selectedHeroLevel()) >= 17)\n                    ) {\n                        self.abilities()[index()].level(self.abilities()[index()].level()+1);\n                        hero.skillPointHistory.push(index());\n                    }\n                }\n                else if (hero.heroId() == 'meepo') {\n                    if (self.abilities()[index()].level() * 7 + 3 <= parseInt(hero.selectedHeroLevel())) {\n                        self.abilities()[index()].level(self.abilities()[index()].level()+1);\n                        hero.skillPointHistory.push(index());\n                    }\n                }\n                else {\n                    if ((self.abilities()[index()].level()+1) * 5 + 1 <= parseInt(hero.selectedHeroLevel())) {\n                        self.abilities()[index()].level(self.abilities()[index()].level()+1);\n                        hero.skillPointHistory.push(index());\n                    }\n                }\n            break;\n            default:\n                if (self.abilities()[index()].level() * 2 + 1 <= parseInt(hero.selectedHeroLevel())) {\n                    self.abilities()[index()].level(self.abilities()[index()].level()+1);\n                    hero.skillPointHistory.push(index());\n                }\n            break;\n        }\n        switch (self.abilities()[index()].name) {\n            case 'beastmaster_call_of_the_wild':\n            case 'chen_test_of_faith':\n            case 'morphling_morph_agi':\n            case 'shadow_demon_shadow_poison':\n                self.abilities()[index() + 1].level(self.abilities()[index()].level());\n            break;\n            case 'morphling_morph_str':\n                self.abilities()[index() - 1].level(self.abilities()[index()].level());\n            break;\n            case 'keeper_of_the_light_spirit_form':\n                self.abilities()[index() - 1].level(self.abilities()[index()].level());\n                self.abilities()[index() - 2].level(self.abilities()[index()].level());\n            break;\n            case 'nevermore_shadowraze1':\n                self.abilities()[index() + 1].level(self.abilities()[index()].level());\n                self.abilities()[index() + 2].level(self.abilities()[index()].level());\n            break;\n            case 'nevermore_shadowraze2':\n                self.abilities()[index() - 1].level(self.abilities()[index()].level());\n                self.abilities()[index() + 1].level(self.abilities()[index()].level());\n            break;\n            case 'nevermore_shadowraze3':\n                self.abilities()[index() - 1].level(self.abilities()[index()].level());\n                self.abilities()[index() - 2].level(self.abilities()[index()].level());\n            break;\n            case 'ember_spirit_fire_remnant':\n                self.abilities()[index() - 1].level(self.abilities()[index()].level());\n            break;\n            case 'lone_druid_true_form':\n                self.abilities()[index() - 1].level(self.abilities()[index()].level());\n            break;\n        }\n    }\n};\nmy.prototype.AbilityModel.prototype.levelDownAbility = function (index, data, event, hero) {\n    var i = ko.utils.unwrapObservable(index);\n    var self = this;\n    if (self.abilities()[i].level() > 0) {\n        self.abilities()[i].level(self.abilities()[i].level() - 1);\n        hero.skillPointHistory.splice(hero.skillPointHistory().lastIndexOf(i), 1);\n        switch (self.abilities()[i].name) {\n            case 'beastmaster_call_of_the_wild':\n            case 'chen_test_of_faith':\n            case 'morphling_morph_agi':\n            case 'shadow_demon_shadow_poison':\n                self.abilities()[i + 1].level(self.abilities()[i].level());\n            break;\n            case 'morphling_morph_str':\n                self.abilities()[i - 1].level(self.abilities()[i].level());\n            break;\n            case 'keeper_of_the_light_spirit_form':\n                self.abilities()[i - 1].level(self.abilities()[i].level());\n                self.abilities()[i - 2].level(self.abilities()[i].level());\n            break;\n            case 'nevermore_shadowraze1':\n                self.abilities()[i + 1].level(self.abilities()[i].level());\n                self.abilities()[i + 2].level(self.abilities()[i].level());\n            break;\n            case 'nevermore_shadowraze2':\n                self.abilities()[i - 1].level(self.abilities()[i].level());\n                self.abilities()[i + 1].level(self.abilities()[i].level());\n            break;\n            case 'nevermore_shadowraze3':\n                self.abilities()[i - 1].level(self.abilities()[i].level());\n                self.abilities()[i - 2].level(self.abilities()[i].level());\n            break;\n            case 'ember_spirit_fire_remnant':\n                self.abilities()[i - 1].level(self.abilities()[i].level());\n            break;\n            case 'lone_druid_true_form':\n                self.abilities()[i - 1].level(self.abilities()[i].level());\n            break;\n        }\n    }\n};\nmy.prototype.AbilityModel.prototype.getAbilityAttributeValue = function (attributes, attributeName, level) {\n    for (var i=0; i < attributes.length; i++) {\n        if (attributes[i].name == attributeName) {\n            if (level == 0) {\n                return parseFloat(attributes[i].value[0]);\n            }\n            else if (level > attributes[i].value.length) {\n                return parseFloat(attributes[i].value[0]);\n            }\n            else {\n                return parseFloat(attributes[i].value[level-1]);\n            }\n        }\n    }\n}\nmy.prototype.AbilityModel.prototype.getAbilityAttributeTooltip = function (attributes, attributeName) {\n    for (var i=0; i<attributes.length; i++) {\n        if (attributes[i].name == attributeName) {\n            if (attributes[i].hasOwnProperty('tooltip')) {\n                var d = attributes[i].tooltip.replace(/\\\\n/g, '');\n                return d;\n            }\n            else {\n                return '';\n            }\n        }\n    }\n    return '';\n}","'use strict';\n    \nvar my = require(\"./herocalc_core\");\n\nmy.prototype.abilityData = {\n    'alchemist_acid_spray': [\n        {\n            label: 'Duration',\n            controlType: 'input'\n        },\n        {\n            attributeName: 'damage',\n            label: 'Total Damage',\n            controlType: 'text',\n            fn: function (v, a, parent, index, abilityModel, ability) {\n                return v*a;\n            }\n        },\n        {\n            attributeName: 'armor_reduction',\n            label: 'Total Damage',\n            controlType: 'text',\n            fn: function (v, a, parent, index, abilityModel, ability) {\n                return -a;\n            },\n            returnProperty: 'armorReduction'\n        }\n    ],\n    'alchemist_unstable_concoction': [\n        {\n            label: 'Brew Time',\n            controlType: 'input'\n        },\n        {\n            attributeName: 'max_damage',\n            label: 'Total Damage',\n            controlType: 'text',\n            fn: function (v, a, parent, index, abilityModel, ability) {\n                return v*a/5;\n            }\n        },\n        {\n            attributeName: 'max_stun',\n            label: 'Total Stun',\n            controlType: 'text',\n            fn: function (v, a, parent, index, abilityModel, ability) {\n                return v*a/5;\n            }\n        }\n    ],\n    'ancient_apparition_cold_feet': [\n        {\n            label: 'Duration',\n            controlType: 'input'\n        },\n        {\n            attributeName: 'damage',\n            label: 'Total Damage',\n            controlType: 'text',\n            fn: function (v, a, parent, index, abilityModel, ability) {\n                return v*a;\n            }\n        },\n        {\n            attributeName: 'stun_duration',\n            label: 'Total Stun',\n            controlType: 'text',\n            fn: function (v, a, parent, index, abilityModel, ability) {\n                return a;\n            }\n        }\n    ],\n    'ancient_apparition_ice_blast': [\n        {\n            label: 'Duration',\n            controlType: 'input'\n        },\n        {\n            attributeName: 'dot_damage',\n            label: 'Total Damage',\n            controlType: 'text',\n            fn: function (v, a, parent, index, abilityModel, ability) {\n                return abilityModel.getAbilityPropertyValue(ability, 'damage')+v*a;\n            }\n        }\n    ],\n    'antimage_mana_void': [\n        {\n            label: 'Enemy Missing Mana',\n            controlType: 'input'\n        },\n        {\n            attributeName: 'mana_void_damage_per_mana',\n            label: 'Total Damage',\n            controlType: 'text',\n            fn: function (v, a, parent, index, abilityModel, ability) {\n                return v*a;\n            }\n        }\n    ],\n    'axe_battle_hunger': [\n        {\n            label: 'Battle Hungered Enemies',\n            controlType: 'input'\n        },\n        {\n            attributeName: 'speed_bonus',\n            label: 'Movement Speed Bonus',\n            controlType: 'text',\n            noLevel: true,\n            fn: function (v, a, parent, index, abilityModel, ability) {\n                return v*a;\n            },\n            returnProperty: 'movementSpeedPct'\n        },\n        {\n            attributeName: 'slow',\n            label: 'Movement Speed Bonus',\n            controlType: 'text',\n            noLevel: true,\n            fn: function (v, a, parent, index, abilityModel, ability) {\n                return a;\n            },\n            returnProperty: 'movementSpeedPctReduction'\n        }\n    ],\n    'bane_nightmare': [\n        {\n            label: 'Duration',\n            controlType: 'input'\n        },\n        {\n            label: 'DAMAGE:',\n            controlType: 'text',\n            fn: function (v, a, parent, index, abilityModel, ability) {\n                return abilityModel.getAbilityPropertyValue(ability, 'damage')*v;\n            }\n        }\n    ],\n    'bane_fiends_grip': [\n        {\n            label: 'Duration',\n            controlType: 'input'\n        },\n        {\n            label: 'Enemy Max Mana',\n            controlType: 'input'\n        },\n        {\n            attributeName: 'fiend_grip_damage',\n            label: 'Total Damage',\n            controlType: 'text',\n            controls: [0,1],\n            fn: function (v, a, parent, index, abilityModel, ability) {\n                if (parent.inventory.hasScepter()) {\n                    return v[0]*abilityModel.getAbilityAttributeValue(ability.attributes, 'fiend_grip_damage_scepter',ability.level());\n                }\n                else {\n                    return v[0]*a;\n                }\n            }\n        },\n        {\n            attributeName: 'fiend_grip_mana_drain',\n            label: 'Total Mana Drain',\n            controlType: 'text',\n            controls: [0,1],\n            noLevel: true,\n            fn: function (v, a, parent, index, abilityModel, ability) {\n                if (parent.inventory.hasScepter()) {\n                    return v[0]*v[1]*abilityModel.getAbilityAttributeValue(ability.attributes, 'fiend_grip_mana_drain_scepter',ability.level())/100;\n                }\n                else {\n                    return v[0]*v[1]*a/100;\n                }\n            }\n        }\n    ],\n    'batrider_sticky_napalm': [\n        {\n            label: 'Stacks',\n            controlType: 'input'\n        },\n        {\n            attributeName: 'damage',\n            label: 'Total Bonus Damage',\n            controlType: 'text',\n            fn: function (v, a, parent, index, abilityModel, ability) {\n                return v*a;\n            },\n            returnProperty: 'bonusDamage'\n        },\n        {\n            attributeName: 'movement_speed_pct',\n            label: 'Enemy Movement Speed Slow',\n            controlType: 'text',\n            fn: function (v, a, parent, index, abilityModel, ability) {\n                return v*a;\n            },\n            returnProperty: 'movementSpeedPctReduction'\n        },\n        {\n            attributeName: 'turn_rate_pct',\n            label: 'Enemy Turn Rate Slow',\n            controlType: 'text',\n            fn: function (v, a, parent, index, abilityModel, ability) {\n                return a;\n            },\n            returnProperty: 'turnRateReduction'\n        }\n    ],\n    'batrider_firefly': [\n        {\n            label: 'Duration',\n            controlType: 'input'\n        },\n        {\n            attributeName: 'damage_per_second',\n            label: 'Total Damage',\n            controlType: 'text',\n            fn: function (v, a, parent, index, abilityModel, ability) {\n                return v*a;\n            }\n        }\n    ],\n    'bloodseeker_rupture': [\n        {\n            label: 'Enemy Distance Traveled',\n            controlType: 'input'\n        },\n        {\n            attributeName: 'movement_damage_pct',\n            label: 'DAMAGE:',\n            ignoreTooltip: true,\n            controlType: 'text',\n            fn: function (v, a, parent, index, abilityModel, ability) {\n                return abilityModel.getAbilityPropertyValue(ability, 'damage') + v*a/100;\n            }\n        }\n    ],\n    'bristleback_viscous_nasal_goo': [\n        {\n            label: 'Stacks',\n            controlType: 'input'\n        },\n        {\n            attributeName: 'armor_per_stack',\n            label: 'Enemy Armor Reduction',\n            controlType: 'text',\n            fn: function (v, a, parent, index, abilityModel, ability) {\n                return -v*a;\n            },\n            returnProperty: 'armorReduction'\n        },\n        {\n            attributeName: 'move_slow_per_stack',\n            label: '%SLOW:',\n            ignoreTooltip: true,\n            controlType: 'text',\n            fn: function (v, a, parent, index, abilityModel, ability) {\n                return -(abilityModel.getAbilityAttributeValue(ability.attributes, 'base_move_slow',0)+v*a);\n            },\n            returnProperty: 'movementSpeedPctReduction'\n        }\n    ],\n    'bristleback_quill_spray': [\n        {\n            label: 'Stacks',\n            controlType: 'input'\n        },\n        {\n            attributeName: 'quill_stack_damage',\n            label: 'DAMAGE',\n            controlType: 'text',\n            fn: function (v, a, parent, index, abilityModel, ability) {\n                var total = abilityModel.getAbilityAttributeValue(ability.attributes, 'quill_base_damage',ability.level())+v*a,\n                damage_cap = abilityModel.getAbilityAttributeValue(ability.attributes, 'max_damage',0);\n                if (total > damage_cap) {\n                    total = damage_cap;\n                }\n                return total;\n            }\n        }\n    ],\n    'bristleback_bristleback': [\n        {\n            label: 'Damage From',\n            controlType: 'radio',\n            controlValueType: 'string',\n            controlOptions: [\n                {text: 'Back', value: 'back'},\n                {text: 'Side', value: 'side'}\n            ]\n        },\n        {\n            attributeName: 'back_damage_reduction',\n            label: '%DAMAGE REDUCTION:',\n            ignoreTooltip: true,\n            controlType: 'text',\n            fn: function (v, a, parent, index, abilityModel, ability) {\n                var ability = abilityModel.abilities().find(function(b) {\n                    return b.name == 'bristleback_bristleback';\n                });\n                if (v == 'back') {\n                    var total = abilityModel.getAbilityAttributeValue(ability.attributes, 'back_damage_reduction', ability.level());\n                }\n                else {\n                    var total = abilityModel.getAbilityAttributeValue(ability.attributes, 'side_damage_reduction', ability.level());\n                }\n                return -total;\n            },\n            returnProperty: 'damageReduction'\n        }\n    ],\n    'bristleback_warpath': [\n        {\n            label: 'Stacks',\n            controlType: 'input'\n        },\n        {\n            attributeName: 'damage_per_stack',\n            label: 'BONUS DAMAGE:',\n            ignoreTooltip: true,\n            controlType: 'text',\n            fn: function (v, a, parent, index, abilityModel, ability) {\n                if (v < 1) {\n                    return 0;\n                }\n                else {\n                    return abilityModel.getAbilityAttributeValue(ability.attributes, 'base_damage',ability.level())+(v-1)*a;\n                }\n            }\n        },\n        {\n            attributeName: 'move_speed_per_stack',\n            label: '%MOVEMENT:',\n            ignoreTooltip: true,\n            controlType: 'text',\n            fn: function (v, a, parent, index, abilityModel, ability) {\n                if (v < 1) {\n                    return 0;\n                }\n                else {\n                    return abilityModel.getAbilityAttributeValue(ability.attributes, 'base_move_speed',ability.level())+(v-1)*a;\n                }\n            },\n            returnProperty: 'movementSpeedPct'\n        }\n    ],\n    'centaur_return': [\n        {\n            label: 'Strength',\n            controlType: 'input'\n        },\n        {\n            attributeName: 'strength_pct',\n            label: 'DAMAGE:',\n            controlType: 'text',\n            fn: function (v, a, parent, index, abilityModel, ability) {\n                return abilityModel.getAbilityAttributeValue(ability.attributes, 'return_damage',ability.level()) + v*a/100;\n            }\n        }\n    ],\n    'centaur_stampede': [\n        {\n            label: 'Strength',\n            controlType: 'input'\n        },\n        {\n            attributeName: 'strength_damage',\n            label: 'DAMAGE:',\n            ignoreTooltip: true,\n            controlType: 'text',\n            fn: function (v, a, parent, index, abilityModel, ability) {\n                return v*a;\n            }\n        },\n        {\n            attributeName: 'slow_movement_speed',\n            label: 'Enemy Movement Speed Slow',\n            controlType: 'text',\n            fn: function (v, a, parent, index, abilityModel, ability) {\n                return -a;\n            },\n            returnProperty: 'movementSpeedPctReduction'\n        }\n    ],\n    'clinkz_death_pact': [\n        {\n            label: 'Consumed Unit HP',\n            controlType: 'input'\n        },\n        {\n            attributeName: 'damage_gain_pct',\n            label: 'BASE DAMAGE GAIN:',\n            ignoreTooltip: true,\n            controlType: 'text',\n            fn: function (v, a, parent, index, abilityModel, ability) {\n                return v*a/100;\n            },\n            returnProperty: 'baseDamage'\n        },\n        {\n            attributeName: 'health_gain_pct',\n            label: 'HEALTH GAIN:',\n            ignoreTooltip: true,\n            controlType: 'text',\n            fn: function (v, a, parent, index, abilityModel, ability) {\n                return v*a/100;\n            },\n            returnProperty: 'bonusHealth'\n        }\n    ],\n    'crystal_maiden_frostbite': [\n        {\n            label: 'Duration',\n            controlType: 'input'\n        },\n        {\n            label: 'DAMAGE:',\n            controlType: 'text',\n            fn: function (v, a, parent, index, abilityModel, ability) {\n                return abilityModel.getAbilityPropertyValue(ability, 'damage')*v;\n            }\n        }\n    ],\n    'dark_seer_ion_shell': [\n        {\n            label: 'Duration',\n            controlType: 'input'\n        },\n        {\n            attributeName: 'damage_per_second',\n            label: 'Total Damage',\n            controlType: 'text',\n            fn: function (v, a, parent, index, abilityModel, ability) {\n                return v*a;\n            }\n        }\n    ],\n    'dazzle_shadow_wave': [\n        {\n            label: 'Targets',\n            controlType: 'input'\n        },\n        {\n            label: 'DAMAGE:',\n            controlType: 'text',\n            fn: function (v, a, parent, index, abilityModel, ability) {\n                return abilityModel.getAbilityPropertyValue(ability, 'damage')*v;\n            }\n        }\n    ],\n    'dazzle_weave': [\n        {\n            label: 'Duration',\n            controlType: 'input'\n        },\n        {\n            attributeName: 'armor_per_second',\n            label: 'ARMOR',\n            ignoreTooltip: true,\n            controlType: 'text',\n            fn: function (v, a, parent, index, abilityModel, ability) {\n                return v*a;\n            },\n            returnProperty: 'armor'\n        },\n        {\n            attributeName: 'armor_per_second',\n            label: 'ARMOR REDUCTION:',\n            ignoreTooltip: true,\n            controlType: 'text',\n            fn: function (v, a, parent, index, abilityModel, ability) {\n                return -v*a;\n            },\n            returnProperty: 'armorReduction'\n        }\n    ],\n    'death_prophet_exorcism': [\n        {\n            label: 'Damage Dealt',\n            controlType: 'input'\n        },\n        {\n            attributeName: 'heal_percent',\n            label: 'Total Armor',\n            controlType: 'text',\n            fn: function (v, a, parent, index, abilityModel, ability) {\n                return v*a/100;\n            }\n        }\n    ],\n    'disruptor_static_storm': [\n        {\n            label: 'Duration',\n            controlType: 'input'\n        },\n        {\n            label: 'DAMAGE:',\n            controlType: 'text',\n            fn: function (v, a, parent, index, abilityModel, ability) {\n                var damagevalue = 0.25 * (130 + 40 * ability.level()) * (1/20),\n                mult = (v*4)*((v*4)+1)/2;\n                return damagevalue * mult;\n            }\n        }\n    ],\n    'doom_bringer_scorched_earth': [\n        {\n            label: 'Duration',\n            controlType: 'input'\n        },\n        {\n            attributeName: 'damage_per_second',\n            label: 'Total Damage',\n            controlType: 'text',\n            fn: function (v, a, parent, index, abilityModel, ability) {\n                return v*a;\n            }\n        },\n        {\n            attributeName: 'bonus_movement_speed_pct',\n            label: 'Total Damage',\n            controlType: 'text',\n            fn: function (v, a, parent, index, abilityModel, ability) {\n                return a;\n            },\n            returnProperty: 'movementSpeedPct'\n        },\n        {\n            attributeName: 'damage_per_second',\n            label: 'HP REGEN:',\n            ignoreTooltip: true,\n            controlType: 'text',\n            fn: function (v, a, parent, index, abilityModel, ability) {\n                return a;\n            },\n            returnProperty: 'healthregen'\n        }\n    ],\n    'doom_bringer_doom': [\n        {\n            label: 'Duration',\n            controlType: 'input'\n        },\n        {\n            attributeName: 'damage',\n            label: 'Total Damage',\n            controlType: 'text',\n            fn: function (v, a, parent, index, abilityModel, ability) {\n                if (parent.inventory.hasScepter()) {\n                    return v*abilityModel.getAbilityAttributeValue(ability.attributes, 'damage_scepter',ability.level());\n                }\n                else {\n                    return v*a;\n                }\n            }\n        }\n    ],\n    'dragon_knight_elder_dragon_form': [\n        {\n            label: 'Duration',\n            controlType: 'input'\n        },\n        {\n            attributeName: 'bonus_attack_range',\n            label: 'Total Damage',\n            controlType: 'text',\n            fn: function (v, a, parent, index, abilityModel, ability) {\n                return a;\n            },\n            returnProperty: 'attackrange'\n        },\n        {\n            attributeName: 'bonus_movement_speed',\n            label: 'Total Damage',\n            controlType: 'text',\n            fn: function (v, a, parent, index, abilityModel, ability) {\n                return a;\n            },\n            returnProperty: 'movementSpeedFlat'\n        }\n    ],\n    'drow_ranger_trueshot': [\n        {\n            label: 'Drow\\'s Agility',\n            controlType: 'input',\n            display: 'buff'\n        },\n        {\n            attributeName: 'trueshot_ranged_damage',\n            label: 'DAMAGE BONUS:',\n            ignoreTooltip: true,\n            controlType: 'text',\n            display: 'buff',\n            fn: function (v, a, parent, index, abilityModel, ability) {\n                return v*a/100;\n            },\n            returnProperty: 'bonusDamagePrecisionAura'\n        }\n    ],\n    'earth_spirit_rolling_boulder': [\n        {\n            label: 'Using Stone',\n            controlType: 'checkbox'\n        },\n        {\n            attributeName: 'move_slow',\n            label: 'Total Damage',\n            controlType: 'text',\n            fn: function (v, a, parent, index, abilityModel, ability) {\n                if (v) {\n                    return -a;\n                }\n                else {\n                    return 0;\n                }\n            },\n            returnProperty: 'movementSpeedPctReduction'\n        }\n    ],\n    'earthshaker_enchant_totem': [\n        {\n            label: 'Activated',\n            controlType: 'checkbox'\n        },\n        {\n            attributeName: 'totem_damage_percentage',\n            label: 'DAMAGE',\n            controlType: 'text',\n            fn: function (v, a, parent, index, abilityModel, ability) {\n                if (v) {\n                    return a;\n                }\n                else {\n                    return 0;\n                }\n            },\n            returnProperty: 'baseDamageMultiplier'\n        }\n    ],\n    'earthshaker_echo_slam': [\n        {\n            label: 'Enemies in Range',\n            controlType: 'input'\n        },\n        {\n            attributeName: 'echo_slam_echo_damage',\n            label: 'Total Damage',\n            controlType: 'text',\n            fn: function (v, a, parent, index, abilityModel, ability) {\n                return v*a;\n            }\n        }\n    ],\n    'elder_titan_ancestral_spirit': [\n        {\n            label: 'HEROES PASSED THROUGH',\n            controlType: 'input'\n        },\n        {\n            label: 'CREEPS PASSED THROUGH',\n            controlType: 'input'\n        },\n        {\n            attributeName: 'damage_creeps',\n            label: 'DAMAGE:',\n            ignoreTooltip: true,\n            controlType: 'text',\n            controls: [0,1],\n            fn: function (v, a, parent, index, abilityModel, ability) {\n                return v[0]*abilityModel.getAbilityAttributeValue(ability.attributes, 'damage_heroes',ability.level()) + v[1]*a;\n            },\n            returnProperty: 'bonusDamage'\n        },\n        {\n            attributeName: 'move_pct_creeps',\n            label: '%BONUS SPEED:',\n            ignoreTooltip: true,\n            controlType: 'text',\n            controls: [0,1],\n            fn: function (v, a, parent, index, abilityModel, ability) {\n                return v[0]*abilityModel.getAbilityAttributeValue(ability.attributes, 'move_pct_heroes',ability.level()) + v[1]*a;\n            },\n            returnProperty: 'movementSpeedPct'\n        }\n    ],\n    'elder_titan_earth_splitter': [\n        {\n            label: 'Enemy Max Health',\n            controlType: 'input'\n        },\n        {\n            attributeName: 'damage_pct',\n            label: 'Total Damage',\n            controlType: 'text',\n            fn: function (v, a, parent, index, abilityModel, ability) {\n                return v*a/100;\n            }\n        },\n        {\n            attributeName: 'slow_pct',\n            label: 'Total Damage',\n            controlType: 'text',\n            fn: function (v, a, parent, index, abilityModel, ability) {\n                return -a;\n            },\n            returnProperty: 'movementSpeedPctReduction'\n        }\n    ],\n    'enchantress_natures_attendants': [\n        {\n            label: 'Duration',\n            controlType: 'input'\n        },\n        {\n            attributeName: 'heal',\n            label: 'HEAL:',\n            ignoreTooltip: true,\n            controlType: 'text',\n            fn: function (v, a, parent, index, abilityModel, ability) {\n                return abilityModel.getAbilityAttributeValue(ability.attributes, 'wisp_count',ability.level())*v*a;\n            }\n        }\n    ],\n    'enigma_malefice': [\n        {\n            label: 'Hits',\n            controlType: 'input'\n        },\n        {\n            attributeName: 'damage',\n            label: 'DAMAGE:',\n            ignoreTooltip: true,\n            controlType: 'text',\n            fn: function (v, a, parent, index, abilityModel, ability) {\n                return v*a;\n            }\n        },\n        {\n            attributeName: 'stun_duration',\n            label: 'Total Damage',\n            controlType: 'text',\n            fn: function (v, a, parent, index, abilityModel, ability) {\n                return v*a;\n            }\n        }\n    ],\n    'enigma_midnight_pulse': [\n        {\n            label: 'Duration',\n            controlType: 'input'\n        },\n        {\n            label: 'Enemy Max Health',\n            controlType: 'input'\n        },\n        {\n            attributeName: 'damage_percent',\n            label: 'DAMAGE:',\n            ignoreTooltip: true,\n            controlType: 'text',\n            controls: [0,1],\n            fn: function (v, a, parent, index, abilityModel, ability) {\n                return v[0]*v[1]*a/100;\n            }\n        }\n    ],\n    'enigma_black_hole': [\n        {\n            label: 'Duration',\n            controlType: 'input'\n        },\n        {\n            attributeName: 'far_damage',\n            label: 'Total Damage',\n            controlType: 'text',\n            fn: function (v, a, parent, index, abilityModel, ability) {\n                return v*a;\n            }\n        },\n        {\n            attributeName: 'near_damage',\n            label: 'Total Damage',\n            controlType: 'text',\n            fn: function (v, a, parent, index, abilityModel, ability) {\n                return v*a;\n            }\n        }\n    ],\n    'faceless_void_time_lock': [\n        {\n            label: 'In Chronosphere',\n            controlType: 'checkbox'\n        },\n        {\n            attributeName: 'bonus_damage',\n            label: '%MOVESPEED AS DAMAGE',\n            controlType: 'text',\n            fn: function (v, a, parent, index, abilityModel, ability) {\n                if (v) {\n                    return a*2;\n                }\n                else {\n                    return a;\n                }\n            },\n            returnProperty: 'bashBonusDamage'\n        },\n        {\n            attributeName: 'duration',\n            label: 'Total Damage',\n            controlType: 'text',\n            fn: function (v, a, parent, index, abilityModel, ability) {\n                return a;\n            }\n        },\n        {\n            attributeName: 'chance_pct',\n            label: 'Total Damage',\n            controlType: 'text',\n            fn: function (v, a, parent, index, abilityModel, ability) {\n                return a;\n            },\n            returnProperty: 'bash'\n        }\n    ],\n    'gyrocopter_rocket_barrage': [\n        {\n            label: 'Rockets',\n            controlType: 'input'\n        },\n        {\n            attributeName: 'rockets_per_second',\n            label: 'Total Damage',\n            controlType: 'text',\n            fn: function (v, a, parent, index, abilityModel, ability) {\n                return a;\n            }\n        },\n        {\n            label: 'DAMAGE:',\n            controlType: 'text',\n            fn: function (v, a, parent, index, abilityModel, ability) {\n                return abilityModel.getAbilityPropertyValue(ability, 'damage')*v;\n            }\n        }\n    ],\n/*        'gyrocopter_homing_missile': [\n        {\n            label: 'Distance Traveled',\n            controlType: 'input'\n        },\n        {\n            attributeName: 'damage',\n            label: 'Total Damage',\n            controlType: 'text',\n            fn: function (v, a, parent, index, abilityModel, ability) {\n                return v*a;\n            }\n        }\n    ],\n    'gyrocopter_flak_cannon': [\n        {\n            label: 'Attacks',\n            controlType: 'input'\n        },\n        {\n            attributeName: 'damage',\n            label: 'Total Damage',\n            controlType: 'text',\n            fn: function (v, a, parent, index, abilityModel, ability) {\n                return v*a;\n            }\n        }\n    ],*/\n    'huskar_burning_spear': [\n        {\n            label: 'Stacks',\n            controlType: 'input'\n        },\n        {\n            attributeName: 'health_cost',\n            label: 'Total Damage',\n            controlType: 'text',\n            fn: function (v, a, parent, index, abilityModel, ability) {\n                return v*a;\n            }\n        },\n        {\n            label: 'DAMAGE:',\n            controlType: 'text',\n            fn: function (v, a, parent, index, abilityModel, ability) {\n                return abilityModel.getAbilityPropertyValue(ability, 'damage')*v;\n            }\n        }\n    ],\n    'huskar_berserkers_blood': [\n        {\n            label: '%HP',\n            controlType: 'input'\n        },\n        {\n            attributeName: 'hp_threshold_max',\n            label: 'Health at given %HP:',\n            ignoreTooltip: true,\n            controlType: 'text',\n            fn: function (v, a, parent, index, abilityModel, ability) {\n                return parent.health()*v/100;\n            }\n        },\n        {\n            attributeName: 'hp_threshold_max',\n            label: 'Total Damage',\n            controlType: 'text',\n            fn: function (v, a, parent, index, abilityModel, ability) {\n                return a;\n            }\n        },\n        {\n            attributeName: 'maximum_resistance',\n            label: 'MAGIC RESISTANCE BONUS:',\n            ignoreTooltip: true,\n            controlType: 'text',\n            fn: function (v, a, parent, index, abilityModel, ability) {\n                var v = Math.min(v, 100);\n                v = Math.max(v, 10);\n                var hp_threshold_max = abilityModel.getAbilityAttributeValue(ability.attributes, 'hp_threshold_max',0);\n                var d = 100 - hp_threshold_max;\n                var c = (v - hp_threshold_max) / d;\n                c = 1 - c;\n                return c*a;\n            },\n            returnProperty: 'magicResist'\n        },\n        {\n            attributeName: 'maximum_attack_speed',\n            label: 'ATTACK SPEED BONUS:',\n            ignoreTooltip: true,\n            controlType: 'text',\n            fn: function (v, a, parent, index, abilityModel, ability) {\n                var v = Math.min(v, 100);\n                v = Math.max(v, 10);\n                var hp_threshold_max = abilityModel.getAbilityAttributeValue(ability.attributes, 'hp_threshold_max',0);\n                var d = 100 - hp_threshold_max;\n                var c = (v - hp_threshold_max) / d;\n                c = 1 - c;\n                return c*a;\n            },\n            returnProperty: 'attackspeed'\n        }\n    ],\n    'huskar_life_break': [\n        {\n            label: 'Enemy Current HP',\n            controlType: 'input'\n        },\n        {\n            attributeName: 'health_damage',\n            label: 'DAMAGE:',\n            ignoreTooltip: true,\n            controlType: 'text',\n            fn: function (v, a, parent, index, abilityModel, ability) {\n                return v*a;\n            }\n        },\n        {\n            label: 'Huskar Current HP',\n            controlType: 'input'\n        },\n        {\n            attributeName: 'health_cost_percent',\n            label: 'DAMAGE TAKEN:',\n            ignoreTooltip: true,\n            controlType: 'text',\n            fn: function (v, a, parent, index, abilityModel, ability) {\n                return v*a;\n            }\n        },\n        {\n            attributeName: 'movespeed',\n            label: 'Total Damage',\n            controlType: 'text',\n            fn: function (v, a, parent, index, abilityModel, ability) {\n                return a;\n            },\n            returnProperty: 'movementSpeedPctReduction'\n        }\n    ],\n    'invoker_quas': [\n        {\n            label: 'Instances',\n            controlType: 'input'\n        },\n        {\n            attributeName: 'bonus_strength',\n            label: 'Total Damage',\n            controlType: 'text',\n            fn: function (v, a, parent, index, abilityModel, ability) {\n                return a;\n            },\n            returnProperty: 'bonusStrength'\n        },\n        {\n            attributeName: 'health_regen_per_instance',\n            label: 'HP REGEN:',\n            ignoreTooltip: true,\n            controlType: 'text',\n            fn: function (v, a, parent, index, abilityModel, ability) {\n                return v*a;\n            },\n            returnProperty: 'healthregen'\n        }\n    ],\n    'invoker_wex': [\n        {\n            label: 'Instances',\n            controlType: 'input'\n        },\n        {\n            attributeName: 'bonus_agility',\n            label: 'Total Damage',\n            controlType: 'text',\n            fn: function (v, a, parent, index, abilityModel, ability) {\n                return a;\n            },\n            returnProperty: 'bonusAgility'\n        },\n        {\n            attributeName: 'move_speed_per_instance',\n            label: '%MOVE SPEED:',\n            ignoreTooltip: true,\n            controlType: 'text',\n            fn: function (v, a, parent, index, abilityModel, ability) {\n                return v*a;\n            },\n            returnProperty: 'movementSpeedPct'\n        },\n        {\n            attributeName: 'attack_speed_per_instance',\n            label: '%ATTACK SPEED:',\n            ignoreTooltip: true,\n            controlType: 'text',\n            fn: function (v, a, parent, index, abilityModel, ability) {\n                return v*a;\n            },\n            returnProperty: 'attackspeed'\n        }\n    ],\n    'invoker_exort': [\n        {\n            label: 'Instances',\n            controlType: 'input'\n        },\n        {\n            attributeName: 'bonus_intelligence',\n            label: 'Total Damage',\n            controlType: 'text',\n            fn: function (v, a, parent, index, abilityModel, ability) {\n                return a;\n            },\n            returnProperty: 'bonusInt'\n        },\n        {\n            attributeName: 'bonus_damage_per_instance',\n            label: 'DAMAGE:',\n            ignoreTooltip: true,\n            controlType: 'text',\n            fn: function (v, a, parent, index, abilityModel, ability) {\n                return v*a;\n            },\n            returnProperty: 'bonusDamage'\n        }\n    ],\n    'invoker_ghost_walk': [\n        {\n            label: 'Quas Level',\n            controlType: 'input'\n        },\n        {\n            attributeName: 'enemy_slow',\n            label: 'Total Damage',\n            controlType: 'text',\n            fn: function (v, a, parent, index, abilityModel, ability) {\n                if (v == 0) {\n                    return 0;\n                }\n                return abilityModel.getAbilityAttributeValue(ability.attributes, 'enemy_slow',v);\n            },\n            returnProperty: 'movementSpeedPctReduction'\n        },\n        {\n            label: 'Wex Level',\n            controlType: 'input',\n            display: 'ability'\n        },\n        {\n            attributeName: 'self_slow',\n            label: 'Total Damage',\n            controlType: 'text',\n            display: 'ability',\n            fn: function (v, a, parent, index, abilityModel, ability) {\n                if (v == 0) {\n                    return 0;\n                }\n                return abilityModel.getAbilityAttributeValue(ability.attributes, 'self_slow',v);\n            },\n            returnProperty: 'movementSpeedPct'\n        }\n    ],\n    'invoker_alacrity': [\n        {\n            label: 'Wex Level',\n            controlType: 'input'\n        },\n        {\n            attributeName: 'bonus_attack_speed',\n            label: 'Total Damage',\n            controlType: 'text',\n            fn: function (v, a, parent, index, abilityModel, ability) {\n                if (v == 0) {\n                    return 0;\n                }\n                return abilityModel.getAbilityAttributeValue(ability.attributes, 'bonus_attack_speed',v);\n            },\n            returnProperty: 'attackspeed'\n        },\n        {\n            label: 'Exort Level',\n            controlType: 'input',\n        },\n        {\n            attributeName: 'bonus_damage',\n            label: 'Total Damage',\n            controlType: 'text',\n            fn: function (v, a, parent, index, abilityModel, ability) {\n                if (v == 0) {\n                    return 0;\n                }\n                return abilityModel.getAbilityAttributeValue(ability.attributes, 'bonus_damage',v);\n            },\n            returnProperty: 'bonusDamage'\n        }\n    ],\n    'invoker_ice_wall': [\n        {\n            label: 'Quas Level',\n            controlType: 'input'\n        },\n        {\n            attributeName: 'slow',\n            label: 'Total Damage',\n            controlType: 'text',\n            fn: function (v, a, parent, index, abilityModel, ability) {\n                if (v == 0) {\n                    return 0;\n                }\n                return abilityModel.getAbilityAttributeValue(ability.attributes, 'slow',v);\n            },\n            returnProperty: 'movementSpeedPctReduction'\n        },\n        {\n            label: 'Exort Level',\n            controlType: 'input',\n            display: 'ability'\n        },\n        {\n            label: 'Duration',\n            controlType: 'input',\n            display: 'ability'\n        },\n        {\n            attributeName: 'damage_per_second',\n            label: 'DAMAGE:',\n            ignoreTooltip: true,\n            controlType: 'text',\n            display: 'ability',\n            controls: [1,2],\n            fn: function (v, a, parent, index, abilityModel, ability) {\n                if (v[0] == 0) {\n                    return 0;\n                }\n                return abilityModel.getAbilityAttributeValue(ability.attributes, 'damage_per_second',v[0])*v[1];\n            }\n        }\n    ],\n    'jakiro_dual_breath': [\n        {\n            label: 'Duration',\n            controlType: 'input'\n        },\n        {\n            label: 'DAMAGE:',\n            controlType: 'text',\n            fn: function (v, a, parent, index, abilityModel, ability) {\n                return abilityModel.getAbilityPropertyValue(ability, 'damage')*2 + \n                abilityModel.getAbilityAttributeValue(ability.attributes, 'burn_damage',ability.level())*v;\n            }\n        },\n        {\n            attributeName: 'slow_movement_speed_pct',\n            label: 'Total Damage',\n            controlType: 'text',\n            fn: function (v, a, parent, index, abilityModel, ability) {\n                return a;\n            },\n            returnProperty: 'movementSpeedPctReduction'\n        },\n        {\n            attributeName: 'slow_attack_speed_pct',\n            label: '%ATTACK SLOW:',\n            ignoreTooltip: true,\n            controlType: 'text',\n            fn: function (v, a, parent, index, abilityModel, ability) {\n                return a;\n            },\n            returnProperty: 'attackspeedreduction'\n        }\n    ],\n    'jakiro_liquid_fire': [\n        {\n            label: 'Duration',\n            controlType: 'input'\n        },\n        {\n            attributeName: 'damage',\n            label: 'Total Damage',\n            controlType: 'text',\n            fn: function (v, a, parent, index, abilityModel, ability) {\n                return v*a;\n            }\n        },\n        {\n            attributeName: 'slow_attack_speed_pct',\n            label: 'Total Damage',\n            controlType: 'text',\n            fn: function (v, a, parent, index, abilityModel, ability) {\n                return a;\n            },\n            returnProperty: 'attackspeedreduction'\n        }\n    ],\n    'jakiro_macropyre': [\n        {\n            label: 'Duration',\n            controlType: 'input'\n        },\n        {\n            attributeName: 'damage',\n            label: 'Total Damage',\n            controlType: 'text',\n            fn: function (v, a, parent, index, abilityModel, ability) {\n                return v*a;\n            }\n        }\n    ],\n    'juggernaut_blade_fury': [\n        {\n            label: 'Duration',\n            controlType: 'input'\n        },\n        {\n            label: 'DAMAGE:',\n            controlType: 'text',\n            fn: function (v, a, parent, index, abilityModel, ability) {\n                return abilityModel.getAbilityPropertyValue(ability, 'damage')*v;\n            }\n        }\n    ],\n    'juggernaut_healing_ward': [\n        {\n            label: 'Duration',\n            controlType: 'input'\n        },\n        {\n            label: 'Max Health',\n            controlType: 'input'\n        },\n        {\n            attributeName: 'healing_ward_heal_amount',\n            label: 'HEAL OVER TIME:',\n            ignoreTooltip: true,\n            controlType: 'text',\n            controls: [0,1],\n            fn: function (v, a, parent, index, abilityModel, ability) {\n                return v[0]*v[1]*a/100;\n            }\n        }\n    ],\n    'juggernaut_omni_slash': [\n        {\n            label: 'Jumps',\n            controlType: 'input'\n        },\n        {\n            label: 'MIN DAMAGE:',\n            ignoreTooltip: true,\n            controlType: 'text',\n            fn: function (v, a, parent, index, abilityModel, ability) {\n                return abilityModel.getAbilityAttributeValue(ability.attributes, 'omni_slash_damage',1)*v;\n            }\n        },\n        {\n            label: 'MAX DAMAGE:',\n            ignoreTooltip: true,\n            controlType: 'text',\n            fn: function (v, a, parent, index, abilityModel, ability) {\n                return abilityModel.getAbilityAttributeValue(ability.attributes, 'omni_slash_damage',2)*v;\n            }\n        }\n    ],\n    'keeper_of_the_light_illuminate': [\n        {\n            label: 'Duration',\n            controlType: 'input'\n        },\n        {\n            attributeName: 'damage_per_second',\n            label: 'DAMAGE:',\n            ignoreTooltip: true,\n            controlType: 'text',\n            fn: function (v, a, parent, index, abilityModel, ability) {\n                return v*a;\n            }\n        }\n    ],\n    'keeper_of_the_light_mana_leak': [\n        {\n            label: 'Distance Moved',\n            controlType: 'input'\n        },\n        {\n            label: 'Enemy Max Mana',\n            controlType: 'input'\n        },\n        {\n            attributeName: 'mana_leak_pct',\n            label: 'MANA LEAKED:',\n            ignoreTooltip: true,\n            controlType: 'text',\n            controls: [0,1],\n            fn: function (v, a, parent, index, abilityModel, ability) {\n                return v[0]/100*v[1]*a/100;\n            }\n        }\n    ],\n    'legion_commander_duel': [\n        {\n            label: 'Duel Wins',\n            controlType: 'input'\n        },\n        {\n            attributeName: 'reward_damage',\n            label: 'Total Damage:',\n            ignoreTooltip: true,\n            controlType: 'text',\n            fn: function (v, a, parent, index, abilityModel, ability) {\n                return v*a;\n            },\n            returnProperty: 'bonusDamage'\n        }\n    ],\n    'leshrac_pulse_nova': [\n        {\n            label: 'Duration',\n            controlType: 'input'\n        },\n        {\n            attributeName: 'damage',\n            label: 'Total Damage',\n            controlType: 'text',\n            fn: function (v, a, parent, index, abilityModel, ability) {\n                return v*a;\n            }\n        },\n        {\n            attributeName: 'mana_cost_per_second',\n            label: 'MANA COST:',\n            ignoreTooltip: true,\n            controlType: 'text',\n            fn: function (v, a, parent, index, abilityModel, ability) {\n                return v*a;\n            }\n        }\n    ],\n    'lich_chain_frost': [\n        {\n            label: 'Bounce Hits',\n            controlType: 'input'\n        },\n        {\n            attributeName: 'damage',\n            label: 'Total Damage',\n            controlType: 'text',\n            fn: function (v, a, parent, index, abilityModel, ability) {\n                return v*a;\n            }\n        },\n        {\n            attributeName: 'slow_movement_speed',\n            label: 'Enemy Movement Speed Slow',\n            controlType: 'text',\n            fn: function (v, a, parent, index, abilityModel, ability) {\n                return a;\n            },\n            returnProperty: 'movementSpeedPctReduction'\n        },\n        {\n            attributeName: 'slow_attack_speed',\n            label: 'Total Damage',\n            controlType: 'text',\n            fn: function (v, a, parent, index, abilityModel, ability) {\n                return a;\n            },\n            returnProperty: 'attackspeedreduction'\n        }\n    ],\n    'life_stealer_feast': [\n        {\n            label: 'Enemy Current HP',\n            controlType: 'input'\n        },\n        {\n            attributeName: 'hp_leech_percent',\n            label: 'Total Damage',\n            controlType: 'text',\n            fn: function (v, a, parent, index, abilityModel, ability) {\n                return v*a/100;\n            },\n            returnProperty: 'bonusDamage'\n        }\n    ],\n    'life_stealer_open_wounds': [\n        {\n            label: 'Duration',\n            controlType: 'input'\n        },\n        {\n            attributeName: 'heal_percent',\n            label: 'Total Damage',\n            controlType: 'text',\n            fn: function (v, a, parent, index, abilityModel, ability) {\n                return a;\n            },\n            returnProperty: 'lifesteal'\n        },\n        {\n            attributeName: 'slow_steps',\n            label: '%SLOW:',\n            ignoreTooltip: true,\n            controlType: 'text',\n            noLevel: true,\n            fn: function (v, a, parent, index, abilityModel, ability) {\n                return abilityModel.getAbilityAttributeValue(ability.attributes, 'slow_steps',v+1);\n            },\n            returnProperty: 'movementSpeedPctReduction'\n        }\n    ],\n    'lina_fiery_soul': [\n        {\n            label: 'Duration',\n            controlType: 'input'\n        },\n        {\n            attributeName: 'fiery_soul_move_speed_bonus',\n            label: 'Enemy Movement Speed Slow',\n            controlType: 'text',\n            fn: function (v, a, parent, index, abilityModel, ability) {\n                return v*a;\n            },\n            returnProperty: 'movementSpeedPct'\n        },\n        {\n            attributeName: 'fiery_soul_attack_speed_bonus',\n            label: 'Total Damage',\n            controlType: 'text',\n            fn: function (v, a, parent, index, abilityModel, ability) {\n                return v*a;\n            },\n            returnProperty: 'attackspeed'\n        }\n    ],\n    'lion_mana_drain': [\n        {\n            label: 'Duration',\n            controlType: 'input'\n        },\n        {\n            attributeName: 'mana_per_second',\n            label: 'MANA DRAINED:',\n            ignoreTooltip: true,\n            controlType: 'text',\n            fn: function (v, a, parent, index, abilityModel, ability) {\n                return v*a;\n            }\n        }\n    ],\n    'luna_moon_glaive': [\n        {\n            label: 'Damage',\n            controlType: 'input'\n        },\n        {\n            attributeName: 'damage_reduction_percent',\n            label: 'BOUNCE DAMAGE:',\n            ignoreTooltip: true,\n            controlType: 'text',\n            fn: function (v, a, parent, index, abilityModel, ability) {\n                var result = [];\n                for (var i = 1; i < 6; i++) {\n                    result.push((v*Math.pow(a/100,i)).toFixed(2))\n                }\n                return result.join('<br>');\n            }\n        }\n    ],\n    'luna_eclipse': [\n        {\n            label: 'Beam Count',\n            controlType: 'input'\n        },\n        {\n            attributeName: 'beams',\n            label: 'Total Damage',\n            controlType: 'text',\n            fn: function (v, a, parent, index, abilityModel, ability) {\n                var lucentBeamAbility = abilityModel.abilities().find(function(b) {\n                    return b.name == 'luna_lucent_beam';\n                });\n                if (lucentBeamAbility.level() == 0) return 0;\n                var damage = abilityModel.getAbilityPropertyValue(lucentBeamAbility, 'damage');\n                return v*damage;\n            }\n        }\n    ],\n    'medusa_mystic_snake': [\n        {\n            label: 'Jump Count',\n            controlType: 'input'\n        },\n        {\n            attributeName: 'snake_damage',\n            label: 'Damage Per Jump:',\n            ignoreTooltip: true,\n            controlType: 'method',\n            display: 'none',\n            fn: function (v, a, parent, index, abilityModel, ability) {\n                var snake_jumps = abilityModel.getAbilityAttributeValue(ability.attributes, 'snake_jumps',ability.level());\n                var snake_scale = abilityModel.getAbilityAttributeValue(ability.attributes, 'snake_scale',0);\n                var damage = [];\n                for (var i = 0; i < snake_jumps; i++) {\n                    damage.push(a + a * i * snake_scale/100);\n                }\n                return damage;\n            }\n        },\n        {\n            attributeName: 'snake_damage',\n            label: 'Damage Per Jump:',\n            ignoreTooltip: true,\n            controlType: 'text',\n            controls: [0,1],\n            fn: function (v, a, parent, index, abilityModel, ability) {\n                return v[1].join(' / ');\n            }\n        },\n        {\n            attributeName: 'snake_damage',\n            label: 'Total Damage:',\n            ignoreTooltip: true,\n            controlType: 'text',\n            controls: [0,1],\n            fn: function (v, a, parent, index, abilityModel, ability) {\n                return v[1].slice(0, v[0]).reduce(function (memo, o) { return memo + o }, 0);\n            }\n        },\n        {\n            attributeName: 'snake_damage',\n            label: 'Max Damage:',\n            ignoreTooltip: true,\n            controlType: 'text',\n            controls: [0,1],\n            fn: function (v, a, parent, index, abilityModel, ability) {\n                return v[1].reduce(function (memo, o) { return memo + o }, 0);\n            }\n        }\n    ],\n    'medusa_mana_shield': [\n        {\n            label: 'Damage',\n            controlType: 'input'\n        },\n        {\n            attributeName: 'damage_per_mana',\n            label: 'MANA USED:',\n            ignoreTooltip: true,\n            controlType: 'text',\n            fn: function (v, a, parent, index, abilityModel, ability) {\n                return (v/a).toFixed(2);\n            }\n        },\n        {\n            attributeName: 'absorption_tooltip',\n            label: '%DAMAGE REDUCTION:',\n            ignoreTooltip: true,\n            controlType: 'text',\n            fn: function (v, a, parent, index, abilityModel, ability) {\n                return -a;\n            },\n            returnProperty: 'damageReduction'\n        }\n    ],\n    'meepo_poof': [\n        {\n            label: 'Meepo Count',\n            controlType: 'input'\n        },\n        {\n            label: 'DAMAGE:',\n            controlType: 'text',\n            fn: function (v, a, parent, index, abilityModel, ability) {\n                return abilityModel.getAbilityPropertyValue(ability, 'damage')*v;\n            }\n        }\n    ],\n    'meepo_geostrike': [\n        {\n            label: 'Stacks',\n            controlType: 'input'\n        },\n        {\n            label: 'DAMAGE:',\n            ignoreTooltip: true,\n            controlType: 'text',\n            fn: function (v, a, parent, index, abilityModel, ability) {\n                return abilityModel.getAbilityPropertyValue(ability, 'damage')*v;\n            }\n        },\n        {\n            attributeName: 'slow',\n            label: '%SLOW:',\n            ignoreTooltip: true,\n            controlType: 'text',\n            noLevel: true,\n            fn: function (v, a, parent, index, abilityModel, ability) {\n                return abilityModel.getAbilityAttributeValue(ability.attributes, 'slow',ability.level())*v;\n            },\n            returnProperty: 'movementSpeedPctReduction'\n        }\n    ],\n    'mirana_arrow': [\n        {\n            label: 'Arrow Travel Distance',\n            controlType: 'input'\n        },\n        {\n            attributeName: 'arrow_max_stun',\n            label: 'STUN DURATION:',\n            ignoreTooltip: true,\n            controlType: 'text',\n            fn: function (v, a, parent, index, abilityModel, ability) {\n                var arrow_min_stun = abilityModel.getAbilityAttributeValue(ability.attributes, 'arrow_min_stun',0);\n                var arrow_max_stunrange = abilityModel.getAbilityAttributeValue(ability.attributes, 'arrow_max_stunrange',0);\n                var scale = Math.min(v, arrow_max_stunrange) / arrow_max_stunrange;\n                return Math.max(arrow_min_stun, Math.floor(a * scale / 0.1) * 0.1);\n            }\n        },\n        {\n            attributeName: 'arrow_bonus_damage',\n            label: 'TOTAL DAMAGE:',\n            ignoreTooltip: true,\n            controlType: 'text',\n            fn: function (v, a, parent, index, abilityModel, ability) {\n                var ability = ability;\n                var damage = ability.damage()[ability.level()-1];\n                var arrow_max_stunrange = abilityModel.getAbilityAttributeValue(ability.attributes, 'arrow_max_stunrange',0);\n                var scale = Math.min(v, arrow_max_stunrange) / arrow_max_stunrange;\n                var bonus_damage = Math.floor(a * scale / 2.8) * 2.8;\n                return damage + ' + ' + bonus_damage + ' = ' + (damage + bonus_damage);\n            }\n        }\n    ],\n    'morphling_morph_agi': [\n        {\n            label: 'Shifts',\n            controlType: 'input'\n        },\n        {\n            attributeName: 'points_per_tick',\n            label: 'AGI SHIFT GAIN:',\n            ignoreTooltip: true,\n            controlType: 'text',\n            fn: function (v, a, parent, index, abilityModel, ability) {\n                return v*a;\n            },\n            returnProperty: 'bonusAgility'\n        },\n        {\n            attributeName: 'points_per_tick',\n            label: 'STR SHIFT LOSS:',\n            ignoreTooltip: true,\n            controlType: 'text',\n            fn: function (v, a, parent, index, abilityModel, ability) {\n                return -v*a;\n            },\n            returnProperty: 'bonusStrength'\n        },\n        {\n            attributeName: 'bonus_attributes',\n            label: 'SHIFT TIME:',\n            controlType: 'text',\n            fn: function (v, a, parent, index, abilityModel, ability) {\n                return a;\n            },\n            returnProperty: 'bonusAgility2'\n        },\n        {\n            attributeName: 'morph_cooldown',\n            label: 'SHIFT TIME:',\n            ignoreTooltip: true,\n            controlType: 'text',\n            fn: function (v, a, parent, index, abilityModel, ability) {\n                return v*a;\n            }\n        },\n        {\n            attributeName: 'mana_cost',\n            label: 'SHIFT MANA COST:',\n            ignoreTooltip: true,\n            controlType: 'text',\n            fn: function (v, a, parent, index, abilityModel, ability) {\n                return v*a*abilityModel.getAbilityAttributeValue(ability.attributes, 'morph_cooldown',ability.level());\n            }\n        }\n    ],\n    'morphling_morph_str': [\n        {\n            label: 'Shifts',\n            controlType: 'input'\n        },\n        {\n            attributeName: 'points_per_tick',\n            label: 'STR SHIFT GAIN:',\n            ignoreTooltip: true,\n            controlType: 'text',\n            fn: function (v, a, parent, index, abilityModel, ability) {\n                return v*a;\n            },\n            returnProperty: 'bonusStrength'\n        },\n        {\n            attributeName: 'points_per_tick',\n            label: 'AGI SHIFT LOSS:',\n            ignoreTooltip: true,\n            controlType: 'text',\n            fn: function (v, a, parent, index, abilityModel, ability) {\n                return -v*a;\n            },\n            returnProperty: 'bonusAgility'\n        },\n        {\n            attributeName: 'bonus_attributes',\n            label: 'SHIFT TIME:',\n            controlType: 'text',\n            fn: function (v, a, parent, index, abilityModel, ability) {\n                return a;\n            },\n            returnProperty: 'bonusStrength2'\n        },\n        {\n            attributeName: 'morph_cooldown',\n            label: 'SHIFT TIME:',\n            ignoreTooltip: true,\n            controlType: 'text',\n            fn: function (v, a, parent, index, abilityModel, ability) {\n                return v*a;\n            }\n        },\n        {\n            attributeName: 'mana_cost',\n            label: 'SHIFT MANA COST:',\n            ignoreTooltip: true,\n            controlType: 'text',\n            fn: function (v, a, parent, index, abilityModel, ability) {\n                return v*a*abilityModel.getAbilityAttributeValue(ability.attributes, 'morph_cooldown',ability.level());\n            }\n        }\n    ],\n    'furion_wrath_of_nature': [\n        {\n            label: 'Duration',\n            controlType: 'input'\n        },\n        {\n            attributeName: 'damage',\n            label: 'Total Damage',\n            controlType: 'text',\n            fn: function (v, a, parent, index, abilityModel, ability) {\n                return v*a;\n            }\n        }\n    ],\n    'necrolyte_heartstopper_aura': [\n        {\n            label: 'Duration',\n            controlType: 'input'\n        },\n        {\n            label: 'Enemy Max Health',\n            controlType: 'input'\n        },\n        {\n            attributeName: 'aura_damage',\n            label: 'HEALTH LOST:',\n            ignoreTooltip: true,\n            controlType: 'text',\n            controls: [0,1],\n            fn: function (v, a, parent, index, abilityModel, ability) {\n                return v[0]*v[1]*a/100;\n            }\n        }\n    ],\n    'necrolyte_sadist': [\n        {\n            label: 'Unit Kills',\n            controlType: 'input'\n        },\n        {\n            label: 'Hero Kills',\n            controlType: 'input'\n        },\n        {\n            attributeName: 'health_regen',\n            label: 'Total Damage',\n            controlType: 'text',\n            controls: [0,1],\n            fn: function (v, a, parent, index, abilityModel, ability) {\n                var hero_multiplier = abilityModel.getAbilityAttributeValue(ability.attributes, 'hero_multiplier',0)\n                return (v[0]+v[1]*hero_multiplier)*a;\n            },\n            returnProperty: 'healthregen'\n        },\n        {\n            attributeName: 'mana_regen',\n            label: 'Total Damage',\n            controlType: 'text',\n            controls: [0,1],\n            fn: function (v, a, parent, index, abilityModel, ability) {\n                var hero_multiplier = abilityModel.getAbilityAttributeValue(ability.attributes, 'hero_multiplier',0)\n                return (v[0]+v[1]*hero_multiplier)*a;\n            },\n            returnProperty: 'manaregen'\n        }\n    ],\n    'night_stalker_crippling_fear': [\n        {\n            label: 'Is Night',\n            controlType: 'checkbox'\n        },\n        {\n            attributeName: 'miss_rate_night',\n            label: '%CHANCE TO MISS:',\n            ignoreTooltip: true,\n            controlType: 'text',\n            fn: function (v, a, parent, index, abilityModel, ability) {\n                if (v) {\n                    return abilityModel.getAbilityAttributeValue(ability.attributes, 'miss_rate_night',ability.level());\n                }\n                else {\n                    return abilityModel.getAbilityAttributeValue(ability.attributes, 'miss_rate_day',ability.level());\n                }\n            },\n            returnProperty: 'missChance'\n        }\n    ],    \n    'night_stalker_hunter_in_the_night': [\n        {\n            label: 'Is Night',\n            controlType: 'checkbox'\n        },\n        {\n            attributeName: 'bonus_attack_speed_night',\n            label: 'Total Damage',\n            controlType: 'text',\n            fn: function (v, a, parent, index, abilityModel, ability) {\n                if (v) {\n                    return a;\n                }\n                else {\n                    return 0;\n                }\n            },\n            returnProperty: 'attackspeed'\n        },\n        {\n            attributeName: 'bonus_movement_speed_pct_night',\n            label: 'Total Damage',\n            controlType: 'text',\n            fn: function (v, a, parent, index, abilityModel, ability) {\n                if (v) {\n                    return a;\n                }\n                else {\n                    return 0;\n                }\n            },\n            returnProperty: 'movementSpeedPct'\n        }\n    ],    \n    'obsidian_destroyer_arcane_orb': [\n        {\n            label: 'Current Mana',\n            controlType: 'input'\n        },\n        {\n            attributeName: 'mana_pool_damage_pct',\n            label: 'Total Damage',\n            controlType: 'text',\n            fn: function (v, a, parent, index, abilityModel, ability) {\n                return v*a/100;\n            },\n            returnProperty: 'bonusDamageOrb'\n        }\n    ],\n    'ogre_magi_ignite': [\n        {\n            label: 'Duration',\n            controlType: 'input'\n        },\n        {\n            attributeName: 'burn_damage',\n            label: 'Total Damage',\n            controlType: 'text',\n            fn: function (v, a, parent, index, abilityModel, ability) {\n                return v*a;\n            }\n        },\n        {\n            attributeName: 'slow_movement_speed_pct',\n            label: 'Total Damage',\n            controlType: 'text',\n            fn: function (v, a, parent, index, abilityModel, ability) {\n                return a;\n            },\n            returnProperty: 'movementSpeedPctReduction'\n        }\n    ],\n    'pudge_rot': [\n        {\n            label: 'Duration',\n            controlType: 'input'\n        },\n        {\n            label: 'DAMAGE:',\n            controlType: 'text',\n            fn: function (v, a, parent, index, abilityModel, ability) {\n                return abilityModel.getAbilityPropertyValue(ability, 'damage')*v;\n            }\n        },\n        {\n            attributeName: 'rot_slow',\n            label: 'Total Damage',\n            controlType: 'text',\n            fn: function (v, a, parent, index, abilityModel, ability) {\n                return a;\n            },\n            returnProperty: 'movementSpeedPctReduction'\n        }\n    ],\n    'pudge_flesh_heap': [\n        {\n            label: 'Stacks',\n            controlType: 'input'\n        },\n        {\n            attributeName: 'flesh_heap_strength_buff_amount',\n            label: 'Total Damage',\n            controlType: 'text',\n            fn: function (v, a, parent, index, abilityModel, ability) {\n                return v*a;\n            },\n            returnProperty: 'bonusStrength'\n        },\n        {\n            attributeName: 'flesh_heap_magic_resist',\n            label: 'Total Damage',\n            controlType: 'text',\n            fn: function (v, a, parent, index, abilityModel, ability) {\n                return a;\n            },\n            returnProperty: 'magicResist'\n        }\n    ],\n    'pudge_dismember': [\n        {\n            label: 'Duration',\n            controlType: 'input'\n        },\n        {\n            attributeName: 'dismember_damage',\n            label: 'Total Damage',\n            controlType: 'text',\n            fn: function (v, a, parent, index, abilityModel, ability) {\n                return v*a;\n            }\n        }\n    ],\n    'pugna_nether_ward': [\n        {\n            label: 'Enemy Mana Spent',\n            controlType: 'input'\n        },\n        {\n            attributeName: 'mana_multiplier',\n            label: 'DAMAGE:',\n            ignoreTooltip: true,\n            controlType: 'text',\n            fn: function (v, a, parent, index, abilityModel, ability) {\n                return v*a;\n            }\n        },\n        {\n            attributeName: 'mana_regen',\n            label: 'Total Damage',\n            controlType: 'text',\n            fn: function (v, a, parent, index, abilityModel, ability) {\n                return a;\n            },\n            returnProperty: 'manaregenreduction'\n        }\n    ],\n    'pugna_life_drain': [\n        {\n            label: 'Duration',\n            controlType: 'input'\n        },\n        {\n            attributeName: 'health_drain',\n            label: 'HEALTH DRAINED:',\n            ignoreTooltip: true,\n            controlType: 'text',\n            fn: function (v, a, parent, index, abilityModel, ability) {\n                return v*a;\n            }\n        }\n    ],\n    'queenofpain_shadow_strike': [\n        {\n            label: 'Duration',\n            controlType: 'input'\n        },\n        {\n            attributeName: 'movement_slow',\n            label: 'Total Damage',\n            controlType: 'text',\n            fn: function (v, a, parent, index, abilityModel, ability) {\n                return a;\n            },\n            returnProperty: 'movementSpeedPctReduction'\n        },\n        {\n            attributeName: 'strike_damage',\n            label: 'Total Damage:',\n            ignoreTooltip: true,\n            controlType: 'text',\n            fn: function (v, a, parent, index, abilityModel, ability) {\n                var duration_damage = abilityModel.getAbilityAttributeValue(ability.attributes, 'duration_damage',ability.level());\n                var ticks = Math.floor(v/3);\n                return a + duration_damage * ticks;\n            }\n        }\n    ],\n    'razor_plasma_field': [\n        {\n            label: 'Distance',\n            controlType: 'input'\n        },\n        {\n            attributeName: 'radius',\n            label: 'MIN DISTANCE:',\n            ignoreTooltip: true,\n            controlType: 'text',\n            fn: function (v, a, parent, index, abilityModel, ability) {\n                return 200;\n            }\n        },\n        {\n            attributeName: 'radius',\n            label: 'MAX DISTANCE:',\n            ignoreTooltip: true,\n            controlType: 'text',\n            fn: function (v, a, parent, index, abilityModel, ability) {\n                return 200 + a;\n            }\n        },\n        {\n            attributeName: 'radius',\n            label: 'Instance Damage',\n            ignoreTooltip: true,\n            controlType: 'text',\n            fn: function (v, a, parent, index, abilityModel, ability) {\n                var max_radius = a + 200;\n                var scale = (Math.min(Math.max(v, 200), max_radius) - 200) / (max_radius - 200);\n                var damage_min = abilityModel.getAbilityAttributeValue(ability.attributes, 'damage_min',ability.level());\n                var damage_max = abilityModel.getAbilityAttributeValue(ability.attributes, 'damage_max',ability.level());\n                return damage_min + (damage_max - damage_min) * scale;\n            }\n        }\n    ],\n    'razor_static_link': [\n        {\n            label: 'Duration',\n            controlType: 'input'\n        },\n        {\n            attributeName: 'drain_length',\n            label: 'Damage Drained:',\n            ignoreTooltip: true,\n            controlType: 'text',\n            fn: function (v, a, parent, index, abilityModel, ability) {\n                var tick_duration = Math.floor(v * 4) + 1;\n                var ticks = Math.min(a * 4 + 1, tick_duration);\n                var drain_rate = abilityModel.getAbilityAttributeValue(ability.attributes, 'drain_rate',ability.level());\n                return ticks * drain_rate/4;\n            },\n            returnProperty: 'bonusDamage'\n        },\n        {\n            attributeName: 'drain_length',\n            label: 'Enemy Damage Lost:',\n            ignoreTooltip: true,\n            controlType: 'text',\n            display: 'hidden',\n            fn: function (v, a, parent, index, abilityModel, ability) {\n                var tick_duration = Math.floor(v * 4) + 1;\n                var ticks = Math.min(a * 4 + 1, tick_duration);\n                var drain_rate = abilityModel.getAbilityAttributeValue(ability.attributes, 'drain_rate',ability.level());\n                return ticks * drain_rate/4;\n            },\n            returnProperty: 'bonusDamageReduction'\n        }\n    ],\n    'razor_eye_of_the_storm': [\n        {\n            label: 'Duration',\n            controlType: 'input'\n        },\n        {\n            attributeName: 'damage',\n            label: 'Total Damage',\n            controlType: 'text',\n            fn: function (v, a, parent, index, abilityModel, ability) {\n                return v*a;\n            }\n        }\n    ],\n    'rubick_fade_bolt': [\n        {\n            label: 'Jumps',\n            controlType: 'input'\n        },\n        {\n            attributeName: 'damage',\n            label: 'Total Damage',\n            controlType: 'text',\n            fn: function (v, a, parent, index, abilityModel, ability) {\n                return a * (1 - v*abilityModel.getAbilityAttributeValue(ability.attributes, 'jump_damage_reduction_pct',ability.level())/100);\n            }\n        },\n        {\n            attributeName: 'hero_attack_damage_reduction',\n            label: 'Total Damage',\n            controlType: 'text',\n            fn: function (v, a, parent, index, abilityModel, ability) {\n                return a;\n            },\n            returnProperty: 'bonusDamageReduction'\n        }\n    ],\n    'sandking_sand_storm': [\n        {\n            label: 'Duration',\n            controlType: 'input'\n        },\n        {\n            label: 'DAMAGE:',\n            controlType: 'text',\n            fn: function (v, a, parent, index, abilityModel, ability) {\n                return abilityModel.getAbilityPropertyValue(ability, 'damage')*v;\n            }\n        }\n    ],\n    'sandking_epicenter': [\n        {\n            label: 'Pulses',\n            controlType: 'input'\n        },\n        {\n            attributeName: 'epicenter_damage',\n            label: 'DAMAGE:',\n            ignoreTooltip: true,\n            controlType: 'text',\n            fn: function (v, a, parent, index, abilityModel, ability) {\n                return v*a;\n            }\n        },\n        {\n            attributeName: 'epicenter_slow',\n            label: 'Total Damage',\n            controlType: 'text',\n            fn: function (v, a, parent, index, abilityModel, ability) {\n                return a;\n            },\n            returnProperty: 'movementSpeedPctReduction'\n        },\n        {\n            attributeName: 'epicenter_slow_as',\n            label: '%ATTACK SLOW:',\n            ignoreTooltip: true,\n            controlType: 'text',\n            fn: function (v, a, parent, index, abilityModel, ability) {\n                return a;\n            },\n            returnProperty: 'attackspeedreduction'\n        }\n    ],\n    'shadow_demon_shadow_poison': [\n        {\n            label: 'Duration',\n            controlType: 'input'\n        },\n        {\n            attributeName: 'stack_damage',\n            label: 'Total Damage',\n            controlType: 'text',\n            fn: function (v, a, parent, index, abilityModel, ability) {\n                var stackmult = [1,2,4,8];\n                if (v > 4) {\n                    return a * stackmult[3] + 50 * (v - 4);\n                }\n                else if (v <= 0) {\n                    return 0\n                }\n                else {\n                    return a * stackmult[v-1]\n                }\n            }\n        }\n    ],\n    'nevermore_necromastery': [\n        {\n            label: 'Souls',\n            controlType: 'input'\n        },\n        {\n            attributeName: 'necromastery_damage_per_soul',\n            label: 'DAMAGE:',\n            ignoreTooltip: true,\n            controlType: 'text',\n            fn: function (v, a, parent, index, abilityModel, ability) {\n                return v*a;\n            },\n            returnProperty: 'bonusDamage'\n        }\n    ],\n    'nevermore_requiem': [\n        {\n            label: 'Line Hit Count',\n            controlType: 'input'\n        },\n        {\n            attributeName: 'requiem_reduction_damage',\n            label: 'Damage:',\n            ignoreTooltip: true,\n            controlType: 'text',\n            fn: function (v, a, parent, index, abilityModel, ability) {\n                return abilityModel.getAbilityPropertyValue(ability, 'damage')*v;\n            }\n        },\n        {\n            label: 'Return Line Hit Count (Scepter)',\n            controlType: 'input'\n        },\n        {\n            attributeName: 'requiem_damage_pct_scepter',\n            label: 'Damage/Heal:',\n            ignoreTooltip: true,\n            controlType: 'text',\n            fn: function (v, a, parent, index, abilityModel, ability) {\n                return abilityModel.getAbilityPropertyValue(ability, 'damage')*v*a/100;\n            }\n        },\n        {\n            attributeName: 'requiem_damage_pct_scepter',\n            label: 'Total Damage:',\n            ignoreTooltip: true,\n            controlType: 'text',\n            controls: [0,1],\n            fn: function (v, a, parent, index, abilityModel, ability) {\n                var damage = abilityModel.getAbilityPropertyValue(ability, 'damage');\n                return damage*v[0] + damage*v[1]*a/100;\n            }\n        },\n        {\n            attributeName: 'requiem_reduction_damage',\n            label: '%DAMAGE REDUCTION:',\n            ignoreTooltip: true,\n            controlType: 'text',\n            fn: function (v, a, parent, index, abilityModel, ability) {\n                return a;\n            },\n            returnProperty: 'baseDamageReductionPct'\n        },\n        {\n            attributeName: 'requiem_reduction_ms',\n            label: '%DAMAGE REDUCTION:',\n            controlType: 'text',\n            fn: function (v, a, parent, index, abilityModel, ability) {\n                return a;\n            },\n            returnProperty: 'movementSpeedPctReduction'\n        }\n    ],\n    'shadow_shaman_shackles': [\n        {\n            label: 'Duration',\n            controlType: 'input'\n        },\n        {\n            label: 'DAMAGE:',\n            controlType: 'text',\n            fn: function (v, a, parent, index, abilityModel, ability) {\n                return abilityModel.getAbilityPropertyValue(ability, 'damage')*v;\n            }\n        }\n    ],\n    'silencer_curse_of_the_silent': [\n        {\n            label: 'Duration',\n            controlType: 'input'\n        },\n        {\n            attributeName: 'damage',\n            label: 'Total Damage',\n            controlType: 'text',\n            fn: function (v, a, parent, index, abilityModel, ability) {\n                return Math.floor(v)*a;\n            }\n        },\n        {\n            attributeName: 'movespeed',\n            label: 'Total Damage',\n            controlType: 'text',\n            fn: function (v, a, parent, index, abilityModel, ability) {\n                return a;\n            },\n            returnProperty: 'movementSpeedPctReduction'\n        }\n    ],\n/*        'silencer_glaives_of_wisdom': [\n        {\n            label: 'Duration',\n            controlType: 'input'\n        },\n        {\n            attributeName: 'damage',\n            label: 'Total Damage',\n            controlType: 'text',\n            fn: function (v, a, parent, index, abilityModel, ability) {\n                return v*a;\n            }\n        }\n    ],*/\n    'skywrath_mage_mystic_flare': [\n        {\n            label: 'Duration',\n            controlType: 'input'\n        },\n        {\n            attributeName: 'damage',\n            label: 'Total Damage',\n            controlType: 'text',\n            fn: function (v, a, parent, index, abilityModel, ability) {\n                return v*a;\n            }\n        }\n    ],\n    'slark_essence_shift': [\n        {\n            label: 'Attacks',\n            controlType: 'input'\n        },\n        {\n            attributeName: 'agi_gain',\n            label: 'Total Damage',\n            controlType: 'text',\n            display: 'ability',\n            fn: function (v, a, parent, index, abilityModel, ability) {\n                return v*a;\n            },\n            returnProperty: 'bonusAgility'\n        },\n        {\n            attributeName: 'stat_loss',\n            label: 'Total Damage',\n            controlType: 'text',\n            fn: function (v, a, parent, index, abilityModel, ability) {\n                return -v*a;\n            },\n            returnProperty: 'bonusAllStatsReduction'\n        }\n    ],\n    'slark_shadow_dance': [\n        {\n            label: 'Duration',\n            controlType: 'input'\n        },\n        {\n            attributeName: 'bonus_regen_pct',\n            label: 'TOTAL HEALTH REGENERATED:',\n            ignoreTooltip: true,\n            controlType: 'text',\n            fn: function (v, a, parent, index, abilityModel, ability) {\n                return v*parent.health()*a/100;\n            }\n        },\n        {\n            attributeName: 'bonus_regen_pct',\n            label: 'HEALTH GAINED PER SECOND:',\n            ignoreTooltip: true,\n            controlType: 'text',\n            fn: function (v, a, parent, index, abilityModel, ability) {\n                return parent.health()*a/100;\n            },\n            returnProperty: 'healthregen'\n        },\n        {\n            attributeName: 'bonus_movement_speed',\n            label: '%MOVE SPEED:',\n            ignoreTooltip: true,\n            controlType: 'text',\n            fn: function (v, a, parent, index, abilityModel, ability) {\n                return a;\n            },\n            returnProperty: 'movementSpeedPct'\n        }\n    ],\n    'sniper_shrapnel': [\n        {\n            label: 'Duration',\n            controlType: 'input'\n        },\n        {\n            label: 'DAMAGE:',\n            ignoreTooltip: true,\n            controlType: 'text',\n            fn: function (v, a, parent, index, abilityModel, ability) {\n                return abilityModel.getAbilityPropertyValue(ability, 'damage')*v;\n            }\n        },\n        {\n            attributeName: 'building_damage',\n            label: 'BUILDING DAMAGE:',\n            ignoreTooltip: true,\n            controlType: 'text',\n            fn: function (v, a, parent, index, abilityModel, ability) {\n                return v*a;\n            }\n        },\n        {\n            attributeName: 'slow_movement_speed',\n            label: 'Enemy Movement Speed Slow',\n            controlType: 'text',\n            fn: function (v, a, parent, index, abilityModel, ability) {\n                return a;\n            },\n            returnProperty: 'movementSpeedPctReduction'\n        }\n    ],\n    'spectre_desolate': [\n        {\n            label: 'Enemy Alone',\n            controlType: 'checkbox'\n        },\n        {\n            attributeName: 'bonus_damage',\n            label: 'Total Damage',\n            controlType: 'text',\n            fn: function (v, a, parent, index, abilityModel, ability) {\n                if (v) {\n                    return a;\n                }\n                else {\n                    return 0;\n                }\n            },\n            returnProperty: 'bonusDamage'\n        }\n    ],\n    'spectre_dispersion': [\n        {\n            label: 'Damage Taken',\n            controlType: 'input'\n        },\n        {\n            attributeName: 'damage_reflection_pct',\n            label: 'DAMAGE REFLECTED:',\n            controlType: 'text',\n            fn: function (v, a, parent, index, abilityModel, ability) {\n                return -a;\n            },\n            returnProperty: 'damageReduction'\n        },\n        {\n            attributeName: 'damage_reflection_pct',\n            label: 'DAMAGE REFLECTED:',\n            ignoreTooltip: true,\n            controlType: 'text',\n            fn: function (v, a, parent, index, abilityModel, ability) {\n                return v*a/100;\n            }\n        }\n    ],\n    'storm_spirit_ball_lightning': [\n        {\n            label: 'MAX MANA',\n            controlType: 'input'\n        },\n        {\n            label: 'Distance',\n            controlType: 'input'\n        },\n        {\n            attributeName: 'ball_lightning_initial_mana_base',\n            label: 'Total Damage:',\n            ignoreTooltip: true,\n            controlType: 'text',\n            controls: [0, 1],\n            fn: function (v, a, parent, index, abilityModel, ability) {\n                return abilityModel.getAbilityPropertyValue(ability, 'damage')/100*v[1];\n            }\n        },\n        {\n            attributeName: 'ball_lightning_initial_mana_base',\n            label: 'FLAT MANA COST:',\n            ignoreTooltip: true,\n            controlType: 'method',\n            controls: [0, 1],\n            fn: function (v, a, parent, index, abilityModel, ability) {\n                var distance_intervals = Math.floor(v[1]/100);\n                var travel_cost_base = abilityModel.getAbilityAttributeValue(ability.attributes, 'ball_lightning_travel_cost_base',0);\n                return a + distance_intervals * travel_cost_base;\n            }\n        },\n        {\n            attributeName: 'ball_lightning_initial_mana_percentage',\n            label: '%MAX MANA COST:',\n            ignoreTooltip: true,\n            controlType: 'method',\n            controls: [0, 1],\n            fn: function (v, a, parent, index, abilityModel, ability) {\n                var distance_intervals = Math.floor(v[1]/100);\n                var travel_cost_percent = abilityModel.getAbilityAttributeValue(ability.attributes, 'ball_lightning_travel_cost_percent',0);\n                return a + distance_intervals * travel_cost_percent;\n            }\n        },\n        {\n            attributeName: 'ball_lightning_initial_mana_base',\n            label: 'TOTAL MANA COST:',\n            ignoreTooltip: true,\n            controlType: 'text',\n            controls: [0, 1, 2, 3],\n            fn: function (v, a, parent, index, abilityModel, ability) {\n                return v[2] + ' + ' + (v[3]/100 * v[0]) + ' (' + v[3] + '% of max) = ' + (v[2] + v[3]/100 * v[0]);\n            }\n        }\n    ],\n    'templar_assassin_psionic_trap': [\n        {\n            label: 'Charge Time',\n            controlType: 'input'\n        },\n        {\n            attributeName: 'movement_speed_min_tooltip',\n            label: '%MOVE SLOW:',\n            ignoreTooltip: true,\n            controlType: 'text',\n            fn: function (v, a, parent, index, abilityModel, ability) {\n                var max_slow = abilityModel.getAbilityAttributeValue(ability.attributes, 'movement_speed_max_tooltip',0);\n                var slow_per_tick = (max_slow - a)/40;\n                return -(a + slow_per_tick * Math.min(Math.max(0, v), 4) * 10);\n            },\n            returnProperty: 'movementSpeedPctReduction'\n        }\n    ],\n    'shredder_reactive_armor': [\n        {\n            label: 'Stacks',\n            controlType: 'input'\n        },\n        {\n            attributeName: 'bonus_armor',\n            label: 'Total Armor Bonus',\n            controlType: 'text',\n            noLevel: true,\n            fn: function (v, a, parent, index, abilityModel, ability) {\n                return v*a;\n            },\n            returnProperty: 'armor'\n        },\n        {\n            attributeName: 'bonus_hp_regen',\n            label: 'Total HP Regen Bonus',\n            controlType: 'text',\n            noLevel: true,\n            fn: function (v, a, parent, index, abilityModel, ability) {\n                return v*a;\n            },\n            returnProperty: 'healthregen'\n        }\n    ],\n    'shredder_chakram': [\n        {\n            label: 'Duration',\n            controlType: 'input'\n        },\n        {\n            attributeName: 'damage_per_second',\n            label: 'DAMAGE:',\n            ignoreTooltip: true,\n            controlType: 'text',\n            fn: function (v, a, parent, index, abilityModel, ability) {\n                var interval = abilityModel.getAbilityAttributeValue(ability.attributes, 'damage_interval',0);\n                var ticks = Math.floor(v / interval);\n                return a*interval*ticks;\n            }\n        },\n        {\n            attributeName: 'mana_per_second',\n            label: 'MANA COST:',\n            ignoreTooltip: true,\n            controlType: 'text',\n            fn: function (v, a, parent, index, abilityModel, ability) {\n                var interval = abilityModel.getAbilityAttributeValue(ability.attributes, 'damage_interval',0);\n                var ticks = Math.floor(v / interval);\n                return a*interval*ticks;\n            }\n        },\n        {\n            label: 'ENEMY %HP',\n            controlType: 'input'\n        },\n        {\n            attributeName: 'slow',\n            label: 'MANA COST:',\n            controlType: 'text',\n            fn: function (v, a, parent, index, abilityModel, ability) {\n                var ticks = 20 - Math.floor(Math.min(Math.max(v-1, 0), 99) / 5);\n                return -a*ticks;\n            },\n            returnProperty: 'movementSpeedPctReduction'\n        }\n    ],\n    'spirit_breaker_greater_bash': [\n        {\n            label: 'Bash Proc',\n            controlType: 'checkbox'\n        },\n        {\n            attributeName: 'damage',\n            label: '%MOVESPEED AS DAMAGE',\n            controlType: 'text',\n            fn: function (v, a, parent, index, abilityModel, ability) {\n                if (v) {\n                    return a;\n                }\n                else {\n                    return 0;\n                }\n            },\n            returnProperty: 'bashBonusDamage'\n        },\n        {\n            attributeName: 'bonus_movespeed_pct',\n            label: 'Total Damage',\n            controlType: 'text',\n            fn: function (v, a, parent, index, abilityModel, ability) {\n                if (v) {\n                    return a;\n                }\n                else {\n                    return 0;\n                }\n            },\n            returnProperty: 'movementSpeedPct'\n        },\n        {\n            attributeName: 'chance_pct',\n            label: 'Total Damage',\n            controlType: 'text',\n            fn: function (v, a, parent, index, abilityModel, ability) {\n                return a\n            },\n            returnProperty: 'bash'\n        }\n    ],\n    'techies_land_mines': [\n        {\n            label: 'Number of Mines',\n            controlType: 'input'\n        },\n        {\n            attributeName: 'damage',\n            label: 'Total Damage',\n            controlType: 'text',\n            fn: function (v, a, parent, index, abilityModel, ability) {\n                return v*a;\n            }\n        },\n        {\n            attributeName: 'damage',\n            label: 'AFTER REDUCTIONS:',\n            ignoreTooltip: true,\n            controlType: 'text',\n            fn: function (v, a, parent, index, abilityModel, ability) {\n                var phys_reduction = parent.enemy().totalArmorPhysicalReduction(),\n                    magic_reduction = parent.enemy().totalMagicResistance();\n                return (v * a * (1 - phys_reduction / 100) * (1 - magic_reduction / 100)).toFixed(2);\n            }\n        }\n    ],\n    'techies_suicide': [\n        {\n            attributeName: 'damage',\n            label: 'FULL DAMAGE AFTER REDUCTIONS:',\n            ignoreTooltip: true,\n            controlType: 'text',\n            fn: function (v, a, parent, index, abilityModel, ability) {\n                var phys_reduction = parent.enemy().totalArmorPhysicalReduction(),\n                    magic_reduction = parent.enemy().totalMagicResistance();\n                return (a * (1 - phys_reduction / 100) * (1 - magic_reduction / 100)).toFixed(2);\n            }\n        },\n        {\n            attributeName: 'partial_damage',\n            label: 'PARTIAL DAMAGE AFTER REDUCTIONS:',\n            ignoreTooltip: true,\n            controlType: 'text',\n            fn: function (v, a, parent, index, abilityModel, ability) {\n                var phys_reduction = parent.enemy().totalArmorPhysicalReduction(),\n                    magic_reduction = parent.enemy().totalMagicResistance();\n                return (a * (1 - phys_reduction / 100) * (1 - magic_reduction / 100)).toFixed(2);\n            }\n        },\n        {\n            attributeName: 'damage',\n            label: 'RESPAWN TIME:',\n            ignoreTooltip: true,\n            controlType: 'text',\n            fn: function (v, a, parent, index, abilityModel, ability) {\n                return (parent.respawnTime() / 2).toFixed(0) + ' seconds';\n            }\n        }\n    ],\n    'techies_remote_mines': [\n        {\n            label: 'Number of Mines',\n            controlType: 'input'\n        },\n        {\n            attributeName: 'damage',\n            label: 'Total Damage',\n            controlType: 'text',\n            fn: function (v, a, parent, index, abilityModel, ability) {\n                return v*a;\n            }\n        },\n        {\n            attributeName: 'damage',\n            label: 'AFTER REDUCTIONS:',\n            ignoreTooltip: true,\n            controlType: 'text',\n            fn: function (v, a, parent, index, abilityModel, ability) {\n                var magic_reduction = parent.enemy().totalMagicResistance();\n                return (v * a * (1 - magic_reduction / 100)).toFixed(2);\n            }\n        }\n    ],\n    'tinker_march_of_the_machines': [\n        {\n            label: 'Robot Explosions',\n            controlType: 'input'\n        },\n        {\n            attributeName: 'machines_per_sec',\n            label: 'TOTAL DAMAGE:',\n            ignoreTooltip: true,\n            controlType: 'text',\n            fn: function (v, a, parent, index, abilityModel, ability) {\n                return abilityModel.getAbilityPropertyValue(ability, 'damage')*v;\n            }\n        }\n    ],\n    'treant_leech_seed': [\n        {\n            label: 'Pulses',\n            controlType: 'input'\n        },\n        {\n            attributeName: 'leech_damage',\n            label: 'DAMAGE/HEAL:',\n            ignoreTooltip: true,\n            controlType: 'text',\n            fn: function (v, a, parent, index, abilityModel, ability) {\n                return v*a;\n            }\n        },\n        {\n            attributeName: 'movement_slow',\n            label: 'Total Damage',\n            controlType: 'text',\n            fn: function (v, a, parent, index, abilityModel, ability) {\n                return a;\n            },\n            returnProperty: 'movementSpeedPctReduction'\n        }\n    ],\n    'troll_warlord_fervor': [\n        {\n            label: 'Stacks',\n            controlType: 'input'\n        },\n        {\n            attributeName: 'attack_speed',\n            label: 'ATTACK SPEED:',\n            ignoreTooltip: true,\n            controlType: 'text',\n            fn: function (v, a, parent, index, abilityModel, ability) {\n                return v*a;\n            },\n            returnProperty: 'attackspeed'\n        }\n    ],\n    'undying_decay': [\n        {\n            label: 'Stacks',\n            controlType: 'input'\n        },\n        {\n            attributeName: 'str_steal',\n            label: 'STRENGTH STOLEN:',\n            ignoreTooltip: true,\n            controlType: 'text',\n            fn: function (v, a, parent, index, abilityModel, ability) {\n                if (parent.inventory.hasScepter()) {\n                    var str_steal_scepter = abilityModel.getAbilityAttributeValue(ability.attributes, 'str_steal_scepter',0);\n                    return v*str_steal_scepter;\n                }\n                else {\n                    return v*a;\n                }\n            },\n            returnProperty: 'bonusStrength'\n        },\n    ],\n    'undying_soul_rip': [\n        {\n            label: 'Units',\n            controlType: 'input'\n        },\n        {\n            attributeName: 'damage_per_unit',\n            label: 'DAMAGE/HEAL:',\n            ignoreTooltip: true,\n            controlType: 'text',\n            fn: function (v, a, parent, index, abilityModel, ability) {\n                return v*a;\n            }\n        }\n    ],\n    'undying_flesh_golem': [\n        {\n            label: 'Distance',\n            controlType: 'input'\n        },\n        {\n            attributeName: 'max_speed_slow',\n            label: '%MOVE SLOW:',\n            ignoreTooltip: true,\n            controlType: 'text',\n            fn: function (v, a, parent, index, abilityModel, ability) {\n                var min_speed_slow = abilityModel.getAbilityAttributeValue(ability.attributes, 'min_speed_slow', 0);\n                var radius = abilityModel.getAbilityAttributeValue(ability.attributes, 'radius', 0);\n                var full_power_radius = abilityModel.getAbilityAttributeValue(ability.attributes, 'full_power_radius', 0);\n                var distance = Math.min(Math.max(v, full_power_radius), radius);\n                var scale = 1 - (distance - full_power_radius) / (radius - full_power_radius);\n                return -Math.max(scale * a, min_speed_slow);\n            },\n            returnProperty: 'movementSpeedPctReduction'\n        },\n        {\n            attributeName: 'max_damage_amp',\n            label: '%DAMAGE AMP:',\n            ignoreTooltip: true,\n            controlType: 'text',\n            fn: function (v, a, parent, index, abilityModel, ability) {\n                var min_damage_amp = abilityModel.getAbilityAttributeValue(ability.attributes, 'min_damage_amp', 0);\n                var radius = abilityModel.getAbilityAttributeValue(ability.attributes, 'radius', 0);\n                var full_power_radius = abilityModel.getAbilityAttributeValue(ability.attributes, 'full_power_radius', 0);\n                var distance = Math.min(Math.max(v, full_power_radius), radius);\n                var scale = 1 - (distance - full_power_radius) / (radius - full_power_radius);\n                return Math.max(scale * a, min_damage_amp);\n            },\n            returnProperty: 'damageAmplification'\n        },\n        {\n            label: 'MAX HP',\n            controlType: 'input'\n        },\n        {\n            label: 'Hero Death Count',\n            controlType: 'input'\n        },\n        {\n            label: 'Creep Death Count',\n            controlType: 'input'\n        },\n        {\n            attributeName: 'death_heal',\n            label: 'DEATH HEAL (HEROES):',\n            ignoreTooltip: true,\n            controlType: 'method',\n            controls: [1, 2],\n            fn: function (v, a, parent, index, abilityModel, ability) {\n                return v[0]*v[1]*a/100;\n            }\n        },\n        {\n            attributeName: 'death_heal_creep',\n            label: 'DEATH HEAL (CREEPS):',\n            ignoreTooltip: true,\n            controlType: 'method',\n            controls: [1, 3],\n            fn: function (v, a, parent, index, abilityModel, ability) {\n                return v[0]*v[1]*a/100;\n            }\n        },\n        {\n            attributeName: 'death_heal_creep',\n            label: 'TOTAL DEATH HEAL:',\n            ignoreTooltip: true,\n            controlType: 'text',\n            controls: [4, 5],\n            fn: function (v, a, parent, index, abilityModel, ability) {\n                return v[0]+v[1];\n            }\n        }\n    ],\n    'ursa_fury_swipes': [\n        {\n            label: 'Stacks',\n            controlType: 'input'\n        },\n        {\n            attributeName: 'damage_per_stack',\n            label: 'Total Damage',\n            controlType: 'text',\n            fn: function (v, a, parent, index, abilityModel, ability) {\n                var enrageAbility = abilityModel.abilities().find(function(b) {\n                    return b.name == 'ursa_enrage';\n                });\n                if (enrageAbility.isActive() && enrageAbility.level() > 0) {\n                    var enrage_multiplier = abilityModel.getAbilityAttributeValue(enrageAbility.attributes, 'enrage_multiplier', enrageAbility.level());\n                    return v*a*enrage_multiplier;\n                }\n                return v*a;\n            },\n            returnProperty: 'bonusDamage'\n        }\n    ],\n    'ursa_enrage': [\n        {\n            attributeName: 'damage_reduction',\n            label: 'Total Damage',\n            controlType: 'text',\n            fn: function (v, a, parent, index, abilityModel, ability) {\n                return -a;\n            },\n            returnProperty: 'damageReduction'\n        }\n    ],\n    'venomancer_venomous_gale': [\n        {\n            label: 'Duration',\n            controlType: 'input'\n        },\n        {\n            attributeName: 'tick_damage',\n            label: 'Total Damage',\n            controlType: 'text',\n            fn: function (v, a, parent, index, abilityModel, ability) {\n                return abilityModel.getAbilityAttributeValue(ability.attributes, 'strike_damage',ability.level()) + Math.floor(v/3)*a;\n            }\n        },\n        {\n            attributeName: 'movement_slow',\n            label: 'Total Damage',\n            controlType: 'text',\n            fn: function (v, a, parent, index, abilityModel, ability) {\n                return a;\n            },\n            returnProperty: 'movementSpeedPctReduction'\n        }\n    ],\n    'venomancer_poison_sting': [\n        {\n            label: 'Duration',\n            controlType: 'input'\n        },\n        {\n            attributeName: 'damage',\n            label: 'Total Damage',\n            controlType: 'text',\n            fn: function (v, a, parent, index, abilityModel, ability) {\n                return v*a;\n            }\n        },\n        {\n            attributeName: 'movement_speed',\n            label: 'Total Damage',\n            controlType: 'text',\n            fn: function (v, a, parent, index, abilityModel, ability) {\n                return a;\n            },\n            returnProperty: 'movementSpeedPctReduction'\n        }\n    ],\n    'venomancer_poison_nova': [\n        {\n            label: 'Duration',\n            controlType: 'input'\n        },\n        {\n            attributeName: 'damage',\n            label: 'Total Damage',\n            controlType: 'text',\n            fn: function (v, a, parent, index, abilityModel, ability) {\n                return v*a;\n            }\n        }\n    ],\n    'viper_poison_attack': [\n        {\n            label: 'Duration',\n            controlType: 'input'\n        },\n        {\n            attributeName: 'damage',\n            label: 'Total Damage',\n            controlType: 'text',\n            fn: function (v, a, parent, index, abilityModel, ability) {\n                return v*a;\n            }\n        },\n        {\n            attributeName: 'bonus_movement_speed',\n            label: 'Total Damage',\n            controlType: 'text',\n            fn: function (v, a, parent, index, abilityModel, ability) {\n                return a;\n            },\n            returnProperty: 'movementSpeedPctReduction'\n        },\n        {\n            attributeName: 'bonus_attack_speed',\n            label: 'Total Damage',\n            controlType: 'text',\n            fn: function (v, a, parent, index, abilityModel, ability) {\n                return a;\n            },\n            returnProperty: 'attackspeedreduction'\n        }\n    ],\n    'viper_corrosive_skin': [\n        {\n            label: 'Duration',\n            controlType: 'input'\n        },\n        {\n            attributeName: 'damage',\n            label: 'Total Damage',\n            controlType: 'text',\n            fn: function (v, a, parent, index, abilityModel, ability) {\n                return v*a;\n            }\n        },\n        {\n            attributeName: 'bonus_movement_speed',\n            label: 'Total Damage',\n            controlType: 'text',\n            fn: function (v, a, parent, index, abilityModel, ability) {\n                return a;\n            },\n            returnProperty: 'movementSpeedPctReduction'\n        },\n        {\n            attributeName: 'bonus_attack_speed',\n            label: 'Total Damage',\n            controlType: 'text',\n            fn: function (v, a, parent, index, abilityModel, ability) {\n                return a;\n            },\n            returnProperty: 'attackspeedreduction'\n        },\n        {\n            attributeName: 'bonus_magic_resistance',\n            label: 'Total Damage',\n            controlType: 'text',\n            fn: function (v, a, parent, index, abilityModel, ability) {\n                return a;\n            },\n            returnProperty: 'magicResist'\n        }\n    ],\n    'viper_viper_strike': [\n        {\n            label: 'Duration',\n            controlType: 'input'\n        },\n        {\n            attributeName: 'damage',\n            label: 'Total Damage',\n            controlType: 'text',\n            fn: function (v, a, parent, index, abilityModel, ability) {\n                return v*a;\n            }\n        },\n        {\n            attributeName: 'bonus_movement_speed',\n            label: 'Total Damage',\n            controlType: 'text',\n            fn: function (v, a, parent, index, abilityModel, ability) {\n                return a;\n            },\n            returnProperty: 'movementSpeedPctReduction'\n        },\n        {\n            attributeName: 'bonus_attack_speed',\n            label: 'Total Damage',\n            controlType: 'text',\n            fn: function (v, a, parent, index, abilityModel, ability) {\n                return a;\n            },\n            returnProperty: 'attackspeedreduction'\n        }\n    ],\n    'visage_soul_assumption': [\n        {\n            label: 'Charges',\n            controlType: 'input'\n        },\n        {\n            attributeName: 'soul_charge_damage',\n            label: 'Total Damage:',\n            ignoreTooltip: true,\n            controlType: 'text',\n            fn: function (v, a, parent, index, abilityModel, ability) {\n                var soul_base_damage = abilityModel.getAbilityAttributeValue(ability.attributes, 'soul_base_damage',0);\n                var stack_limit = abilityModel.getAbilityAttributeValue(ability.attributes, 'stack_limit', ability.level());\n                stack_limit = Math.max(Math.min(v, stack_limit), 0);\n                return soul_base_damage + stack_limit*a;\n            }\n        }\n    ],\n    'visage_gravekeepers_cloak': [\n        {\n            label: 'Layers',\n            controlType: 'input'\n        },\n        {\n            attributeName: 'bonus_armor',\n            label: 'ARMOR:',\n            ignoreTooltip: true,\n            controlType: 'text',\n            fn: function (v, a, parent, index, abilityModel, ability) {\n                return v*a;\n            },\n            returnProperty: 'armor'\n        },\n        {\n            attributeName: 'bonus_resist',\n            label: '%RESIST:',\n            ignoreTooltip: true,\n            controlType: 'text',\n            fn: function (v, a, parent, index, abilityModel, ability) {\n                return v*a;\n            },\n            returnProperty: 'magicResist'\n        }\n    ],\n    'warlock_shadow_word': [\n        {\n            label: 'Duration',\n            controlType: 'input'\n        },\n        {\n            label: 'DAMAGE:',\n            ignoreTooltip: true,\n            controlType: 'text',\n            fn: function (v, a, parent, index, abilityModel, ability) {\n                return abilityModel.getAbilityPropertyValue(ability, 'damage')*v;\n            }\n        }\n    ],\n    'warlock_upheaval': [\n        {\n            label: 'Channel Duration',\n            controlType: 'input'\n        },\n        {\n            attributeName: 'slow_rate_duration',\n            label: '%MOVE SLOW:',\n            ignoreTooltip: true,\n            controlType: 'text',\n            fn: function (v, a, parent, index, abilityModel, ability) {\n                var max_slow = abilityModel.getAbilityAttributeValue(ability.attributes, 'max_slow',0);\n                var slow_per_tick = max_slow / (a - 0.5) / 2;\n                var ticks = Math.max(Math.floor(v * 2) - 1, 0);\n                return -Math.min(ticks * slow_per_tick, max_slow);\n            },\n            returnProperty: 'movementSpeedPctReduction'\n        }\n    ],\n    'weaver_the_swarm': [\n        {\n            label: 'Attacks',\n            controlType: 'input'\n        },\n        {\n            attributeName: 'damage',\n            label: 'DAMAGE:',\n            controlType: 'text',\n            fn: function (v, a, parent, index, abilityModel, ability) {\n                return v*a;\n            }\n        },\n        {\n            attributeName: 'armor_reduction',\n            label: 'DAMAGE:',\n            controlType: 'text',\n            fn: function (v, a, parent, index, abilityModel, ability) {\n                return -v*a;\n            },\n            returnProperty: 'armorReduction'\n        }\n    ],\n    'windrunner_powershot': [\n        {\n            label: 'Duration',\n            controlType: 'input'\n        },\n        {\n            label: 'DAMAGE:',\n            ignoreTooltip: true,\n            controlType: 'text',\n            fn: function (v, a, parent, index, abilityModel, ability) {\n                return abilityModel.getAbilityPropertyValue(ability, 'damage')*v;\n            }\n        }\n    ],\n    'winter_wyvern_cold_embrace': [\n        {\n            label: 'Duration',\n            controlType: 'input'\n        },\n        {\n            label: 'Ally Max Health',\n            controlType: 'input'\n        },\n        {\n            attributeName: 'heal_percentage',\n            label: 'TOTAL HEAL:',\n            ignoreTooltip: true,\n            controlType: 'text',\n            controls: [0,1],\n            fn: function (v, a, parent, index, abilityModel, ability) {\n                var base_heal = abilityModel.getAbilityAttributeValue(ability.attributes, 'heal_additive',ability.level());\n                return (base_heal + v[1] * a/100) * v[0];\n            }\n        }\n    ],\n    'wisp_spirits': [\n        {\n            label: 'Collision Count',\n            controlType: 'input'\n        },\n        {\n            attributeName: 'hero_damage',\n            label: 'Total Damage',\n            controlType: 'text',\n            fn: function (v, a, parent, index, abilityModel, ability) {\n                return v*a;\n            }\n        },\n        {\n            attributeName: 'creep_damage',\n            label: 'Total Damage',\n            controlType: 'text',\n            fn: function (v, a, parent, index, abilityModel, ability) {\n                return v*a;\n            }\n        }\n    ],\n    'wisp_overcharge': [\n        {\n            label: 'Current HP',\n            controlType: 'input'\n        },\n        {\n            attributeName: 'drain_pct',\n            label: 'HP DRAINED:',\n            ignoreTooltip: true, \n            controlType: 'text',\n            fn: function (v, a, parent, index, abilityModel, ability) {\n                return v*a;\n            }\n        },\n        {\n            label: 'Current MP',\n            controlType: 'input'\n        },\n        {\n            attributeName: 'drain_pct',\n            label: 'MP DRAINED:',\n            ignoreTooltip: true, \n            controlType: 'text',\n            fn: function (v, a, parent, index, abilityModel, ability) {\n                return v*a;\n            }\n        },\n        {\n            attributeName: 'bonus_attack_speed',\n            label: 'Total Damage',\n            controlType: 'text',\n            fn: function (v, a, parent, index, abilityModel, ability) {\n                return a;\n            },\n            returnProperty: 'attackspeed'\n        },\n        {\n            attributeName: 'bonus_damage_pct',\n            label: 'Total Damage',\n            controlType: 'text',\n            fn: function (v, a, parent, index, abilityModel, ability) {\n                return a;\n            },\n            returnProperty: 'damageReduction'\n        }\n    ],\n    'witch_doctor_paralyzing_cask': [\n        {\n            label: 'Hero Bounce Count',\n            controlType: 'input'\n        },\n        {\n            attributeName: 'hero_damage',\n            label: 'Total Damage',\n            controlType: 'text',\n            fn: function (v, a, parent, index, abilityModel, ability) {\n                var bounces = abilityModel.getAbilityAttributeValue(ability.attributes, 'bounces',ability.level());\n                return Math.min(Math.max(v, 0), bounces)*a;\n            }\n        },\n        {\n            label: 'Creep Bounce Count',\n            controlType: 'input'\n        },\n        {\n            attributeName: 'hero_damage',\n            label: 'CREEP DAMAGE:',\n            ignoreTooltip: true,\n            controlType: 'text',\n            fn: function (v, a, parent, index, abilityModel, ability) {\n                var bounces = abilityModel.getAbilityAttributeValue(ability.attributes, 'bounces',ability.level());\n                var damage = abilityModel.getAbilityPropertyValue(ability, 'damage');\n                return Math.min(Math.max(v, 0), bounces)*damage;\n            }\n        }\n    ],\n    'witch_doctor_voodoo_restoration': [\n        {\n            label: 'Duration',\n            controlType: 'input'\n        },\n        {\n            attributeName: 'heal',\n            label: 'Total Damage',\n            controlType: 'text',\n            fn: function (v, a, parent, index, abilityModel, ability) {\n                var interval = abilityModel.getAbilityAttributeValue(ability.attributes, 'heal_interval',ability.level());\n                var heal_per_tick = a * interval;\n                var ticks = Math.max(Math.floor(v / interval) - 1, 0);\n                return heal_per_tick * ticks;\n            }\n        },\n        {\n            attributeName: 'mana_per_second',\n            label: 'MANA COST:',\n            ignoreTooltip: true,\n            controlType: 'text',\n            fn: function (v, a, parent, index, abilityModel, ability) {\n                var interval = abilityModel.getAbilityAttributeValue(ability.attributes, 'heal_interval',ability.level());\n                var mana_per_tick = a * interval;\n                var ticks = Math.max(Math.floor(v / interval) - 1, 0);\n                return mana_per_tick * ticks;\n            }\n        }\n    ],\n    'witch_doctor_maledict': [\n        {\n            label: 'damage 0-4s',\n            controlType: 'input'\n        },\n        {\n            label: 'damage 4-8s',\n            controlType: 'input'\n        },\n        {\n            label: 'damage 8-12s',\n            controlType: 'input'\n        },\n        {\n            attributeName: 'bonus_damage',\n            label: 'Dot Damage after 3s:',\n            ignoreTooltip: true,\n            controlType: 'method',\n            fn: function (v, a, parent, index, abilityModel, ability) {\n                var damage = abilityModel.getAbilityPropertyValue(ability, 'damage');\n                return 3*damage;\n            }\n        },\n        {\n            attributeName: 'bonus_damage',\n            label: 'Burst Damage at 4s:',\n            ignoreTooltip: true,\n            controlType: 'method',\n            controls: [0, 3],\n            fn: function (v, a, parent, index, abilityModel, ability) {\n                var damage = abilityModel.getAbilityPropertyValue(ability, 'damage');\n                var d = v.reduce(function (memo, o) { return memo + o }, 0);\n                return Math.max(d, 0) * a/100;\n            }\n        },\n        {\n            attributeName: 'bonus_damage',\n            label: 'Dot Damage after 7s:',\n            ignoreTooltip: true,\n            controlType: 'method',\n            fn: function (v, a, parent, index, abilityModel, ability) {\n                var damage = abilityModel.getAbilityPropertyValue(ability, 'damage');\n                return 7*damage;\n            }\n        },\n        {\n            attributeName: 'bonus_damage',\n            label: 'Burst Damage at 8s:',\n            ignoreTooltip: true,\n            controlType: 'method',\n            controls: [0, 1, 4, 5],\n            fn: function (v, a, parent, index, abilityModel, ability) {\n                var damage = abilityModel.getAbilityPropertyValue(ability, 'damage');\n                var d = v.reduce(function (memo, o) { return memo + o }, 0);\n                return Math.max(d, 0) * a/100;\n            }\n        },\n        {\n            attributeName: 'bonus_damage',\n            label: 'Dot Damage after 11s:',\n            ignoreTooltip: true,\n            controlType: 'method',\n            fn: function (v, a, parent, index, abilityModel, ability) {\n                var damage = abilityModel.getAbilityPropertyValue(ability, 'damage');\n                return 11*damage;\n            }\n        },\n        {\n            attributeName: 'bonus_damage',\n            label: 'Burst Damage at 12s:',\n            ignoreTooltip: true,\n            controlType: 'method',\n            controls: [0, 1, 2, 4, 6, 7],\n            fn: function (v, a, parent, index, abilityModel, ability) {\n                var damage = abilityModel.getAbilityPropertyValue(ability, 'damage');\n                var d = v.reduce(function (memo, o) { return memo + o }, 0);\n                return Math.max(d, 0) * a/100;\n            }\n        },\n        {\n            attributeName: 'bonus_damage',\n            label: 'Total Burst Damage:',\n            ignoreTooltip: true,\n            controlType: 'method',\n            controls: [4, 6, 8],\n            fn: function (v, a, parent, index, abilityModel, ability) {\n                return v.reduce(function (memo, o) { return memo + o }, 0);\n            }\n        },\n        {\n            attributeName: 'bonus_damage',\n            label: 'Total Maledict Damage:',\n            ignoreTooltip: true,\n            controlType: 'method',\n            controls: [9],\n            fn: function (v, a, parent, index, abilityModel, ability) {\n                var duration = abilityModel.getAbilityAttributeValue(ability.attributes, 'duration_tooltip',0);\n                var damage = abilityModel.getAbilityPropertyValue(ability, 'damage');\n                return damage * duration + v[0];\n            }\n        },\n        {\n            label: 'Duration',\n            controlType: 'input'\n        },\n        {\n            attributeName: 'bonus_damage',\n            label: 'DOT Damage',\n            controlType: 'text',\n            fn: function (v, a, parent, index, abilityModel, ability) {\n                var duration = abilityModel.getAbilityAttributeValue(ability.attributes, 'duration_tooltip',0);\n                return abilityModel.getAbilityPropertyValue(ability, 'damage')*Math.min(Math.max(v, 0), duration);\n            }\n        }\n    ],\n    'witch_doctor_death_ward': [\n        {\n            label: 'Duration',\n            controlType: 'input'\n        },\n        {\n            attributeName: 'damage',\n            label: 'Total Damage',\n            controlType: 'text',\n            fn: function (v, a, parent, index, abilityModel, ability) {\n                return v*a;\n            }\n        }\n    ],\n    'zuus_static_field': [\n        {\n            label: 'Enemy HP',\n            controlType: 'input'\n        },\n        {\n            attributeName: 'damage_health_pct',\n            label: 'DAMAGE:',\n            ignoreTooltip: true,\n            controlType: 'text',\n            fn: function (v, a, parent, index, abilityModel, ability) {\n                return v*a/100;\n            }\n        }\n    ]\n}","'use strict';\nvar ko = require('./herocalc_knockout');\n    \nvar my = require(\"./herocalc_core\");\n\nmy.prototype.BuffOption = function (hero, ability) {\n    this.buffName = ability;\n    if (my.prototype.heroData['npc_dota_hero_' + hero] == undefined) {\n        this.hero = hero;\n        this.abilityData = my.prototype.findWhere(my.prototype.unitData[hero].abilities, {name: ability})\n        this.buffDisplayName = my.prototype.unitData[hero].displayname + ' - ' + this.abilityData.displayname;\n    }\n    else {\n        this.hero = 'npc_dota_hero_' + hero;\n        this.abilityData = my.prototype.findWhere(my.prototype.heroData['npc_dota_hero_' + hero].abilities, {name: ability})\n        this.buffDisplayName = my.prototype.heroData['npc_dota_hero_' + hero].displayname + ' - ' + this.abilityData.displayname;        \n        if (ability == 'sven_gods_strength') {\n            this.buffDisplayName += ' (Aura for allies)';\n        }\n    }\n\n};\n\nmy.prototype.ItemBuffOption = function (item) {\n    this.buffName = item;\n    if (my.prototype.heroData['npc_dota_hero_' + hero] == undefined) {\n        this.hero = hero;\n        this.abilityData = my.prototype.findWhere(my.prototype.unitData[hero].abilities, {name: item})\n        this.buffDisplayName = my.prototype.unitData[hero].displayname + ' - ' + this.abilityData.displayname;        \n    }\n    else {\n        this.hero = 'npc_dota_hero_' + hero;\n        this.abilityData = my.prototype.findWhere(my.prototype.heroData['npc_dota_hero_' + hero].abilities, {name: item})\n        this.buffDisplayName = my.prototype.heroData['npc_dota_hero_' + hero].displayname + ' - ' + this.abilityData.displayname;        \n    }\n\n};\n\nmy.prototype.BuffViewModel = function (a) {\n    var self = new my.prototype.AbilityModel(ko.observableArray([]));\n    self.availableBuffs = ko.observableArray(my.prototype.availableBuffs);\n    self.availableDebuffs = ko.observableArray(my.prototype.availableDebuffs);\n    self.selectedBuff = ko.observable(self.availableBuffs()[0]);\n    \n    self.buffs = ko.observableArray([]);\n    self.itemBuffs = new my.prototype.InventoryViewModel();\n    \n    self.addBuff = function (data, event) {\n        if (my.prototype.findWhere(self.buffs(), { name: self.selectedBuff().buffName })  == undefined) {\n            var a = JSON.parse(JSON.stringify(self.selectedBuff().abilityData));\n            a.level = ko.observable(0);\n            a.isActive = ko.observable(false);\n            a.isDetail = ko.observable(false);\n            a.baseDamage = ko.observable(0);\n            a.bash = ko.observable(0);\n            a.bashBonusDamage = ko.observable(0);\n            a.bonusDamage = ko.observable(0);\n            a.bonusDamageOrb = ko.observable(0);\n            a.bonusDamagePct = ko.observable(0);\n            a.bonusDamagePrecisionAura = ko.observable(0);\n            a.bonusDamageReduction = ko.observable(0);\n            a.bonusHealth = ko.observable(0);\n            a.bonusStrength = ko.observable(0);\n            a.bonusStrength2 = ko.observable(0);\n            a.bonusAgility = ko.observable(0);\n            a.bonusAgility2 = ko.observable(0);\n            a.bonusInt = ko.observable(0);\n            a.bonusAllStatsReduction = ko.observable(0);\n            a.damageAmplification = ko.observable(0);\n            a.damageReduction = ko.observable(0);\n            a.evasion = ko.observable(0);\n            a.magicResist = ko.observable(0);\n            a.manaregen = ko.observable(0);\n            a.manaregenreduction = ko.observable(0);\n            a.missChance = ko.observable(0);\n            a.movementSpeedFlat = ko.observable(0);\n            a.movementSpeedPct = ko.observable(0);\n            a.movementSpeedPctReduction = ko.observable(0);\n            a.turnRateReduction = ko.observable(0);\n            a.attackrange = ko.observable(0);\n            a.attackspeed = ko.observable(0);\n            a.attackspeedreduction = ko.observable(0);\n            a.armor = ko.observable(0);\n            a.armorReduction = ko.observable(0);\n            a.healthregen = ko.observable(0);\n            a.lifesteal = ko.observable(0);\n            a.visionnight = ko.observable(0);\n            a.visionday = ko.observable(0);\n            switch (a.name) {\n                case 'invoker_cold_snap':\n                case 'invoker_ghost_walk':\n                case 'invoker_tornado':\n                case 'invoker_emp':\n                case 'invoker_alacrity':\n                case 'invoker_chaos_meteor':\n                case 'invoker_sun_strike':\n                case 'invoker_forge_spirit':\n                case 'invoker_ice_wall':\n                case 'invoker_deafening_blast':\n                    a.level(1);\n                break;\n            }\n            self.abilities.push(a);\n            self.buffs.push({ name: self.selectedBuff().buffName, hero: self.selectedBuff().hero, data: a });\n        }\n    };\n    \n    self.removeBuff = function (data, event, abilityName) {\n        if (my.prototype.findWhere(self.buffs(), { name: abilityName })  != undefined) {\n                self.buffs.remove(my.prototype.findWhere(self.buffs(), { name: abilityName }));\n                if (self.abilityControlData[abilityName] != undefined) {\n                    for (var i = 0; i < self.abilityControlData[abilityName].data.length; i++) {\n                        if (self.abilityControlData[abilityName].data[i].controlVal.dispose != undefined) {\n                            self.abilityControlData[abilityName].data[i].controlVal.dispose();\n                        }\n                        if (self.abilityControlData[abilityName].data[i].clean != undefined) {\n                            self.abilityControlData[abilityName].data[i].clean.dispose();\n                        }\n                    }\n                    self.abilityControlData[abilityName] = undefined;\n                }\n                for (var i = 0; i < self.abilities().length; i++) {\n                    if (self.abilities()[i].name == abilityName) {\n                        self.abilities()[i].level(0);\n                        self.abilities.remove(self.abilities()[i]);\n                        break;\n                    }\n                }\n        }\n    };\n    self.toggleBuff = function (index, data, event) {\n        if (self.buffs()[index()].data.behavior.indexOf('DOTA_ABILITY_BEHAVIOR_PASSIVE') < 0) {\n            if (self.buffs()[index()].data.isActive()) {\n                self.buffs()[index()].data.isActive(false);\n                self.abilities()[index()].isActive(false);\n            }\n            else {\n                self.buffs()[index()].data.isActive(true);\n                self.abilities()[index()].isActive(true);\n            }\n        }\n    }.bind(this);\n\n    self.toggleBuffDetail = function (index, data, event) {\n        if (self.buffs()[index()].data.isDetail()) {\n            self.buffs()[index()].data.isDetail(false);\n        }\n        else {\n            self.buffs()[index()].data.isDetail(true);\n        }\n    }.bind(this);\n\n    // Overrides the ability module function to remove available skill point check\n    self.levelUpAbility = function (index, data, event, hero) {\n        if (self.abilities()[index()].level() < hero.getAbilityLevelMax(data)) {\n            switch(self.abilities()[index()].abilitytype) {\n                case 'DOTA_ABILITY_TYPE_ULTIMATE':\n                    self.abilities()[index()].level(self.abilities()[index()].level() + 1);\n                break;\n                default:\n                    self.abilities()[index()].level(self.abilities()[index()].level() + 1);\n                break;\n            }\n            switch (self.abilities()[index()].name) {\n                case 'beastmaster_call_of_the_wild':\n                case 'chen_test_of_faith':\n                case 'morphling_morph_agi':\n                case 'shadow_demon_shadow_poison':\n                    self.abilities()[index() + 1].level(self.abilities()[index()].level());\n                break;\n                case 'morphling_morph_str':\n                    self.abilities()[index() - 1].level(self.abilities()[index()].level());\n                break;\n                case 'keeper_of_the_light_spirit_form':\n                    self.abilities()[index() - 1].level(self.abilities()[index()].level());\n                    self.abilities()[index() - 2].level(self.abilities()[index()].level());\n                case 'nevermore_shadowraze1':\n                    self.abilities()[index() + 1].level(self.abilities()[index()].level());\n                    self.abilities()[index() + 2].level(self.abilities()[index()].level());\n                break;\n                case 'nevermore_shadowraze2':\n                    self.abilities()[index() - 1].level(self.abilities()[index()].level());\n                    self.abilities()[index() + 1].level(self.abilities()[index()].level());\n                break;\n                case 'nevermore_shadowraze3':\n                    self.abilities()[index() - 1].level(self.abilities()[index()].level());\n                    self.abilities()[index() - 2].level(self.abilities()[index()].level());\n                break;\n            }\n        }\n    };\n    self.levelDownAbility = function (index, data, event, hero) {\n        if (self.abilities()[index()].level() > 0) {\n            self.abilities()[index()].level(self.abilities()[index()].level() - 1);\n            switch (self.abilities()[index()].name) {\n                case 'beastmaster_call_of_the_wild':\n                case 'chen_test_of_faith':\n                case 'morphling_morph_agi':\n                case 'shadow_demon_shadow_poison':\n                    self.abilities()[index() + 1].level(self.abilities()[index()].level());\n                break;\n                case 'morphling_morph_str':\n                    self.abilities()[index() - 1].level(self.abilities()[index()].level());\n                break;\n                case 'keeper_of_the_light_spirit_form':\n                    self.abilities()[index() - 1].level(self.abilities()[index()].level());\n                    self.abilities()[index() - 2].level(self.abilities()[index()].level());\n                case 'nevermore_shadowraze1':\n                    self.abilities()[index() + 1].level(self.abilities()[index()].level());\n                    self.abilities()[index() + 2].level(self.abilities()[index()].level());\n                break;\n                case 'nevermore_shadowraze2':\n                    self.abilities()[index() - 1].level(self.abilities()[index()].level());\n                    self.abilities()[index() + 1].level(self.abilities()[index()].level());\n                break;\n                case 'nevermore_shadowraze3':\n                    self.abilities()[index() - 1].level(self.abilities()[index()].level());\n                    self.abilities()[index() - 2].level(self.abilities()[index()].level());\n                break;\n                case 'ember_spirit_fire_remnant':\n                    self.abilities()[index() - 1].level(self.abilities()[index()].level());\n                break;\n                case 'lone_druid_true_form':\n                    self.abilities()[index() - 1].level(self.abilities()[index()].level());\n                break;\n            }\n        }\n    };\n    \n    return self;\n}","'use strict';\nrequire('./polyfill');\n\nfunction HEROCALCULATOR () {\n   // ...\n}\n\nvar my = HEROCALCULATOR;\n\nmy.prototype.heroData = {};\nmy.prototype.itemData = {};\nmy.prototype.unitData = {};\nmy.prototype.abilityData = {};\n\nmy.prototype.HeroOptions = [];\n\nmy.prototype.HeroOption = function (name, displayname, hero) {\n    this.heroName = name;\n    this.heroDisplayName = displayname;\n    this.hero = hero;\n};\n\nmy.prototype.idCounter = 0;\nmy.prototype.uniqueId = function (prefix) {\n    var id = ++my.prototype.idCounter + '';\n    return prefix ? prefix + id : id;\n};\nmy.prototype.findWhere = function (arr, obj) {\n    arrLoop: for (var i = 0; i < arr.length; i++) {\n        objLoop: for (var key in obj) {\n            if (arr[i][key] != obj[key]) {\n                continue arrLoop;\n            }\n        }\n        return arr[i];\n    }\n}\nmy.prototype.uniques = function (arr) {\n    var a = [];\n    for (var i=0, l=arr.length; i<l; i++)\n        if (a.indexOf(arr[i]) === -1 && arr[i] !== '')\n            a.push(arr[i]);\n    return a;\n}\nmy.prototype.union = function (a, b) {\n    var arr = a.concat(b);\n    return my.prototype.uniques(arr);\n}\n\nmy.prototype.totalResources = 3;\nmy.prototype.numResourcesLoaded = 0;\nmy.prototype.onResourceLoaded = function (callback) {\n    my.prototype.numResourcesLoaded++;\n    if (my.prototype.numResourcesLoaded == my.prototype.totalResources) {\n        \n        my.prototype.availableBuffs = [\n            new my.prototype.BuffOption('abaddon', 'abaddon_frostmourne'),\n            new my.prototype.BuffOption('axe', 'axe_culling_blade'),\n            new my.prototype.BuffOption('beastmaster', 'beastmaster_inner_beast'),\n            new my.prototype.BuffOption('bloodseeker', 'bloodseeker_bloodrage'),\n            new my.prototype.BuffOption('bounty_hunter', 'bounty_hunter_track'),\n            new my.prototype.BuffOption('centaur', 'centaur_stampede'),\n            new my.prototype.BuffOption('crystal_maiden', 'crystal_maiden_brilliance_aura'),\n            new my.prototype.BuffOption('dark_seer', 'dark_seer_surge'),\n            new my.prototype.BuffOption('dazzle', 'dazzle_weave'),\n            new my.prototype.BuffOption('drow_ranger', 'drow_ranger_trueshot'),\n            new my.prototype.BuffOption('invoker', 'invoker_alacrity'),\n            new my.prototype.BuffOption('wisp', 'wisp_tether'),\n            new my.prototype.BuffOption('wisp', 'wisp_overcharge'),\n            new my.prototype.BuffOption('kunkka', 'kunkka_ghostship'),\n            new my.prototype.BuffOption('lich', 'lich_frost_armor'),\n            new my.prototype.BuffOption('life_stealer', 'life_stealer_open_wounds'),\n            new my.prototype.BuffOption('luna', 'luna_lunar_blessing'),\n            new my.prototype.BuffOption('lycan', 'lycan_howl'),\n            new my.prototype.BuffOption('magnataur', 'magnataur_empower'),\n            new my.prototype.BuffOption('mirana', 'mirana_leap'),\n            new my.prototype.BuffOption('ogre_magi', 'ogre_magi_bloodlust'),\n            new my.prototype.BuffOption('omniknight', 'omniknight_guardian_angel'),\n            new my.prototype.BuffOption('rubick', 'rubick_null_field'),\n            new my.prototype.BuffOption('skeleton_king', 'skeleton_king_vampiric_aura'),\n            new my.prototype.BuffOption('spirit_breaker', 'spirit_breaker_empowering_haste'),\n            new my.prototype.BuffOption('sven', 'sven_warcry'),\n            new my.prototype.BuffOption('sven', 'sven_gods_strength'),\n            new my.prototype.BuffOption('treant', 'treant_living_armor'),\n            new my.prototype.BuffOption('troll_warlord', 'troll_warlord_battle_trance'),\n            new my.prototype.BuffOption('vengefulspirit', 'vengefulspirit_command_aura'),\n            new my.prototype.BuffOption('npc_dota_neutral_alpha_wolf', 'alpha_wolf_critical_strike'),\n            new my.prototype.BuffOption('npc_dota_neutral_alpha_wolf', 'alpha_wolf_command_aura'),\n            new my.prototype.BuffOption('npc_dota_neutral_polar_furbolg_ursa_warrior', 'centaur_khan_endurance_aura'),\n            new my.prototype.BuffOption('npc_dota_neutral_giant_wolf', 'giant_wolf_critical_strike'),\n            new my.prototype.BuffOption('npc_dota_neutral_kobold_taskmaster', 'kobold_taskmaster_speed_aura'),\n            new my.prototype.BuffOption('npc_dota_neutral_ogre_magi', 'ogre_magi_frost_armor'),\n            new my.prototype.BuffOption('npc_dota_neutral_satyr_hellcaller', 'satyr_hellcaller_unholy_aura'),\n            new my.prototype.BuffOption('npc_dota_neutral_enraged_wildkin', 'enraged_wildkin_toughness_aura'),\n            new my.prototype.BuffOption('npc_dota_necronomicon_archer_1', 'necronomicon_archer_aoe')\n        ];\n\n        my.prototype.availableDebuffs = [\n            new my.prototype.BuffOption('abaddon', 'abaddon_frostmourne'),\n            new my.prototype.BuffOption('alchemist', 'alchemist_acid_spray'),\n            new my.prototype.BuffOption('ancient_apparition', 'ancient_apparition_ice_vortex'),\n            new my.prototype.BuffOption('axe', 'axe_battle_hunger'),\n            new my.prototype.BuffOption('bane', 'bane_enfeeble'),\n            new my.prototype.BuffOption('batrider', 'batrider_sticky_napalm'),\n            new my.prototype.BuffOption('beastmaster', 'beastmaster_primal_roar'),\n            new my.prototype.BuffOption('bounty_hunter', 'bounty_hunter_jinada'),\n            new my.prototype.BuffOption('brewmaster', 'brewmaster_thunder_clap'),\n            new my.prototype.BuffOption('brewmaster', 'brewmaster_drunken_haze'),\n            new my.prototype.BuffOption('bristleback', 'bristleback_viscous_nasal_goo'),\n            new my.prototype.BuffOption('broodmother', 'broodmother_incapacitating_bite'),\n            new my.prototype.BuffOption('centaur', 'centaur_stampede'),\n            new my.prototype.BuffOption('chen', 'chen_penitence'),\n            new my.prototype.BuffOption('crystal_maiden', 'crystal_maiden_crystal_nova'),\n            new my.prototype.BuffOption('crystal_maiden', 'crystal_maiden_freezing_field'),\n            new my.prototype.BuffOption('dazzle', 'dazzle_weave'),\n            new my.prototype.BuffOption('drow_ranger', 'drow_ranger_frost_arrows'),\n            new my.prototype.BuffOption('earth_spirit', 'earth_spirit_rolling_boulder'),\n            new my.prototype.BuffOption('elder_titan', 'elder_titan_natural_order'),\n            new my.prototype.BuffOption('elder_titan', 'elder_titan_earth_splitter'),\n            new my.prototype.BuffOption('enchantress', 'enchantress_untouchable'),\n            new my.prototype.BuffOption('enchantress', 'enchantress_enchant'),\n            new my.prototype.BuffOption('faceless_void', 'faceless_void_time_walk'),\n            new my.prototype.BuffOption('huskar', 'huskar_life_break'),\n            new my.prototype.BuffOption('invoker', 'invoker_ghost_walk'),\n            new my.prototype.BuffOption('invoker', 'invoker_ice_wall'),\n            new my.prototype.BuffOption('wisp', 'wisp_tether'),\n            new my.prototype.BuffOption('jakiro', 'jakiro_dual_breath'),\n            new my.prototype.BuffOption('jakiro', 'jakiro_liquid_fire'),\n            new my.prototype.BuffOption('keeper_of_the_light', 'keeper_of_the_light_blinding_light'),\n            new my.prototype.BuffOption('kunkka', 'kunkka_torrent'),\n            new my.prototype.BuffOption('lich', 'lich_frost_nova'),\n            new my.prototype.BuffOption('lich', 'lich_frost_armor'),\n            new my.prototype.BuffOption('lich', 'lich_chain_frost'),\n            new my.prototype.BuffOption('life_stealer', 'life_stealer_open_wounds'),\n            new my.prototype.BuffOption('lion', 'lion_voodoo'),\n            new my.prototype.BuffOption('magnataur', 'magnataur_skewer'),\n            new my.prototype.BuffOption('medusa', 'medusa_stone_gaze'),\n            new my.prototype.BuffOption('meepo', 'meepo_geostrike'),\n            new my.prototype.BuffOption('naga_siren', 'naga_siren_rip_tide'),\n            new my.prototype.BuffOption('night_stalker', 'night_stalker_void'),\n            new my.prototype.BuffOption('night_stalker', 'night_stalker_crippling_fear'),\n            new my.prototype.BuffOption('night_stalker', 'night_stalker_darkness'),\n            new my.prototype.BuffOption('ogre_magi', 'ogre_magi_ignite'),\n            new my.prototype.BuffOption('omniknight', 'omniknight_degen_aura'),\n            new my.prototype.BuffOption('phantom_assassin', 'phantom_assassin_stifling_dagger'),\n            new my.prototype.BuffOption('phantom_lancer', 'phantom_lancer_spirit_lance'),\n            new my.prototype.BuffOption('pudge', 'pudge_rot'),\n            new my.prototype.BuffOption('pugna', 'pugna_decrepify'),\n            new my.prototype.BuffOption('queenofpain', 'queenofpain_shadow_strike'),\n            new my.prototype.BuffOption('riki', 'riki_smoke_screen'),\n            new my.prototype.BuffOption('rubick', 'rubick_fade_bolt'),\n            new my.prototype.BuffOption('sand_king', 'sandking_epicenter'),\n            new my.prototype.BuffOption('nevermore', 'nevermore_dark_lord'),\n            new my.prototype.BuffOption('shadow_shaman', 'shadow_shaman_voodoo'),\n            new my.prototype.BuffOption('skeleton_king', 'skeleton_king_hellfire_blast'),\n            new my.prototype.BuffOption('skeleton_king', 'skeleton_king_reincarnation'),\n            new my.prototype.BuffOption('skywrath_mage', 'skywrath_mage_concussive_shot'),\n            new my.prototype.BuffOption('skywrath_mage', 'skywrath_mage_ancient_seal'),\n            new my.prototype.BuffOption('slardar', 'slardar_slithereen_crush'),\n            new my.prototype.BuffOption('slardar', 'slardar_amplify_damage'),\n            new my.prototype.BuffOption('slark', 'slark_essence_shift'),\n            new my.prototype.BuffOption('sniper', 'sniper_shrapnel'),\n            new my.prototype.BuffOption('spectre', 'spectre_spectral_dagger'),\n            new my.prototype.BuffOption('storm_spirit', 'storm_spirit_overload'),\n            new my.prototype.BuffOption('templar_assassin', 'templar_assassin_meld'),\n            new my.prototype.BuffOption('tidehunter', 'tidehunter_gush'),\n            new my.prototype.BuffOption('tinker', 'tinker_laser'),\n            new my.prototype.BuffOption('treant', 'treant_leech_seed'),\n            new my.prototype.BuffOption('tusk', 'tusk_frozen_sigil'),\n            new my.prototype.BuffOption('undying', 'undying_flesh_golem'),\n            new my.prototype.BuffOption('ursa', 'ursa_earthshock'),\n            new my.prototype.BuffOption('vengefulspirit', 'vengefulspirit_wave_of_terror'),\n            new my.prototype.BuffOption('vengefulspirit', 'vengefulspirit_command_aura'),\n            new my.prototype.BuffOption('venomancer', 'venomancer_venomous_gale'),\n            new my.prototype.BuffOption('venomancer', 'venomancer_poison_sting'),\n            new my.prototype.BuffOption('viper', 'viper_poison_attack'),\n            new my.prototype.BuffOption('viper', 'viper_corrosive_skin'),\n            new my.prototype.BuffOption('viper', 'viper_viper_strike'),\n            new my.prototype.BuffOption('visage', 'visage_grave_chill'),\n            new my.prototype.BuffOption('warlock', 'warlock_upheaval'),\n            new my.prototype.BuffOption('weaver', 'weaver_the_swarm'),\n            new my.prototype.BuffOption('windrunner', 'windrunner_windrun'),\n            new my.prototype.BuffOption('winter_wyvern', 'winter_wyvern_arctic_burn'),\n            new my.prototype.BuffOption('winter_wyvern', 'winter_wyvern_splinter_blast'),\n            new my.prototype.BuffOption('npc_dota_neutral_ghost', 'ghost_frost_attack'),\n            new my.prototype.BuffOption('npc_dota_neutral_polar_furbolg_ursa_warrior', 'polar_furbolg_ursa_warrior_thunder_clap'),\n            new my.prototype.BuffOption('npc_dota_neutral_ogre_magi', 'ogre_magi_frost_armor'),\n            new my.prototype.BuffOption('npc_dota_neutral_satyr_trickster', 'satyr_trickster_purge'),\n            new my.prototype.BuffOption('npc_dota_neutral_enraged_wildkin', 'enraged_wildkin_tornado')\n        ];\n        \n        my.prototype.itemOptionsArr = [];\n        for (var i = 0; i < my.prototype.validItems.length; i++) {\n            my.prototype.itemOptionsArr.push(new my.prototype.ItemInput(my.prototype.validItems[i], my.prototype.itemData['item_' + my.prototype.validItems[i]].displayname));\n        }\n        \n        var itemBuffs = ['assault', 'ancient_janggo', 'headdress', 'mekansm', 'pipe', 'ring_of_aquila', 'vladmir', 'ring_of_basilius', 'buckler', 'solar_crest'];\n        my.prototype.itemBuffOptions = itemBuffs.map(function(item) {\n            return new my.prototype.ItemInput(item, my.prototype.itemData['item_' + item].displayname);\n        });\n        \n        var itemDebuffs = [\n            {item: 'assault', debuff: null},\n            {item: 'shivas_guard', debuff: null},\n            {item: 'desolator', debuff: null},\n            {item: 'medallion_of_courage', debuff: null},\n            {item: 'radiance', debuff: null},\n            {item: 'sheepstick', debuff: null},\n            {item: 'veil_of_discord', debuff: null},\n            {item: 'solar_crest', debuff: null},\n            {item: 'silver_edge', debuff: {id: 'shadow_walk', name: 'Shadow Walk'}},\n            {item: 'silver_edge', debuff: {id: 'maim', name: 'Lesser Maim'}}\n        ]\n        my.prototype.itemDebuffOptions = itemDebuffs.map(function(item) {\n            return new my.prototype.ItemInput(item.item, my.prototype.itemData['item_' + item.item].displayname, item.debuff);\n        });\n        if (callback) callback();\n    }\n}\n\nmy.prototype.init = function (HERODATA_PATH,ITEMDATA_PATH,UNITDATA_PATH, callback) {\n    my.prototype.numResourcesLoaded = 0;\n    my.prototype.getJSON(HERODATA_PATH, function (data) {\n        my.prototype.heroData = data;\n        my.prototype.heroData['npc_dota_hero_chen'].abilities[2].behavior.push('DOTA_ABILITY_BEHAVIOR_NOT_LEARNABLE');\n        my.prototype.heroData['npc_dota_hero_nevermore'].abilities[1].behavior.push('DOTA_ABILITY_BEHAVIOR_NOT_LEARNABLE');\n        my.prototype.heroData['npc_dota_hero_nevermore'].abilities[2].behavior.push('DOTA_ABILITY_BEHAVIOR_NOT_LEARNABLE');\n        my.prototype.heroData['npc_dota_hero_morphling'].abilities[3].behavior.push('DOTA_ABILITY_BEHAVIOR_NOT_LEARNABLE');\n        my.prototype.heroData['npc_dota_hero_ogre_magi'].abilities[3].behavior.push('DOTA_ABILITY_BEHAVIOR_NOT_LEARNABLE');\n        my.prototype.heroData['npc_dota_hero_techies'].abilities[4].behavior.push('DOTA_ABILITY_BEHAVIOR_NOT_LEARNABLE');\n        my.prototype.heroData['npc_dota_hero_beastmaster'].abilities[2].behavior.push('DOTA_ABILITY_BEHAVIOR_NOT_LEARNABLE');\n        var index = my.prototype.heroData['npc_dota_hero_lone_druid'].abilities[3].behavior.indexOf('DOTA_ABILITY_BEHAVIOR_HIDDEN');\n        my.prototype.heroData['npc_dota_hero_lone_druid'].abilities[3].behavior.splice(index, 1);\n        \n        index = my.prototype.heroData['npc_dota_hero_abaddon'].abilities[2].behavior.indexOf('DOTA_ABILITY_BEHAVIOR_PASSIVE');\n        my.prototype.heroData['npc_dota_hero_abaddon'].abilities[2].behavior.splice(index, 1);\n        \n        index = my.prototype.heroData['npc_dota_hero_riki'].abilities[2].behavior.indexOf('DOTA_ABILITY_BEHAVIOR_PASSIVE');\n        my.prototype.heroData['npc_dota_hero_riki'].abilities[2].behavior.splice(index, 1);\n        \n        for (var h in my.prototype.heroData) {\n            my.prototype.HeroOptions.push(new my.prototype.HeroOption(h.replace('npc_dota_hero_', ''), my.prototype.heroData[h].displayname));\n        }\n            \n        my.prototype.onResourceLoaded(callback);\n    });\n    my.prototype.getJSON(ITEMDATA_PATH, function (data) {\n        my.prototype.itemData = data;\n        my.prototype.onResourceLoaded(callback);\n    });\n    my.prototype.getJSON(UNITDATA_PATH, function (data) {\n        my.prototype.unitData = data;\n        my.prototype.onResourceLoaded(callback);\n    });\n}\n\nmy.prototype.extend = function (out) {\n    out = out || {};\n\n    for (var i = 1; i < arguments.length; i++) {\n        var obj = arguments[i];\n\n        if (!obj)\n            continue;\n\n        for (var key in obj) {\n            if (obj.hasOwnProperty(key)) {\n                if (typeof obj[key] === 'object')\n                    out[key] = my.prototype.extend(out[key], obj[key]);\n                else\n                    out[key] = obj[key];\n            }\n        }\n    }\n\n    return out;\n};\n\nmy.prototype.getJSON = function (url, successCallback, errorCallback) {\n    var request = new XMLHttpRequest();\n    request.open('GET', url, true);\n\n    request.onload = function() {\n        if (request.status >= 200 && request.status < 400) {\n            // Success!\n            var data = JSON.parse(request.responseText);\n            successCallback(data);\n        } else {\n            // We reached our target server, but it returned an error\n            errorCallback();\n        }\n    };\n\n    request.onerror = function() {\n        // There was a connection error of some sort\n        errorCallback();\n    };\n\n    request.send();\n}\nmodule.exports = HEROCALCULATOR;","'use strict';\nvar ko = require('./herocalc_knockout');\n    \nvar my = require(\"./herocalc_core\");\n\nmy.prototype.illusionData = {\n    chaos_knight_phantasm: {\n        hero: 'chaos_knight',\n        displayName: 'Chaos Knight Phantasm',\n        use_selected_hero: false,\n        max_level: 3,\n        outgoing_damage: 'outgoing_damage',\n        incoming_damage: 'incoming_damage'\n    },\n    naga_siren_mirror_image: {\n        hero: 'naga_siren',\n        displayName: 'Naga Siren Mirror Image',\n        use_selected_hero: false,\n        max_level: 4,\n        outgoing_damage: 'outgoing_damage',\n        incoming_damage: 'incoming_damage'\n    },\n    dark_seer_wall_of_replica: {\n        hero: 'dark_seer',\n        displayName: 'Dark Seer Wall of Replica',\n        use_selected_hero: true,\n        max_level: 3,\n        outgoing_damage: 'replica_damage_outgoing',\n        incoming_damage: 'replica_damage_incoming',\n        outgoing_damage_scepter: 'replica_damage_outgoing_scepter'\n    },\n    morphling_replicate: {\n        hero: 'morphling',\n        displayName: 'Morphling Replicate',\n        use_selected_hero: true,\n        max_level: 3,\n        outgoing_damage: 'illusion_damage_out_pct',\n        incoming_damage: 'illusion_damage_in_pct'\n    },\n    phantom_lancer_doppelwalk: {\n        hero: 'phantom_lancer',\n        displayName: 'Phantom Lancer Doppelwalk',\n        use_selected_hero: false,\n        max_level: 4,\n        outgoing_damage: 'illusion_damage_out_pct',\n        incoming_damage: 'illusion_damage_in_pct'        \n    },\n    phantom_lancer_juxtapose: {\n        hero: 'phantom_lancer',\n        displayName: 'Phantom Lancer Juxtapose',\n        use_selected_hero: false,\n        max_level: 4,\n        outgoing_damage: 'illusion_damage_out_pct',\n        incoming_damage: 'illusion_damage_in_pct'        \n    },\n    phantom_lancer_spirit_lance: {\n        hero: 'phantom_lancer',\n        displayName: 'Phantom Lancer Spirit Lance',\n        use_selected_hero: false,\n        max_level: 4,\n        outgoing_damage: 'illusion_damage_out_pct',\n        incoming_damage: 'illusion_damage_in_pct'        \n    },\n    shadow_demon_disruption: {\n        hero: 'shadow_demon',\n        displayName: 'Shadow Demon Disruption',\n        use_selected_hero: true,\n        max_level: 4,\n        outgoing_damage: 'illusion_outgoing_damage',\n        incoming_damage: 'illusion_incoming_damage'        \n    },\n    spectre_haunt: {\n        hero: 'spectre',\n        displayName: 'Spectre Haunt',\n        use_selected_hero: false,\n        max_level: 3,\n        outgoing_damage: 'illusion_damage_outgoing',\n        incoming_damage: 'illusion_damage_incoming'        \n    },\n    terrorblade_conjure_image: {\n        hero: 'terrorblade',\n        displayName: 'Terrorblade Conjure Image',\n        use_selected_hero: false,\n        max_level: 4,\n        outgoing_damage: 'illusion_outgoing_damage',\n        incoming_damage: 'illusion_incoming_damage'        \n    },\n    terrorblade_reflection: {\n        hero: 'terrorblade',\n        displayName: 'Terrorblade Reflection',\n        use_selected_hero: true,\n        max_level: 4,\n        outgoing_damage: 'illusion_outgoing_damage'     \n    },\n    item_manta: {\n        hero: '',\n        is_item: true,\n        displayName: 'Manta Style Illusion',\n        use_selected_hero: true,\n        max_level: 1,\n        outgoing_damage_melee: 'images_do_damage_percent_melee',\n        incoming_damage_melee: 'images_take_damage_percent_melee',\n        outgoing_damage_ranged: 'images_do_damage_percent_ranged',\n        incoming_damage_ranged: 'images_take_damage_percent_ranged'\n    }\n}\n\nmy.prototype.IllusionViewModel = function (h, p, abilityLevel) {\n    var self = new my.prototype.HeroCalculatorModel(0);\n    self.parent = p;\n    self.inventory = self.parent.inventory;\n    self.illusionType = ko.observable(self.parent.selectedIllusion().illusionName);\n    self.illusionDisplayName = ko.observable(self.parent.selectedIllusion().illusionDisplayName);\n    self.illusionAbilityLevel(abilityLevel);\n    self.illusionAbilityMaxLevel = ko.observable(my.prototype.illusionData[self.parent.selectedIllusion().illusionName].max_level);\n    if (!my.prototype.illusionData[self.illusionType()].use_selected_hero) {\n        self.selectedHero(my.prototype.findWhere(self.availableHeroes(), {heroName: self.parent.selectedIllusion().baseHero}));\n    }\n    else {\n        self.selectedHero(self.parent.selectedHero());\n    }\n    self.selectedHeroLevel(self.parent.selectedHeroLevel());\n    self.hero = ko.computed(function() {\n        return ko.wrap.fromJS(my.prototype.heroData['npc_dota_hero_' + self.selectedHero().heroName]);\n    });\n    \n    self.ability().getAttributeBonusLevel = self.parent.ability().getAttributeBonusLevel;\n    self.totalAgi = ko.computed(function () {\n        return (self.heroData().attributebaseagility\n                + self.heroData().attributeagilitygain * (self.selectedHeroLevel() - 1) \n                + self.inventory.getAttributes('agi') \n                + self.ability().getAttributeBonusLevel() * 2\n                + self.ability().getAgility()\n                + self.enemy().ability().getAllStatsReduction()\n                + self.debuffs.getAllStatsReduction()\n               ).toFixed(2);\n    });\n    self.intStolen = ko.observable(0).extend({ numeric: 0 });\n    self.totalInt = ko.computed(function () {\n        return (self.heroData().attributebaseintelligence \n                + self.heroData().attributeintelligencegain * (self.selectedHeroLevel() - 1) \n                + self.inventory.getAttributes('int') \n                + self.ability().getAttributeBonusLevel() * 2\n                + self.ability().getIntelligence()\n                + self.enemy().ability().getAllStatsReduction()\n                + self.debuffs.getAllStatsReduction() + self.intStolen()\n               ).toFixed(2);\n    });\n    self.totalStr = ko.computed(function () {\n        return (self.heroData().attributebasestrength \n                + self.heroData().attributestrengthgain * (self.selectedHeroLevel() - 1) \n                + self.inventory.getAttributes('str') \n                + self.ability().getAttributeBonusLevel() * 2\n                + self.ability().getStrength()\n                + self.enemy().ability().getAllStatsReduction()\n                + self.debuffs.getAllStatsReduction()\n               ).toFixed(2);\n    });\n    \n    self.getAbilityAttributeValue = function(hero, ability, attributeName, level) {\n        if (ability == 'item_manta') {\n            var abilityObj = my.prototype.itemData[ability];\n        }\n        else {\n            var abilityObj = my.prototype.findWhere(my.prototype.heroData['npc_dota_hero_' + hero].abilities, {name: ability});\n        }\n        var attribute = my.prototype.findWhere(abilityObj.attributes, {name: attributeName});\n        if (level == 0) {\n            return parseFloat(attribute.value[0]);\n        }\n        else if (level > attribute.length) {\n            return parseFloat(attribute.value[0]);\n        }\n        else {\n            return parseFloat(attribute.value[level - 1]);\n        }\n    }\n    \n    self.getIncomingDamageMultiplier = function(illusionType, hasScepter, attackType) {\n        if (illusionType == 'item_manta') {\n            if (attackType == 'DOTA_UNIT_CAP_MELEE_ATTACK') {\n                return (1 + self.getAbilityAttributeValue(my.prototype.illusionData[self.illusionType()].hero, self.illusionType(), my.prototype.illusionData[illusionType].incoming_damage_melee, self.illusionAbilityLevel())/100)\n            }\n            else {\n                return (1 + self.getAbilityAttributeValue(my.prototype.illusionData[self.illusionType()].hero, self.illusionType(), my.prototype.illusionData[illusionType].incoming_damage_ranged, self.illusionAbilityLevel())/100)\n            }\n        }\n        else {\n            return (1 + self.getAbilityAttributeValue(my.prototype.illusionData[self.illusionType()].hero, self.illusionType(), my.prototype.illusionData[illusionType].incoming_damage, self.illusionAbilityLevel())/100)\n        }\n    }\n    self.getOutgoingDamageMultiplier = function(illusionType, hasScepter, attackType) {\n        if (illusionType == 'item_manta') {\n            if (attackType == 'DOTA_UNIT_CAP_MELEE_ATTACK') {\n                return (1 + self.getAbilityAttributeValue(my.prototype.illusionData[self.illusionType()].hero, self.illusionType(), my.prototype.illusionData[illusionType].outgoing_damage_melee, self.illusionAbilityLevel())/100);\n            }\n            else {\n                return (1 + self.getAbilityAttributeValue(my.prototype.illusionData[self.illusionType()].hero, self.illusionType(), my.prototype.illusionData[illusionType].outgoing_damage_ranged, self.illusionAbilityLevel())/100);\n            }\n        }\n        else {\n            return (1 + self.getAbilityAttributeValue(my.prototype.illusionData[self.illusionType()].hero, self.illusionType(), my.prototype.illusionData[illusionType].outgoing_damage, self.illusionAbilityLevel())/100);\n        }\n    }\n\n    self.baseDamage = ko.computed(function() {\n        return [Math.floor(my.prototype.heroData['npc_dota_hero_' + self.selectedHero().heroName].attackdamagemin + self.totalAttribute(self.primaryAttribute()) + self.ability().getBaseDamage().total)\n                * self.getOutgoingDamageMultiplier(self.illusionType(), false, self.hero().attacktype()),\n                Math.floor(my.prototype.heroData['npc_dota_hero_' + self.selectedHero().heroName].attackdamagemax + self.totalAttribute(self.primaryAttribute()) + self.ability().getBaseDamage().total)\n                * self.getOutgoingDamageMultiplier(self.illusionType(), false, self.hero().attacktype())];\n    });\n    \n    self.damage = ko.computed(function() {\n        return [self.baseDamage()[0],\n                self.baseDamage()[1]];\n    });\n    \n    self.ehpPhysical = ko.computed(function() {\n        var ehp = (self.health() * (1 + .06 * self.totalArmorPhysical())) / (1 - (1 - (self.inventory.getEvasion() * self.ability().getEvasion())))\n        ehp *= (self.inventory.activeItems().some(function(item) {return item.item == 'mask_of_madness';}) ? (1 / 1.3) : 1);\n        ehp *= (1 / self.getIncomingDamageMultiplier(self.illusionType(), false, self.hero().attacktype()));\n        return ehp.toFixed(2);\n    });\n    self.ehpMagical = ko.computed(function() {\n        var ehp = self.health() / self.totalMagicResistanceProduct();\n        ehp *= (1 / self.getIncomingDamageMultiplier(self.illusionType(), false, self.hero().attacktype()));\n        return ehp.toFixed(2);\n    });\n    \n    self.totalArmorPhysical = ko.computed(function() {\n        return (self.enemy().ability().getArmorBaseReduction() * self.debuffs.getArmorBaseReduction() * (my.prototype.heroData['npc_dota_hero_' + self.selectedHero().heroName].armorphysical + self.totalAgi() * .14)\n                + self.ability().getArmor() + self.enemy().ability().getArmorReduction() + self.buffs.getArmor() + self.debuffs.getArmorReduction()).toFixed(2);\n    });\n    \n    self.ias = ko.computed(function() {\n        var val = parseFloat(self.totalAgi()) \n                + self.ability().getAttackSpeed() \n                + self.enemy().ability().getAttackSpeedReduction() \n                + self.buffs.getAttackSpeed() \n                + self.debuffs.getAttackSpeedReduction()\n                + self.unit().ability().getAttackSpeed(); \n        if (val < -80) {\n            return -80;\n        }\n        else if (val > 400) {\n            return 400;\n        }\n        return val.toFixed(2);\n    });\n    \n    return self;\n}","'use strict';\nvar ko = require('./herocalc_knockout');\n\nvar my = require(\"./herocalc_core\");\nrequire(\"./herocalc_hero_damage\");\n\nmy.prototype.totalExp = [0, 200, 500, 900, 1400, 2000, 2600, 3400, 4400, 5400, 6000, 8200, 9000, 10400, 11900, 13500, 15200, 17000, 18900, 20900, 23000, 25200, 27500, 29900, 32400];\nmy.prototype.nextLevelExp = [200, 300, 400, 500, 600, 600, 800, 1000, 1000, 600, 2200, 800, 1400, 1500, 1600, 1700, 1800, 1900, 2000, 2100, 2200, 2300, 2400, 2500, '&mdash;'];\nmy.prototype.diffProperties = [\n    'totalAgi',\n    'totalInt',\n    'totalStr',\n    'health',\n    'healthregen',\n    'mana',\n    'manaregen',\n    'totalArmorPhysical',\n    'totalArmorPhysicalReduction',\n    'totalMovementSpeed',\n    'totalTurnRate',\n    'baseDamage',\n    'bonusDamage',\n    'bonusDamageReduction',\n    'damage',\n    'totalMagicResistanceProduct',\n    'totalMagicResistance',\n    'bat',\n    'ias',\n    'attackTime',\n    'attacksPerSecond',\n    'evasion',\n    'ehpPhysical',\n    'ehpMagical',\n    'bash',\n    'critChance',\n    //'critDamage',\n    'missChance',\n    'totalattackrange',\n    'visionrangeday',\n    'visionrangenight',\n    'lifesteal'\n];\n\nmy.prototype.IllusionOption = function (name, displayname, baseHero) {\n    this.illusionName = name;\n    this.illusionDisplayName = displayname;\n    this.baseHero = baseHero;\n};\n\nmy.prototype.createIllusionOptions = function () {\n    var options = [];\n    for (var h in my.prototype.illusionData) {\n        options.push(new my.prototype.IllusionOption(h, my.prototype.illusionData[h].displayName, my.prototype.illusionData[h].hero));\n    }\n    return options;\n}\n\nmy.prototype.HeroModel = function (h) {\n    var self = this;\n    self.heroId = ko.observable(h);\n    self.selectedHeroLevel = ko.observable(1);\n    self.inventory = new my.prototype.InventoryViewModel(self);\n    self.selectedInventory = ko.observable(-1);\n    self.buffs = new my.prototype.BuffViewModel();\n    self.buffs.hasScepter = self.inventory.hasScepter;\n    self.debuffs = new my.prototype.BuffViewModel();\n    /*self.hero = ko.computed(function () {\n        return ko.mapping.fromJS(my.prototype.heroData['npc_dota_hero_' + self.heroId()]);\n    });*/\n    self.heroData = ko.computed(function () {\n      return my.prototype.heroData['npc_dota_hero_' + self.heroId()];\n    });\n    self.heroCompare = ko.observable(self);\n    self.enemy = ko.observable(self);\n    self.unit = ko.observable(self);\n    self.clone = ko.observable(self);\n    self.illusions = ko.observableArray([]);\n    self.availableIllusions = ko.observableArray(my.prototype.createIllusionOptions());\n    self.selectedIllusion = ko.observable(self.availableIllusions()[0]);\n    self.illusionAbilityLevel = ko.observable(1);\n    self.illusionAbilityMaxLevel = ko.computed(function () {\n        return my.prototype.illusionData[self.selectedIllusion().illusionName].max_level;\n    });\n    \n    self.skillPointHistory = ko.observableArray();\n    \n    self.ability = ko.computed(function () {\n        var a = new my.prototype.AbilityModel(ko.observableArray(JSON.parse(JSON.stringify(self.heroData().abilities))), self);\n        switch (self.heroId()) {\n            case 'earth_spirit':\n            case 'ogre_magi':\n                a._abilities[3].level(1);\n            break;\n            case 'invoker':\n                for (var i = 6; i < 16; i++) {\n                    a._abilities[i].level(1);\n                }\n            break;\n        }\n        self.skillPointHistory.removeAll();\n        a.hasScepter = self.inventory.hasScepter\n        return a;\n    });\n\n    self.availableSkillPoints = ko.computed(function () {\n        var c = self.selectedHeroLevel();\n        for (var i = 0; i < self.ability().abilities().length; i++) {\n            switch(self.ability().abilities()[i].abilitytype) {\n                case 'DOTA_ABILITY_TYPE_ULTIMATE':\n                    if (self.heroId() === 'invoker') {\n                        while (\n                            ((self.ability().abilities()[i].level() == 1) && (parseInt(self.selectedHeroLevel()) < 2)) ||\n                            ((self.ability().abilities()[i].level() == 2) && (parseInt(self.selectedHeroLevel()) < 7)) ||\n                            ((self.ability().abilities()[i].level() == 3) && (parseInt(self.selectedHeroLevel()) < 11)) ||\n                            ((self.ability().abilities()[i].level() == 4) && (parseInt(self.selectedHeroLevel()) < 17))\n                        ) {\n                            self.ability().levelDownAbility(i, null, null, self);\n                        }\n                    }\n                    else if (self.heroId() === 'meepo') {\n                        while ((self.ability().abilities()[i].level()-1) * 7 + 3 > parseInt(self.selectedHeroLevel())) {\n                            self.ability().levelDownAbility(i, null, null, self);\n                        }\n                    }\n                    else {\n                        while (self.ability().abilities()[i].level() * 5 + 1 > parseInt(self.selectedHeroLevel())) {\n                            self.ability().levelDownAbility(i, null, null, self);\n                        }\n                    }\n                break;\n                default:\n                    while (self.ability().abilities()[i].level() * 2 - 1 > parseInt(self.selectedHeroLevel())) {\n                        self.ability().levelDownAbility(i, null, null, self);\n                    }\n                break;\n            }\n        }\n        while (self.skillPointHistory().length > c) {\n            self.ability().levelDownAbility(self.skillPointHistory()[self.skillPointHistory().length-1], null, null, self);\n        }\n        return c-self.skillPointHistory().length;\n    }, this);\n    self.primaryAttribute = ko.pureComputed(function () {\n        var v = self.heroData().attributeprimary;\n        if (v === 'DOTA_ATTRIBUTE_AGILITY') return 'agi';\n        if (v === 'DOTA_ATTRIBUTE_INTELLECT') return 'int';\n        if (v === 'DOTA_ATTRIBUTE_STRENGTH') return 'str';\n        return '';\n    });\n    self.totalExp = ko.pureComputed(function () {\n        return my.prototype.totalExp[self.selectedHeroLevel() - 1];\n    });\n    self.nextLevelExp = ko.pureComputed(function () {\n        return my.prototype.nextLevelExp[self.selectedHeroLevel() - 1];\n    });\n    self.startingArmor = ko.pureComputed(function () {\n        return (self.heroData().attributebaseagility * .14 + self.heroData().armorphysical).toFixed(2);\n    });\n    self.respawnTime = ko.pureComputed(function () {\n        return 5 + 3.8 * self.selectedHeroLevel();\n    });\n    self.totalAttribute = function (a) {\n        if (a === 'agi') return parseFloat(self.totalAgi());\n        if (a === 'int') return parseFloat(self.totalInt());\n        if (a === 'str') return parseFloat(self.totalStr());\n        return 0;\n    };\n    self.totalAgi = ko.pureComputed(function () {\n        return (self.heroData().attributebaseagility\n                + self.heroData().attributeagilitygain * (self.selectedHeroLevel() - 1) \n                + self.inventory.getAttributes('agi') \n                + self.ability().getAttributeBonusLevel() * 2\n                + self.ability().getAgility()\n                + self.enemy().ability().getAllStatsReduction()\n                + self.debuffs.getAllStatsReduction()\n               ).toFixed(2);\n    });\n    self.intStolen = ko.observable(0).extend({ numeric: 0 });\n    self.totalInt = ko.pureComputed(function () {\n        return (self.heroData().attributebaseintelligence \n                + self.heroData().attributeintelligencegain * (self.selectedHeroLevel() - 1) \n                + self.inventory.getAttributes('int') \n                + self.ability().getAttributeBonusLevel() * 2\n                + self.ability().getIntelligence()\n                + self.enemy().ability().getAllStatsReduction()\n                + self.debuffs.getAllStatsReduction() + self.intStolen()\n               ).toFixed(2);\n    });\n    self.totalStr = ko.pureComputed(function () {\n        return (self.heroData().attributebasestrength \n                + self.heroData().attributestrengthgain * (self.selectedHeroLevel() - 1) \n                + self.inventory.getAttributes('str') \n                + self.ability().getAttributeBonusLevel() * 2\n                + self.ability().getStrength()\n                + self.enemy().ability().getStrengthReduction()\n                + self.enemy().ability().getAllStatsReduction()\n                + self.debuffs.getAllStatsReduction()\n               ).toFixed(2);\n    });\n    self.health = ko.pureComputed(function () {\n        return (self.heroData().statushealth + Math.floor(self.totalStr()) * 20 \n                + self.inventory.getHealth()\n                + self.ability().getHealth()).toFixed(2);\n    });\n    self.healthregen = ko.pureComputed(function () {\n        var healthRegenAura = [self.inventory.getHealthRegenAura, self.buffs.itemBuffs.getHealthRegenAura].reduce(function (memo, fn) {\n            var obj = fn(memo.excludeList);\n            obj.value += memo.value;\n            return obj;\n        }, {value: 0, excludeList: []});\n        return (self.heroData().statushealthregen + self.totalStr() * .03 \n                + self.inventory.getHealthRegen() \n                + self.ability().getHealthRegen()\n                + self.buffs.getHealthRegen()\n                + healthRegenAura.value\n                ).toFixed(2);\n    });\n    self.mana = ko.pureComputed(function () {\n        return (self.heroData().statusmana\n                + self.totalInt() * 12\n                + self.inventory.getMana()\n                + self.ability().getMana()).toFixed(2);\n    });\n    self.manaregen = ko.pureComputed(function () {\n        return ((self.heroData().statusmanaregen \n                + self.totalInt() * .04 \n                + self.ability().getManaRegen()) \n                * (1 + self.inventory.getManaRegenPercent()) \n                + (self.heroId() === 'crystal_maiden' ? self.ability().getManaRegenArcaneAura() * 2 : self.buffs.getManaRegenArcaneAura())\n                + self.inventory.getManaRegenBloodstone()\n                + self.inventory.getManaRegen()\n                - self.enemy().ability().getManaRegenReduction()).toFixed(2);\n    });\n    self.totalArmorPhysical = ko.pureComputed(function () {\n        var armorAura = [self.inventory.getArmorAura, self.buffs.itemBuffs.getArmorAura].reduce(function (memo, fn) {\n            var obj = fn(memo.attributes);\n            return obj;\n        }, {value:0, attributes:[]});\n        var armorReduction = [self.enemy().inventory.getArmorReduction, self.debuffs.itemBuffs.getArmorReduction].reduce(function (memo, fn) {\n            var obj = fn(memo.excludeList);\n            obj.value += memo.value;\n            return obj;\n        }, {value: 0, excludeList: []});\n        return (self.enemy().ability().getArmorBaseReduction() * self.debuffs.getArmorBaseReduction() * (self.heroData().armorphysical + self.totalAgi() * .14)\n                + self.inventory.getArmor()\n                //+ self.inventory.getArmorAura().value\n                //+ self.enemy().inventory.getArmorReduction()\n                + self.ability().getArmor()\n                + self.enemy().ability().getArmorReduction()\n                + self.buffs.getArmor()\n                + self.buffs.itemBuffs.getArmor()\n                + self.debuffs.getArmorReduction()\n                //+ self.buffs.itemBuffs.getArmorAura().value\n                + armorAura.value\n                + armorReduction.value\n                //+ self.debuffs.getArmorReduction()\n                ).toFixed(2);\n    });\n    self.totalArmorPhysicalReduction = ko.pureComputed(function () {\n        var totalArmor = self.totalArmorPhysical();\n        if (totalArmor >= 0) {\n            return ((0.06 * self.totalArmorPhysical()) / (1 + 0.06 * self.totalArmorPhysical()) * 100).toFixed(2);\n        }\n        else {\n            return -((0.06 * -self.totalArmorPhysical()) / (1 + 0.06 * -self.totalArmorPhysical()) * 100).toFixed(2);\n        }\n    });\n    self.totalMovementSpeed = ko.pureComputed(function () {\n        var MIN_MOVESPEED = 100;\n        var ms = (self.ability().setMovementSpeed() > 0 ? self.ability().setMovementSpeed() : self.buffs.setMovementSpeed());\n        if (ms > 0) {\n            return ms;\n        }\n        else {\n            var movementSpeedPercent = [self.inventory.getMovementSpeedPercent, self.buffs.itemBuffs.getMovementSpeedPercent].reduce(function (memo, fn) {\n                var obj = fn(memo.excludeList);\n                obj.value += memo.value;\n                return obj;\n            }, {value:0, excludeList:[]});\n            var movementSpeedPercentReduction = [self.enemy().inventory.getMovementSpeedPercentReduction, self.debuffs.itemBuffs.getMovementSpeedPercentReduction].reduce(function (memo, fn) {\n                var obj = fn(memo.excludeList);\n                obj.value += memo.value;\n                return obj;\n            }, {value:0, excludeList:[]});\n            return Math.max(\n                self.enemy().inventory.isSheeped() || self.debuffs.itemBuffs.isSheeped() ? 140 :\n                (self.heroData().movementspeed + self.inventory.getMovementSpeedFlat()+ self.ability().getMovementSpeedFlat()) * \n                (1 //+ self.inventory.getMovementSpeedPercent() \n                   + movementSpeedPercent.value\n                   + movementSpeedPercentReduction.value\n                   + self.ability().getMovementSpeedPercent() \n                   //+ self.enemy().inventory.getMovementSpeedPercentReduction() \n                   + self.enemy().ability().getMovementSpeedPercentReduction() \n                   + self.buffs.getMovementSpeedPercent() \n                   + self.debuffs.getMovementSpeedPercentReduction()\n                   + self.unit().ability().getMovementSpeedPercent() \n                )\n            , MIN_MOVESPEED).toFixed(2);\n        }\n    });\n    self.totalTurnRate = ko.pureComputed(function () {\n        return (self.heroData().movementturnrate \n                * (1 + self.enemy().ability().getTurnRateReduction()\n                     + self.debuffs.getTurnRateReduction())).toFixed(2);\n    });\n    self.baseDamage = ko.pureComputed(function () {\n        var totalAttribute = self.totalAttribute(self.primaryAttribute()),\n            abilityBaseDamage = self.ability().getBaseDamage(),\n            minDamage = self.heroData().attackdamagemin,\n            maxDamage = self.heroData().attackdamagemax;\n        return [Math.floor((minDamage + totalAttribute + abilityBaseDamage.total) * self.ability().getSelfBaseDamageReductionPct() * self.enemy().ability().getBaseDamageReductionPct() * self.debuffs.getBaseDamageReductionPct() * self.debuffs.itemBuffs.getBaseDamageReductionPct() * abilityBaseDamage.multiplier),\n                Math.floor((maxDamage + totalAttribute + abilityBaseDamage.total) * self.ability().getSelfBaseDamageReductionPct() * self.enemy().ability().getBaseDamageReductionPct() * self.debuffs.getBaseDamageReductionPct() * self.debuffs.itemBuffs.getBaseDamageReductionPct() * abilityBaseDamage.multiplier)];\n    });\n    self.baseDamageAvg = ko.pureComputed(function () {\n        return (self.baseDamage()[0] + self.baseDamage()[1]) / 2;\n    });\n    self.baseDamageMin = ko.pureComputed(function () {\n        return self.baseDamage()[0];\n    });\n    self.baseDamageMax = ko.pureComputed(function () {\n        return self.baseDamage()[1];\n    });\n    self.bonusDamage = ko.pureComputed(function () {\n        return ((self.inventory.getBonusDamage().total\n                + self.ability().getBonusDamage().total\n                + self.buffs.getBonusDamage().total\n                + Math.floor((self.baseDamage()[0] + self.baseDamage()[1]) / 2 \n                              * (self.buffs.itemBuffs.getBonusDamagePercent(self.inventory.getBonusDamagePercent()).total\n                                 + self.ability().getBonusDamagePercent().total\n                                 + self.buffs.getBonusDamagePercent().total\n                                )\n                            )\n                + Math.floor(\n                    (self.heroData().attacktype == 'DOTA_UNIT_CAP_RANGED_ATTACK' \n                        ? ((self.heroId() == 'drow_ranger') ? self.ability().getBonusDamagePrecisionAura().total[0] * self.totalAgi() : self.buffs.getBonusDamagePrecisionAura().total[1])\n                        : 0)\n                  )\n                + Math.floor(\n                    ((self.heroId() == 'riki') ? self.ability().getBonusDamageBackstab().total[0] * self.totalAgi() : 0)\n                  )\n                ) * self.ability().getSelfBaseDamageReductionPct()\n                  * self.enemy().ability().getBaseDamageReductionPct()\n                  * self.debuffs.itemBuffs.getBaseDamageReductionPct());\n    });\n    self.bonusDamageReduction = ko.pureComputed(function () {\n        return Math.abs(self.enemy().ability().getBonusDamageReduction() + self.debuffs.getBonusDamageReduction());\n    });\n    self.damageAvg = ko.pureComputed(function () {\n        return (self.baseDamage()[0] + self.baseDamage()[1]) / 2 + self.bonusDamage();\n    });\n    self.damageMin = ko.pureComputed(function () {\n        return self.baseDamage()[0] + self.bonusDamage();\n    });\n    self.damageMax = ko.pureComputed(function () {\n        return self.baseDamage()[1] + self.bonusDamage();\n    });\n    self.damage = ko.pureComputed(function () {\n        return [self.baseDamage()[0] + self.bonusDamage(),\n                self.baseDamage()[1] + self.bonusDamage()];\n    });\n    self.totalMagicResistanceProduct = ko.pureComputed(function () {\n        return (1 - self.heroData().magicalresistance / 100) \n                * self.inventory.getMagicResist()\n                * self.ability().getMagicResist()\n                * self.buffs.getMagicResist()\n                * self.inventory.getMagicResistReductionSelf()\n                * self.enemy().inventory.getMagicResistReduction()\n                * self.enemy().ability().getMagicResistReduction()\n                * self.debuffs.getMagicResistReduction()\n                * self.debuffs.itemBuffs.getMagicResistReduction();\n    });\n    self.totalMagicResistance = ko.pureComputed(function () {\n        return ((1 - self.totalMagicResistanceProduct()) * 100).toFixed(2);\n    });\n    self.bat = ko.pureComputed(function () {\n        var abilityBAT = self.ability().getBAT();\n        if (abilityBAT > 0) {\n            return abilityBAT;\n        }\n        return self.heroData().attackrate;\n    });\n    self.ias = ko.pureComputed(function () {\n        var attackSpeed = [self.inventory.getAttackSpeed, self.buffs.itemBuffs.getAttackSpeed].reduce(function (memo, fn) {\n            var obj = fn(memo.excludeList);\n            obj.value += memo.value;\n            return obj;\n        }, {value:0, excludeList:[]});\n        var attackSpeedReduction = [self.enemy().inventory.getAttackSpeedReduction, self.debuffs.itemBuffs.getAttackSpeedReduction].reduce(function (memo, fn) {\n            var obj = fn(memo.excludeList);\n            obj.value += memo.value;\n            return obj;\n        }, {value:0, excludeList: []});\n        var val = parseFloat(self.totalAgi()) \n                //+ self.inventory.getAttackSpeed() \n                + attackSpeed.value\n                + attackSpeedReduction.value\n                //+ self.enemy().inventory.getAttackSpeedReduction() \n                + self.ability().getAttackSpeed() \n                + self.enemy().ability().getAttackSpeedReduction() \n                + self.buffs.getAttackSpeed() \n                + self.debuffs.getAttackSpeedReduction()\n                + self.unit().ability().getAttackSpeed(); \n        if (val < -80) {\n            return -80;\n        }\n        else if (val > 500) {\n            return 500;\n        }\n        return val.toFixed(2);\n    });\n    self.attackTime = ko.pureComputed(function () {\n        return (self.bat() / (1 + self.ias() / 100)).toFixed(2);\n    });\n    self.attacksPerSecond = ko.pureComputed(function () {\n        return ((1 + self.ias() / 100) / self.bat()).toFixed(2);\n    });\n    self.evasion = ko.pureComputed(function () {\n        if (self.enemy().inventory.isSheeped() || self.debuffs.itemBuffs.isSheeped()) return 0;\n        var e = self.ability().setEvasion();\n        if (e) {\n            return (e * 100).toFixed(2);\n        }\n        else {\n            return ((1-(self.inventory.getEvasion() * self.ability().getEvasion() * self.ability().getEvasionBacktrack() * self.buffs.itemBuffs.getEvasion())) * 100).toFixed(2);\n        }\n    });\n    self.ehpPhysical = ko.pureComputed(function () {\n        var evasion = self.enemy().inventory.isSheeped() || self.debuffs.itemBuffs.isSheeped() ? 1 : self.inventory.getEvasion() * self.ability().getEvasion() * self.buffs.itemBuffs.getEvasion();\n        if (self.totalArmorPhysical() >= 0) {\n            var ehp = self.health() * (1 + .06 * self.totalArmorPhysical());\n        }\n        else {\n            var ehp = self.health() * (1 - .06 * self.totalArmorPhysical()) / (1 - .12 * self.totalArmorPhysical());\n        }\n        ehp /= (1 - (1 - (evasion * self.ability().getEvasionBacktrack())));\n        ehp /= (1 - parseFloat(self.enemy().missChance()) / 100);\n        ehp *= (self.inventory.activeItems().some(function (item) {return item.item == 'mask_of_madness';}) ? (1 / 1.3) : 1);\n        ehp *= (1 / self.ability().getDamageReduction());\n        ehp *= (1 / self.buffs.getDamageReduction());\n        ehp *= (1 / self.enemy().ability().getDamageAmplification());\n        ehp *= (1 / self.debuffs.getDamageAmplification());\n        return ehp.toFixed(2);\n    });\n    self.ehpMagical = ko.pureComputed(function () {\n        var ehp = self.health() / self.totalMagicResistanceProduct();\n        ehp *= (self.inventory.activeItems().some(function (item) {return item.item == 'mask_of_madness';}) ? (1 / 1.3) : 1);\n        ehp *= (1 / self.ability().getDamageReduction());\n        ehp *= (1 / self.buffs.getDamageReduction());\n        ehp *= (1 / self.ability().getEvasionBacktrack());\n        ehp *= (1 / self.enemy().ability().getDamageAmplification());\n        ehp *= (1 / self.debuffs.getDamageAmplification());\n        return ehp.toFixed(2);\n    });\n    self.bash = ko.pureComputed(function () {\n        var attacktype = self.heroData().attacktype;\n        return ((1 - (self.inventory.getBash(attacktype) * self.ability().getBash())) * 100).toFixed(2);\n    });\n    \n    self.critChance = ko.pureComputed(function () {\n        return ((1 - (self.inventory.getCritChance() * self.ability().getCritChance())) * 100).toFixed(2);\n    });\n\n    my.prototype.HeroDamageMixin(self);\n    \n    /*self.critDamage = ko.computed(function () {\n        self.critInfo();\n        return 0;\n    });*/\n    self.missChance = ko.pureComputed(function () {\n        var missDebuff = [self.enemy().inventory.getMissChance, self.debuffs.itemBuffs.getMissChance].reduce(function (memo, fn) {\n            var obj = fn(memo.excludeList);\n            obj.value *= memo.value;\n            return obj;\n        }, {value:1, excludeList:[]});\n        return ((1 - (self.enemy().ability().getMissChance() * self.debuffs.getMissChance() * missDebuff.value)) * 100).toFixed(2);\n    });\n    self.totalattackrange = ko.pureComputed(function () {\n        var attacktype = self.heroData().attacktype;\n        return self.heroData().attackrange + self.ability().getAttackRange() + self.inventory.getAttackRange(attacktype).value;\n    });\n    self.visionrangeday = ko.pureComputed(function () {\n        return (self.heroData().visiondaytimerange) * (1 + self.enemy().ability().getVisionRangePctReduction() + self.debuffs.getVisionRangePctReduction());\n    });\n    self.visionrangenight = ko.pureComputed(function () {\n        return (self.heroData().visionnighttimerange + self.inventory.getVisionRangeNight() + self.ability().getVisionRangeNight()) * (1 + self.enemy().ability().getVisionRangePctReduction() + self.debuffs.getVisionRangePctReduction());\n    });\n    self.lifesteal = ko.pureComputed(function () {\n        var total = self.inventory.getLifesteal() + self.ability().getLifesteal() + self.buffs.getLifesteal();\n        if (self.heroData().attacktype == 'DOTA_UNIT_CAP_MELEE_ATTACK') {\n            var lifestealAura = [self.inventory.getLifestealAura, self.buffs.itemBuffs.getLifestealAura].reduce(function (memo, fn) {\n                var obj = fn(memo.excludeList);\n                obj.value += memo.value;\n                return obj;\n            }, {value: 0, excludeList: []});\n            total += lifestealAura.value;\n        }\n        return (total).toFixed(2);\n    });\n    \n    self.addIllusion = function (data, event) {\n        self.illusions.push(ko.observable(new my.prototype.IllusionViewModel(0, self, self.illusionAbilityLevel())));\n    };\n    \n    self.diffProperties = my.prototype.diffProperties;\n    self.diff = {};\n\n    for (var i = 0; i < self.diffProperties.length; i++) {\n        var index = i;\n        self.diff[self.diffProperties[index]] = self.getDiffFunction(self.diffProperties[index]);\n    }\n};\n\nmy.prototype.HeroModel.prototype.getDiffFunction = function (prop) {\n    var self = this;\n    return ko.computed(function () {\n        if (prop == 'baseDamage') {\n            return [self[prop]()[0] - self.heroCompare()[prop]()[0], self[prop]()[1] - self.heroCompare()[prop]()[1]];\n        }\n        else {\n            return self[prop]() - self.heroCompare()[prop]();\n        }\n    }, this, { deferEvaluation: true });\n}\n\nmy.prototype.HeroModel.prototype.getAbilityLevelMax = function (data) {\n    if (data.abilitytype === 'DOTA_ABILITY_TYPE_ATTRIBUTES') {\n        return 10;\n    }\n    else if (data.name === 'invoker_quas' || data.name === 'invoker_wex' || data.name === 'invoker_exort') {\n        return 7;\n    }\n    else if (data.name === 'invoker_invoke') {\n        return 4;\n    }\n    else if (data.name === 'earth_spirit_stone_caller' || data.name === 'ogre_magi_unrefined_fireblast') {\n        return 1;\n    }\n    else if (data.abilitytype === 'DOTA_ABILITY_TYPE_ULTIMATE' || data.name === 'keeper_of_the_light_recall' ||\n             data.name === 'keeper_of_the_light_blinding_light' || data.name === 'ember_spirit_activate_fire_remnant' ||\n             data.name === 'lone_druid_true_form_battle_cry') {\n        return 3;\n    }\n    else if (data.name === 'puck_ethereal_jaunt'  || data.name === 'shadow_demon_shadow_poison_release' ||\n             data.name === 'templar_assassin_trap' || data.name === 'spectre_reality') {\n        return 0;\n    }\n    else if (data.name === 'invoker_cold_snap'  || data.name === 'invoker_ghost_walk' || data.name === 'invoker_tornado' || \n             data.name === 'invoker_emp' || data.name === 'invoker_alacrity' || data.name === 'invoker_chaos_meteor' || \n             data.name === 'invoker_sun_strike' || data.name === 'invoker_forge_spirit' || data.name === 'invoker_ice_wall' || \n             data.name === 'invoker_deafening_blast') {\n        return 0;\n    }\n    else if (data.name === 'techies_minefield_sign' || data.name === 'techies_focused_detonate') {\n        return 0;\n    }\n    else {\n        return 4;\n    }\n};","'use strict';\nvar ko = require('./herocalc_knockout');\n\nvar my = require(\"./herocalc_core\");\n\nmy.prototype.CloneOption = function (name, displayname, levels, image, level) {\n    this.heroName = ko.computed(function() {\n        return (levels > 0) ? name + (level() <= levels ? level() : 1) : name;\n    });\n    this.heroDisplayName = displayname;\n    this.image = image;\n    this.levels = levels;\n};\n\nmy.prototype.CloneViewModel = function (h,p) {\n    var self = new my.prototype.HeroModel(h);\n    self.parent = p;\n    /*self.selectedHero(my.prototype.findWhere(self.availableHeroes(), {heroName: 'meepo'}));\n    self.hero = ko.computed(function() {\n        return ko.wrap.fromJS(my.prototype.heroData['npc_dota_hero_meepo']);\n    });*/\n    return self;\n}","'use strict';\nvar ko = require('./herocalc_knockout');\n    \nvar my = require(\"./herocalc_core\");\n\nmy.prototype.DamageTypeColor = {\n    'physical': '#979aa2',\n    'pure': 'goldenrod',\n    'magic': '#428bca',\n    'default': '#979aa2'\n}\n\nmy.prototype.HeroDamageMixin = function (self) {\n    self.critInfo = ko.pureComputed(function () {\n        var critSources = self.inventory.getCritSource();\n        my.prototype.extend(critSources, self.ability().getCritSource());\n        my.prototype.extend(critSources, self.buffs.getCritSource());\n        var critSourcesArray = [];\n        for (var prop in critSources) {\n            var el = critSources[prop];\n            el.name = prop\n            critSourcesArray.push(el);\n        }\n        function compareByMultiplier(a,b) {\n            if (a.multiplier < b.multiplier)\n                return 1;\n            if (a.multiplier > b.multiplier)\n                return -1;\n            return 0;\n        }\n\n        critSourcesArray.sort(compareByMultiplier);\n        \n        var result = [];\n        var critTotal = 0;\n        for (var i = 0; i < critSourcesArray.length; i++) {\n            var total = 1;\n            for (var j = 0; j < i; j++) {\n                for (var k = 0; k <critSourcesArray[j].count; k++) {\n                    total *= (1 - critSourcesArray[j].chance);\n                }\n            }\n            var total2 = 1;\n            for (var k = 0; k < critSourcesArray[i].count; k++) {\n                total2 *= (1 - critSourcesArray[i].chance);\n            }\n            total *= (1 - total2);\n            critTotal += total;\n            if (critSourcesArray[i].count > 1) {\n                result.push({\n                    'name':critSourcesArray[i].displayname + ' x' + critSourcesArray[i].count,\n                    'chance':critSourcesArray[i].chance,\n                    'multiplier':critSourcesArray[i].multiplier,\n                    'count':critSourcesArray[i].count,\n                    'totalChance':total\n                });\n            }\n            else {\n                result.push({\n                    'name':critSourcesArray[i].displayname,\n                    'chance':critSourcesArray[i].chance,\n                    'multiplier':critSourcesArray[i].multiplier,\n                    'count':critSourcesArray[i].count,\n                    'totalChance':total\n                });\n            }\n        }\n        return { sources: result, total: critTotal };\n    });\n\n    self.cleaveInfo = ko.pureComputed(function () {\n        var cleaveSources = self.inventory.getCleaveSource();\n        my.prototype.extend(cleaveSources, self.ability().getCleaveSource());\n        my.prototype.extend(cleaveSources, self.buffs.getCleaveSource());\n        var cleaveSourcesArray = [];\n        for (var prop in cleaveSources) {\n            var el = cleaveSources[prop];\n            el.name = prop\n            cleaveSourcesArray.push(el);\n        }\n        function compareByRadius(a,b) {\n            if (a.radius < b.radius)\n                return 1;\n            if (a.radius > b.radius)\n                return -1;\n            return 0;\n        }\n\n        cleaveSourcesArray.sort(compareByRadius);\n        var cleaveSourcesByRadius = {};\n        for (var i = 0; i < cleaveSourcesArray.length; i++) {\n            var total = 0;\n            for (var j = 0; j <cleaveSourcesArray.length; j++) {\n                if (cleaveSourcesArray[j].radius >= cleaveSourcesArray[i].radius) {\n                    total += cleaveSourcesArray[j].magnitude * cleaveSourcesArray[j].count;\n                }\n            }\n            cleaveSourcesByRadius[cleaveSourcesArray[i].radius] = total;\n        }\n        var result = [];\n        for (var prop in cleaveSourcesByRadius) {\n            result.push({\n                'radius':prop,\n                'magnitude':cleaveSourcesByRadius[prop]\n            });\n        }\n        return result;\n    });\n    \n    self.bashInfo = ko.pureComputed(function () {\n        var attacktype = self.heroData().attacktype;\n        var bashSources = self.inventory.getBashSource(attacktype);\n        my.prototype.extend(bashSources, self.ability().getBashSource());\n        var bashSourcesArray = [];\n        for (var prop in bashSources) {\n            var el = bashSources[prop];\n            el.name = prop\n            bashSourcesArray.push(el);\n        }\n        function compareByDuration(a, b) {\n            if (a.duration < b.duration)\n                return 1;\n            if (a.duration > b.duration)\n                return -1;\n            return 0;\n        }\n\n        //bashSourcesArray.sort(compareByDuration);\n        \n        var result = [];\n        var bashTotal = 0;\n        for (var i = 0;i < bashSourcesArray.length; i++) {\n            var total = 1;\n            for (var j = 0; j < i; j++) {\n                for (var k = 0; k < bashSourcesArray[j].count; k++) {\n                    total *= (1 - bashSourcesArray[j].chance);\n                }\n            }\n            var total2 = 1;\n            for (var k = 0; k < bashSourcesArray[i].count; k++) {\n                total2 *= (1 - bashSourcesArray[i].chance);\n            }\n            total *= (1 - total2);\n            bashTotal += total;\n            if (bashSourcesArray[i].name === 'spirit_breaker_greater_bash') {\n                var d = bashSourcesArray[i].damage * self.totalMovementSpeed();\n            }\n            else {\n                var d = bashSourcesArray[i].damage;\n            }\n            if (bashSourcesArray[i].count > 1) {\n                result.push({\n                    'name':bashSourcesArray[i].displayname, // + ' x' + bashSourcesArray[i].count,\n                    'chance':bashSourcesArray[i].chance,\n                    'damage':d,\n                    'count':bashSourcesArray[i].count,\n                    'damageType':bashSourcesArray[i].damageType,\n                    'totalChance':total\n                });\n            }\n            else {\n                result.push({\n                    'name':bashSourcesArray[i].displayname,\n                    'chance':bashSourcesArray[i].chance,\n                    'damage':d,\n                    'count':bashSourcesArray[i].count,\n                    'damageType':bashSourcesArray[i].damageType,\n                    'totalChance':total\n                });\n            }\n\n        }\n        return { sources: result, total: bashTotal };\n    });\n    \n    self.orbProcInfo = ko.pureComputed(function () {\n        var attacktype = self.heroData().attacktype;\n        var damageSources = self.inventory.getOrbProcSource();\n        var damageSourcesArray = [];\n        for (var prop in damageSources) {\n            var el = damageSources[prop];\n            el.name = prop\n            damageSourcesArray.push(el);\n        }\n        function compareByDamage(a, b) {\n            if (a.priority > b.priority) {\n                return 1;\n            }\n            if (a.priority < b.priority) {\n                return -1;\n            }\n            if (a.damage < b.damage)\n                return 1;\n            if (a.damage > b.damage)\n                return -1;\n            return 0;\n        }\n\n        damageSourcesArray.sort(compareByDamage);\n        \n        var result = [];\n        var damageTotal = 0;\n        for (var i=0 ; i < damageSourcesArray.length; i++) {\n            var total = 1;\n            for (var j = 0; j < i; j++) {\n                for (var k = 0; k < damageSourcesArray[j].count; k++) {\n                    total *= (1 - damageSourcesArray[j].chance);\n                }\n            }\n            var total2 = 1;\n            for (var k = 0; k < damageSourcesArray[i].count; k++) {\n                total2 *= (1 - damageSourcesArray[i].chance);\n            }\n            total *= (1 - total2);\n            damageTotal += total;\n            if (damageSourcesArray[i].count > 1) {\n                result.push({\n                    'name':damageSourcesArray[i].displayname + ' x' + damageSourcesArray[i].count,\n                    'chance':damageSourcesArray[i].chance,\n                    'damage':damageSourcesArray[i].damage,\n                    'count':damageSourcesArray[i].count,\n                    'damageType':damageSourcesArray[i].damageType,\n                    'totalChance':total\n                });\n            }\n            else {\n                result.push({\n                    'name':damageSourcesArray[i].displayname,\n                    'chance':damageSourcesArray[i].chance,\n                    'damage':damageSourcesArray[i].damage,\n                    'count':damageSourcesArray[i].count,\n                    'damageType':damageSourcesArray[i].damageType,\n                    'totalChance':total\n                });\n            }\n        }\n        return { sources: result, total: damageTotal };\n    });\n    \n    self.getReducedDamage = function (value, type) {\n        var result = value;\n        switch (type) {\n            case 'physical':\n                result = value * (1 - (0.06 * self.enemy().totalArmorPhysical()) / (1 + 0.06 * Math.abs(self.enemy().totalArmorPhysical())));\n            break;\n            case 'magic':\n                result = value * (1 - self.enemy().totalMagicResistance() / 100);\n            break;\n            case 'pure':\n                result = value;\n            break;\n            case 'composite':\n                result = value * (1 - (0.06 * self.enemy().totalArmorPhysical()) / (1 + 0.06 * Math.abs(self.enemy().totalArmorPhysical())));\n                result *= (1 - self.enemy().totalMagicResistance() / 100);\n            break;\n        }\n        result *= self.ability().getDamageAmplification() * self.debuffs.getDamageAmplification();\n        result *= self.enemy().ability().getDamageReduction() * self.enemy().buffs.getDamageReduction();\n        return result;\n    }\n    \n    self.damageTotalInfo = ko.pureComputed(function () {\n        var bonusDamageArray = [\n            self.ability().getBonusDamage().sources,\n            self.buffs.getBonusDamage().sources\n        ],\n        bonusDamagePctArray = [\n            self.ability().getBonusDamagePercent().sources,\n            self.buffs.getBonusDamagePercent().sources\n        ],\n        itemBonusDamage = self.inventory.getBonusDamage().sources,\n        itemBonusDamagePct = self.buffs.itemBuffs.getBonusDamagePercent(self.inventory.getBonusDamagePercent()).sources,\n        critSources = self.critInfo(),\n        abilityOrbSources = self.ability().getOrbSource(),\n        itemOrbSources = self.inventory.getOrbSource(),\n        itemProcOrbSources = self.orbProcInfo(),\n        bashSources = self.bashInfo(),\n        \n        attackSources = [];\n        \n        attackSources.push({\n            name: 'Base Attack',\n            cooldown: 1\n        });\n        \n        // weaver_geminate_attack\n        if (self.heroId() === 'weaver') {\n            var a = self.ability().abilities().find(function (ability) {\n                return ability.name === 'weaver_geminate_attack';\n            });\n            if (a) {\n                if (a.level() > 0) {\n                    var cd = a.cooldown[a.level() - 1];\n                    attackSources.push({\n                        name: a.displayname,\n                        cooldown: (1/cd)\n                    });\n                }\n            }\n        }\n        \n        // echo_sabre\n        var item = self.inventory.items().find(function (o) { return o.item === \"echo_sabre\" && o.enabled(); });\n        if (item && self.heroData().attacktype === 'DOTA_UNIT_CAP_MELEE_ATTACK') {\n            var item_echo_sabre = my.prototype.itemData['item_echo_sabre'];\n            attackSources.push({\n                name: item_echo_sabre.displayname,\n                cooldown: (1/item_echo_sabre.cooldown)\n            });\n        }\n\n        var attacks = attackSources.map(function (a) {\n            var baseDamage = (self.baseDamage()[0] + self.baseDamage()[1]) / 2,\n            totalDamage = 0,\n            totalCritableDamage = 0,\n            totalCrit = 0,\n            geminateAttack = { damage: 0, damageReduced: 0, cooldown: 6, active: false },\n            echoSabreAttack = { damage: 0, damageReduced: 0, cooldown: my.prototype.itemData['item_echo_sabre'].cooldown[0], active: false },\n            damage = {\n                pure: 0,\n                physical: 0,\n                magic: 0\n            },\n            result = [],\n            crits = [];\n            \n            // base damage\n            result.push({\n                name: 'Base Damage',\n                damage: baseDamage,\n                damageType: 'physical',\n                damageReduced: self.getReducedDamage(baseDamage, 'physical'),\n                enabled: ko.observable(true)\n            });\n            totalDamage += baseDamage;\n            totalCritableDamage += baseDamage;\n            damage.physical += baseDamage;\n            \n            // bonus damage from items\n            for (i in itemBonusDamage) {\n                var d = itemBonusDamage[i].damage*itemBonusDamage[i].count * self.ability().getSelfBaseDamageReductionPct() * self.enemy().ability().getBaseDamageReductionPct() * self.debuffs.itemBuffs.getBaseDamageReductionPct();\n                result.push({\n                    name: itemBonusDamage[i].displayname + (itemBonusDamage[i].count > 1 ? ' x' + itemBonusDamage[i].count : ''),\n                    damage: d,\n                    damageType: itemBonusDamage[i].damageType,\n                    damageReduced: self.getReducedDamage(d, itemBonusDamage[i].damageType),\n                    enabled: ko.observable(true)\n                });\n                totalDamage += d;\n                totalCritableDamage += d;\n                damage[itemBonusDamage[i].damageType] += d;\n            }\n\n            // bonus damage percent from items\n            for (i in itemBonusDamagePct) {\n                var d = baseDamage * itemBonusDamagePct[i].damage;\n                result.push({\n                    name: itemBonusDamagePct[i].displayname,\n                    damage: d,\n                    damageType: itemBonusDamagePct[i].damageType,\n                    damageReduced: self.getReducedDamage(d, itemBonusDamagePct[i].damageType),\n                    enabled: ko.observable(true)\n                });\n                totalDamage += d;\n                totalCritableDamage += d;\n                damage[itemBonusDamagePct[i].damageType] += d;\n            }\n            \n            // bonus damage from abilities and buffs\n            for (var i = 0; i < bonusDamageArray.length; i++) {\n                for (j in bonusDamageArray[i]) {\n                    var d = bonusDamageArray[i][j].damage;\n                    result.push({\n                        name: bonusDamageArray[i][j].displayname,\n                        damage: d,\n                        damageType: bonusDamageArray[i][j].damageType,\n                        damageReduced: self.getReducedDamage(d, bonusDamageArray[i][j].damageType),\n                        enabled: ko.observable(true)\n                    });\n                    totalDamage += d;\n                    totalCritableDamage += d;\n                    damage[bonusDamageArray[i][j].damageType] += d;\n                }\n            }\n            \n            // bonus damage percent from abilities and buffs\n            for (var i = 0; i < bonusDamagePctArray.length; i++) {\n                for (j in bonusDamagePctArray[i]) {\n                    var d = baseDamage * bonusDamagePctArray[i][j].damage;\n                    result.push({\n                        name: bonusDamagePctArray[i][j].displayname,\n                        damage: d,\n                        damageType: bonusDamagePctArray[i][j].damageType,\n                        damageReduced: self.getReducedDamage(d, bonusDamagePctArray[i][j].damageType),\n                        enabled: ko.observable(true)\n                    });\n                    totalDamage += d;\n                    totalCritableDamage += d;\n                    damage[bonusDamagePctArray[i][j].damageType] += d;\n                }\n            }\n            // drow_ranger_trueshot\n            if (self.heroData().attacktype === 'DOTA_UNIT_CAP_RANGED_ATTACK') {\n                if (self.heroId() === 'drow_ranger') {\n                    var s = self.ability().getBonusDamagePrecisionAura().sources;\n                    var index = 0;\n                }\n                else {\n                    var s = self.buffs.getBonusDamagePrecisionAura().sources;\n                    var index = 1;\n                }\n                if (s[index] != undefined) {\n                    if (self.heroId() === 'drow_ranger') {\n                        var d = s[index].damage * self.totalAgi();\n                    }\n                    else {\n                        var d = s[index].damage;\n                    }\n                    result.push({\n                        name: s[index].displayname,\n                        damage: d,\n                        damageType: 'physical',\n                        damageReduced: self.getReducedDamage(d, 'physical'),\n                        enabled: ko.observable(true)\n                    });\n                    totalDamage += d;\n                    totalCritableDamage += d;\n                    damage.physical += d;                    \n                }\n            }\n            \n            // riki_backstab\n            if (self.heroId() === 'riki') {\n                var s = self.ability().getBonusDamageBackstab().sources;\n                var index = 0;\n            }\n            else {\n                var s = self.buffs.getBonusDamageBackstab().sources;\n                var index = 1;\n            }\n            if (s[index] != undefined) {\n                if (self.heroId() === 'riki') {\n                    var d = s[index].damage * self.totalAgi();\n                }\n                else {\n                    var d = s[index].damage;\n                }\n                result.push({\n                    name: s[index].displayname,\n                    damage: d,\n                    damageType: 'physical',\n                    damageReduced: self.getReducedDamage(d, 'physical'),\n                    enabled: ko.observable(true)\n                });\n                totalDamage += d;\n                //totalCritableDamage += d;\n                damage.physical += d;                    \n            }\n\n            // bash damage\n            for (var i = 0; i < bashSources.sources.length; i++) {\n                var o = bashSources.sources[i];\n                var d = bashSources.sources[i].damage;\n                var cd = self.attacksPerSecond();\n                if (o.cooldown) {\n                    cd = Math.max(1/o.cooldown, cd);\n                }\n                for (var j = 0; j < bashSources.sources[i].count; j++) {\n                    result.push({\n                        name: bashSources.sources[i].name,\n                        damage: d,\n                        damageType: bashSources.sources[i].damageType,\n                        damageReduced: self.getReducedDamage(d, bashSources.sources[i].damageType),\n                        dps: d * cd * bashSources.sources[i].chance,\n                        dpsReduced: self.getReducedDamage(d, bashSources.sources[i].damageType) * cd * bashSources.sources[i].chance,\n                        enabled: ko.observable(true)\n                    });\n                    totalDamage += d;\n                    damage[bashSources.sources[i].damageType] += d;\n                }\n\n            }\n            \n            // %-based orbs\n            for (var i = 0; i < itemProcOrbSources.sources.length; i++) {\n                var d = itemProcOrbSources.sources[i].damage * (1 - Math.pow(1 - itemProcOrbSources.sources[i].chance, itemProcOrbSources.sources[i].count));\n                result.push({\n                    name: itemProcOrbSources.sources[i].name,\n                    damage: d,\n                    damageType: itemProcOrbSources.sources[i].damageType,\n                    damageReduced: self.getReducedDamage(d, itemProcOrbSources.sources[i].damageType),\n                    enabled: ko.observable(true)\n                });\n                totalDamage += d;\n                damage[itemProcOrbSources.sources[i].damageType] += d;\n            }\n            \n            // ability orbs\n            for (var orb in abilityOrbSources) {\n                var d = abilityOrbSources[orb].damage * (1 - itemProcOrbSources.total);\n                result.push({\n                    name: abilityOrbSources[orb].displayname,\n                    damage: d,\n                    damageType: abilityOrbSources[orb].damageType,\n                    damageReduced: self.getReducedDamage(d, abilityOrbSources[orb].damageType),\n                    enabled: ko.observable(true)\n                });\n                totalDamage += d;\n                damage[abilityOrbSources[orb].damageType] += d;\n            }\n            \n            // item orbs\n            if (Object.keys(abilityOrbSources).length === 0) {\n                for (var orb in itemOrbSources) {\n                    var d = itemOrbSources[orb].damage * (1 - itemProcOrbSources.total);\n                    result.push({\n                        name: itemOrbSources[orb].displayname,\n                        damage: d,\n                        damageType: itemOrbSources[orb].damageType,\n                        damageReduced: self.getReducedDamage(d, itemOrbSources[orb].damageType),\n                        enabled: ko.observable(true)\n                    });\n                    totalDamage += d;\n                    damage[itemOrbSources[orb].damageType] += d;\n                }            \n            }\n            \n            // crit damage\n            for (var i = 0; i < critSources.sources.length; i++) {\n                var d = totalCritableDamage * (critSources.sources[i].multiplier - 1);// * critSources.sources[i].totalChance;\n                crits.push({\n                    name: critSources.sources[i].name + ', ' + critSources.sources[i].multiplier + 'x, ' + (critSources.sources[i].totalChance * 100).toFixed(1) + '%',\n                    damage: d,\n                    damageType: 'physical',\n                    damageReduced: self.getReducedDamage(d, 'physical'),\n                    enabled: ko.observable(true),\n                    chance: critSources.sources[i].totalChance\n                });\n                totalCrit += d;\n            }\n\n            var totalReduced = self.getReducedDamage(damage.pure, 'pure') \n                    + self.getReducedDamage(damage.physical, 'physical')\n                    + self.getReducedDamage(damage.magic, 'magic'),\n                totalCritReduced = self.getReducedDamage(totalCrit, 'physical'),\n                dps = {\n                    base: totalDamage * self.attacksPerSecond(),\n                    crit: totalCrit * self.attacksPerSecond(),\n                    geminateAttack: geminateAttack.active ? geminateAttack.damage / geminateAttack.cooldown : 0,\n                    reduced: {\n                        base: totalReduced * self.attacksPerSecond(),\n                        crit: totalCritReduced * self.attacksPerSecond(),\n                        geminateAttack: geminateAttack.active ? self.getReducedDamage(geminateAttack.damage, 'physical') / geminateAttack.cooldown : 0,\n                    }\n                }\n                \n            crits.forEach(function (o) {\n                if (!o.dps) {\n                    o.dps = o.damage * (o.cooldown || self.attacksPerSecond()) * o.chance;\n                }\n                if (!o.dpsReduced) {\n                    o.dpsReduced = o.damageReduced * (o.cooldown || self.attacksPerSecond()) * o.chance;\n                }\n            });\n                \n            result.forEach(function (o) {\n                if (!o.dps) {\n                    o.dps = o.damage * (o.cooldown || self.attacksPerSecond());\n                }\n                if (!o.dpsReduced) {\n                    o.dpsReduced = o.damageReduced * (o.cooldown || self.attacksPerSecond());\n                }\n            });\n            \n            var totalCritChance = crits.reduce(function (memo, o) { return memo + o.chance }, 0);\n                \n            var t1Crit = ko.computed(function () {\n                var c = crits.find(function (o) { return o.enabled(); });\n                return c ? c.damage : 0;\n            });\n            var t2Crit = ko.computed(function () {\n                var c = crits.find(function (o) { return o.enabled(); });\n                return c ? c.damageReduced : 0;\n            });\n            var t3Crit = ko.computed(function () {\n                return crits.filter(function (o) { return o.enabled(); }).reduce(function (memo, o) { return memo + o.dps }, 0);\n            });\n            var t4Crit = ko.computed(function () {\n                return crits.filter(function (o) { return o.enabled(); }).reduce(function (memo, o) { return memo + o.dpsReduced }, 0);\n            });\n                \n            var t1 = ko.computed(function () {\n                return result.filter(function (o) { return o.enabled(); }).reduce(function (memo, o) { return memo + o.damage }, 0) + t1Crit();\n            });\n            var t2 = ko.computed(function () {\n                return result.filter(function (o) { return o.enabled(); }).reduce(function (memo, o) { return memo + o.damageReduced }, 0) + t2Crit();\n            });\n            var t3 = ko.computed(function () {\n                return (result.filter(function (o) { return o.enabled(); }).reduce(function (memo, o) { return memo + o.dps }, 0) + t3Crit()) * a.cooldown;\n            });\n            var t4 = ko.computed(function () {\n                return (result.filter(function (o) { return o.enabled(); }).reduce(function (memo, o) { return memo + o.dpsReduced }, 0) + t4Crit()) * a.cooldown;\n            });\n            \n            var totalCritRow = [t1Crit, t2Crit, t3Crit, t4Crit];\n            \n            var totalRow = [t1, t2, t3, t4];\n\n            return {\n                name: a.name + ' Subtotal',\n                cooldown: a.cooldown,\n                enabled: ko.observable(true),\n                visible: ko.observable(true),\n                totalCritChance: totalCritChance,\n                totalCritRow: totalCritRow,\n                totalRow: totalRow,\n                sources: result,\n                sourcesCrit: crits,\n                total: totalDamage,\n                totalCrit: totalCrit,\n                totalGeminateAttack: totalDamage + geminateAttack.damage,\n                totalGeminateAttackReduced: totalReduced + geminateAttack.damageReduced,\n                geminateAttack: geminateAttack,\n                totalCritReduced: totalCritReduced,\n                totalReduced: totalReduced,\n                sumTotal: totalDamage + totalCrit,\n                sumTotalReduced: totalReduced + totalCritReduced,\n                dps: {\n                    base: dps.base,\n                    crit: dps.base + dps.crit,\n                    geminateAttack: dps.base + dps.geminateAttack,\n                    total: dps.base + dps.crit + dps.geminateAttack,\n                    reduced: {\n                        base: dps.reduced.base,\n                        crit: dps.reduced.base + dps.reduced.crit,\n                        geminateAttack: dps.reduced.base + dps.reduced.geminateAttack,\n                        total: dps.reduced.base + dps.reduced.crit + dps.reduced.geminateAttack\n                    }\n                }\n            };\n        });\n        \n        var t1 = ko.computed(function () {\n            return attacks.filter(function (o) { return o.enabled(); }).reduce(function (memo, o) { return memo + o.totalRow[0]() }, 0);\n        });\n        var t2 = ko.computed(function () {\n            return attacks.filter(function (o) { return o.enabled(); }).reduce(function (memo, o) { return memo + o.totalRow[1]() }, 0);\n        });\n        var t3 = ko.computed(function () {\n            return attacks.filter(function (o) { return o.enabled(); }).reduce(function (memo, o) { return memo + o.totalRow[2]() }, 0);\n        });\n        var t4 = ko.computed(function () {\n            return attacks.filter(function (o) { return o.enabled(); }).reduce(function (memo, o) { return memo + o.totalRow[3]() }, 0);\n        });\n            \n        return {\n            attacks: attacks,\n            totalRow: [t1, t2, t3, t4]\n        }\n    });\n    \n    self.getDamageTypeColor = function (damageType) {\n        return my.prototype.DamageTypeColor[damageType] || my.prototype.DamageTypeColor['default'];\n    }\n    \n}","'use strict';\nvar ko = require('./herocalc_knockout');\nvar my = require(\"./herocalc_core\");\n\nmy.prototype.stackableItems = ['clarity','flask','dust','ward_observer','ward_sentry','tango','tpscroll','smoke_of_deceit'],\nmy.prototype.levelitems = ['necronomicon','dagon','diffusal_blade','travel_boots'],\nmy.prototype.validItems = [\"abyssal_blade\",\"ultimate_scepter\",\"courier\",\"arcane_boots\",\"armlet\",\"assault\",\"boots_of_elves\",\"bfury\",\"belt_of_strength\",\"black_king_bar\",\"blade_mail\",\"blade_of_alacrity\",\"blades_of_attack\",\"blink\",\"bloodstone\",\"boots\",\"travel_boots\",\"bottle\",\"bracer\",\"broadsword\",\"buckler\",\"butterfly\",\"chainmail\",\"circlet\",\"clarity\",\"claymore\",\"cloak\",\"lesser_crit\",\"greater_crit\",\"dagon\",\"demon_edge\",\"desolator\",\"diffusal_blade\",\"rapier\",\"ancient_janggo\",\"dust\",\"eagle\",\"energy_booster\",\"ethereal_blade\",\"cyclone\",\"skadi\",\"flying_courier\",\"force_staff\",\"gauntlets\",\"gem\",\"ghost\",\"gloves\",\"hand_of_midas\",\"headdress\",\"flask\",\"heart\",\"heavens_halberd\",\"helm_of_iron_will\",\"helm_of_the_dominator\",\"hood_of_defiance\",\"hyperstone\",\"branches\",\"javelin\",\"sphere\",\"maelstrom\",\"magic_stick\",\"magic_wand\",\"manta\",\"mantle\",\"mask_of_madness\",\"medallion_of_courage\",\"mekansm\",\"mithril_hammer\",\"mjollnir\",\"monkey_king_bar\",\"lifesteal\",\"mystic_staff\",\"necronomicon\",\"null_talisman\",\"oblivion_staff\",\"ward_observer\",\"ogre_axe\",\"orb_of_venom\",\"orchid\",\"pers\",\"phase_boots\",\"pipe\",\"platemail\",\"point_booster\",\"poor_mans_shield\",\"power_treads\",\"quarterstaff\",\"quelling_blade\",\"radiance\",\"reaver\",\"refresher\",\"ring_of_aquila\",\"ring_of_basilius\",\"ring_of_health\",\"ring_of_protection\",\"ring_of_regen\",\"robe\",\"rod_of_atos\",\"relic\",\"sobi_mask\",\"sange\",\"sange_and_yasha\",\"satanic\",\"sheepstick\",\"ward_sentry\",\"shadow_amulet\",\"invis_sword\",\"shivas_guard\",\"basher\",\"slippers\",\"smoke_of_deceit\",\"soul_booster\",\"soul_ring\",\"staff_of_wizardry\",\"stout_shield\",\"talisman_of_evasion\",\"tango\",\"tpscroll\",\"tranquil_boots\",\"ultimate_orb\",\"urn_of_shadows\",\"vanguard\",\"veil_of_discord\",\"vitality_booster\",\"vladmir\",\"void_stone\",\"wraith_band\",\"yasha\",\"crimson_guard\",\"enchanted_mango\",\"lotus_orb\",\"glimmer_cape\",\"guardian_greaves\",\"moon_shard\",\"silver_edge\",\"solar_crest\",\"octarine_core\",\"aether_lens\",\"faerie_fire\",\"iron_talon\",\"dragon_lance\",\"echo_sabre\",\"infused_raindrop\",\"blight_stone\",\"wind_lace\",\"tome_of_knowledge\",\"bloodthorn\",\"hurricane_pike\"],\nmy.prototype.itemsWithActive = ['solar_crest', 'heart','smoke_of_deceit','dust','ghost','tranquil_boots','phase_boots','power_treads','buckler','medallion_of_courage','ancient_janggo','mekansm','pipe','veil_of_discord','rod_of_atos','orchid','sheepstick','armlet','invis_sword','ethereal_blade','shivas_guard','manta','mask_of_madness','diffusal_blade','mjollnir','satanic','ring_of_basilius','ring_of_aquila', 'butterfly', 'moon_shard', 'silver_edge','bloodthorn','hurricane_pike'];\n\nmy.prototype.ItemInput = function (value, name, debuff) {\n    if (my.prototype.itemData['item_' + value].ItemAliases instanceof Array) {\n        var itemAlias = my.prototype.itemData['item_' + value].ItemAliases.join(' ');\n    }\n    else {\n        var itemAlias = my.prototype.itemData['item_' + value].ItemAliases;\n    }\n    this.value = ko.observable(value);\n    this.debuff = ko.observable(debuff);\n    if (this.debuff()) {\n        this.value = ko.observable(value + '|' + debuff.id);\n        this.name = ko.observable(name + ' (' + debuff.name + ')');\n        this.displayname = ko.observable(name + ' (' + debuff.name + ') <span style=\"display:none\">' + ';' + itemAlias + '</span>');\n    }\n    else {\n        this.value = ko.observable(value);\n        this.name = ko.observable(name);\n        this.displayname = ko.observable(name + ' <span style=\"display:none\">' + ';' + itemAlias + '</span>');\n    }\n};\n\nmy.prototype.BasicInventoryViewModel = function (h) {\n    var self = this;\n    self.items = ko.observableArray([]);\n    self.activeItems = ko.observableArray([]);\n    self.addItem = function (data, event) {\n        if (data.selectedItem() != undefined) {\n            var new_item = {\n                item: data.selectedItem().split('|')[0],\n                state: ko.observable(0),\n                size: data.itemInputValue(),\n                enabled: ko.observable(true)\n            }\n            switch (new_item.item) {\n                case 'dagon':\n                    new_item.size = Math.min(new_item.size, 5);\n                break;\n                break;\n                case 'travel_boots':\n                case 'diffusal_blade':\n                    new_item.size = Math.min(new_item.size, 2);\n                break;\n                case 'necronomicon':\n                    new_item.size = Math.min(new_item.size, 3);\n                break;\n            }\n            self.items.push(new_item);\n            if (data.selectedItem() === 'ring_of_aquila' || data.selectedItem() === 'ring_of_basilius' || data.selectedItem() === 'heart') {\n                self.toggleItem(undefined, new_item, undefined);\n            }\n        }\n    };\n    self.toggleItem = function (index, data, event) {\n        if (my.prototype.itemsWithActive.indexOf(data.item) >= 0) {\n            if (self.activeItems.indexOf(data) < 0) {\n                self.activeItems.push(data);\n            }\n            else {\n                self.activeItems.remove(data);\n            }\n            switch (data.item) {\n                case 'power_treads':\n                    if (data.state() < 2) {\n                        data.state(data.state() + 1);\n                    }\n                    else {\n                        data.state(0);\n                    }                \n                break;\n                default:\n                    if (data.state() == 0) {\n                        data.state(1);\n                    }\n                    else {\n                        data.state(0);\n                    }                \n                break;\n            }\n        }\n    }.bind(this);\n    self.removeItem = function (item) {\n        self.activeItems.remove(item);\n        self.items.remove(item);\n    }.bind(this);\n    self.toggleMuteItem = function (item) {\n        item.enabled(!item.enabled());\n    }.bind(this);      \n    self.removeAll = function () {\n        self.activeItems.removeAll();\n        self.items.removeAll();\n    }.bind(this);\n}\nmy.prototype.BasicInventoryViewModel.prototype.getItemImage = function (data) {\n    var state = ko.utils.unwrapObservable(data.state);\n    switch (data.item) {\n        case 'power_treads':\n            if (state == 0) {\n                return '/media/images/items/' + data.item + '_str.png';\n            }\n            else if (state == 1) {\n                return '/media/images/items/' + data.item + '_int.png';\n            }\n            else {\n                return '/media/images/items/' + data.item + '_agi.png';\n            }\n        break;\n        case 'tranquil_boots':\n        case 'ring_of_basilius':\n            if (state == 0) {\n                return '/media/images/items/' + data.item + '.png';\n            }\n            else {\n                return '/media/images/items/' + data.item + '_active.png';\n            }\n        break;\n        case 'armlet':\n            if (state == 0) {\n                return '/media/images/items/' + data.item + '.png';\n            }\n            else {\n                return '/media/images/items/' + data.item + '_active.png';\n            }\n        break;\n        case 'ring_of_aquila':\n            if (state == 0) {\n                return '/media/images/items/' + data.item + '_active.png';\n            }\n            else {\n                return '/media/images/items/' + data.item + '.png';\n            }\n        break;\n        case 'dagon':\n        case 'diffusal_blade':\n        case 'travel_boots':\n        case 'necronomicon':\n            if (data.size > 1) {\n                return '/media/images/items/' + data.item + '_' + data.size + '.png';\n            }\n            else {\n                return '/media/images/items/' + data.item + '.png';\n            }\n        break;\n        default:\n            return '/media/images/items/' + data.item + '.png';            \n        break;\n    }\n};\nmy.prototype.BasicInventoryViewModel.prototype.getItemSizeLabel = function (data) {\n    if (my.prototype.stackableItems.indexOf(data.item) != -1) {\n        return '<span style=\"font-size:10px\">Qty: </span>' + data.size;\n    }\n    else if (my.prototype.levelitems.indexOf(data.item) != -1) {\n        return '<span style=\"font-size:10px\">Lvl: </span>' + data.size;\n    }\n    else if (data.item == 'bloodstone') {\n        return '<span style=\"font-size:10px\">Charges: </span>' + data.size;\n    }\n    else {\n        return '';\n    }\n};\nmy.prototype.BasicInventoryViewModel.prototype.getActiveBorder = function (data) {\n    switch (data.item) {\n        case 'power_treads':\n        case 'tranquil_boots':\n        case 'ring_of_basilius':\n        case 'ring_of_aquila':\n        case 'armlet':\n            return 0;\n        break;\n        default:\n            return ko.utils.unwrapObservable(data.state);    \n        break;\n    }\n}\nmy.prototype.BasicInventoryViewModel.prototype.getItemAttributeValue = function (attributes, attributeName, level) {\n    for (var i = 0; i < attributes.length; i++) {\n        if (attributes[i].name == attributeName) {\n            if (level == 0) {\n                return parseFloat(attributes[i].value[0]);\n            }\n            else if (level > attributes[i].value.length) {\n                return parseFloat(attributes[i].value[0]);\n            }\n            else {\n                return parseFloat(attributes[i].value[level - 1]);\n            }\n        }\n    }\n}\n\nmy.prototype.InventoryViewModel = function (h) {\n    var self = new my.prototype.BasicInventoryViewModel();\n    self.hero = h;\n    self.hasInventory = ko.observable(true);\n    self.items = ko.observableArray([]);\n    self.activeItems = ko.observableArray([]);\n    self.hasScepter = ko.computed(function () {\n        for (var i = 0; i < self.items().length; i++) {\n            var item = self.items()[i].item;\n            if (item === 'ultimate_scepter' && self.items()[i].enabled()) {\n                return true;\n            }\n            \n        }\n        return false;\n    }, this);\n    self.isEthereal = ko.computed(function () {\n        for (var i = 0; i < self.items().length; i++) {\n            var item = self.items()[i].item;\n            var isActive = self.activeItems.indexOf(self.items()[i]) >= 0 ? true : false;\n            if ((item === 'ghost' || item === 'ethereal_blade') && self.items()[i].enabled() && isActive) {\n                return true;\n            }\n        }\n        return false;\n    }, this);\n    self.isSheeped = ko.computed(function () {\n        for (var i = 0; i < self.items().length; i++) {\n            var item = self.items()[i].item;\n            var isActive = self.activeItems.indexOf(self.items()[i]) >= 0 ? true : false;\n            if (item === 'sheepstick' && self.items()[i].enabled() && isActive) {\n                return true;\n            }\n        }\n        return false;\n    }, this);\n    self.totalCost = ko.computed(function () {\n        var c = 0;\n        for (var i = 0; i < self.items().length; i++) {\n            var item = self.items()[i].item;\n            if (!self.items()[i].enabled()) continue;\n            if (my.prototype.stackableItems.indexOf(item) != -1) {\n                c += my.prototype.itemData['item_' + item].itemcost * self.items()[i].size;\n            }\n            else if (my.prototype.levelitems.indexOf(item) != -1) {\n                switch(item) {\n                    case 'diffusal_blade':\n                        c += my.prototype.itemData['item_' + item].itemcost + (self.items()[i].size - 1) * 700;\n                    break;\n                    case 'necronomicon':\n                    case 'dagon':\n                        c += my.prototype.itemData['item_' + item].itemcost + (self.items()[i].size - 1) * 1250;\n                    break;\n                    default:\n                        c += my.prototype.itemData['item_' + item].itemcost;\n                    break;\n                }\n            }\n            else {\n                c += my.prototype.itemData['item_' + item].itemcost;\n            }\n            \n        }\n        return c;\n    }, this);\n    self.addItemBuff = function (data, event) {\n        if (self.hasInventory() && self.selectedItemBuff() != undefined) {\n            var new_item = {\n                item: self.selectedItemBuff(),\n                state: ko.observable(0),\n                size: 1,\n                enabled: ko.observable(true)\n            }\n            self.items.push(new_item);\n            if (self.selectedItemBuff() === 'ring_of_aquila' || self.selectedItemBuff() === 'ring_of_basilius') {\n                self.toggleItem(undefined, new_item, undefined);\n            }\n        }\n    };\n    self.addItemDebuff = function (data, event) {\n        if (self.hasInventory() && self.selectedItemDebuff() != undefined) {\n            var new_item = {\n                item: self.selectedItemDebuff().split('|')[0],\n                state: ko.observable(0),\n                size: 1,\n                enabled: ko.observable(true)\n            }\n            if (self.selectedItemDebuff().split('|').length == 2) {\n                new_item.debuff = self.selectedItemDebuff().split('|')[1]\n            }\n            self.items.push(new_item);\n            if (self.selectedItemDebuff() === 'ring_of_aquila' || self.selectedItemDebuff() === 'ring_of_basilius') {\n                self.toggleItem(undefined, new_item, undefined);\n            }\n        }\n    };\n    \n    self.getAttributes = function (attributetype) {\n        var totalAttribute = 0;\n        for (var i = 0; i < self.items().length; i++) {\n            var item = self.items()[i].item;\n            var isActive = self.activeItems.indexOf(self.items()[i]) >= 0 ? true : false;\n            if (!self.items()[i].enabled()) continue;\n            var size = self.items()[i].size;\n            for (var j = 0; j < my.prototype.itemData['item_' + item].attributes.length; j++) {\n                var attribute = my.prototype.itemData['item_' + item].attributes[j];\n                switch(attribute.name) {\n                    case 'bonus_all_stats':\n                        totalAttribute += parseInt(attribute.value[0]);\n                    break;\n                    case 'bonus_stats':\n                        totalAttribute += parseInt(attribute.value[0]);\n                    break;\n                }\n                switch(attributetype) {\n                    case 'agi':\n                        if (attribute.name == 'bonus_agility') {\n                            if (item == 'diffusal_blade') {\n                                totalAttribute += parseInt(attribute.value[size-1]);\n                            }\n                            else {\n                                totalAttribute += parseInt(attribute.value[0]);\n                            }\n                        }\n                        if (attribute.name == 'bonus_stat' && self.items()[i].state() == 2) {totalAttribute += parseInt(attribute.value[0]);};\n                        if (attribute.name == 'bonus_agi') {totalAttribute += parseInt(attribute.value[0]);};\n                    break;\n                    case 'int':\n                        if (attribute.name == 'bonus_intellect') {\n                            if (item == 'necronomicon') {\n                                totalAttribute += parseInt(attribute.value[size-1]);\n                            }\n                            else if (item == 'diffusal_blade') {\n                                totalAttribute += parseInt(attribute.value[size-1]);\n                            }\n                            else if (item == 'dagon') {\n                                totalAttribute += parseInt(attribute.value[size-1]);\n                            }\n                            else {\n                                totalAttribute += parseInt(attribute.value[0]);\n                            }\n                        }\n                        if (attribute.name == 'bonus_intelligence') {totalAttribute += parseInt(attribute.value[0]);};\n                        if (attribute.name == 'bonus_int') {totalAttribute += parseInt(attribute.value[0]);};\n                        if (attribute.name == 'bonus_stat' && self.items()[i].state() == 1) {totalAttribute += parseInt(attribute.value[0]);};\n                    break;\n                    case 'str':\n                        if (attribute.name == 'bonus_strength') {\n                            if (item == 'necronomicon') {\n                                totalAttribute += parseInt(attribute.value[size-1]);\n                            }\n                            else {\n                                totalAttribute += parseInt(attribute.value[0]);\n                            }\n                        }\n                        if (attribute.name == 'bonus_stat' && self.items()[i].state() == 0) {totalAttribute += parseInt(attribute.value[0]);};\n                        if (attribute.name == 'bonus_str') {totalAttribute += parseInt(attribute.value[0]);};\n                        if (attribute.name == 'unholy_bonus_strength' && isActive) {totalAttribute += parseInt(attribute.value[0]);};\n                    break;\n                }\n            }\n        }\n        return totalAttribute;\n    };\n    self.getBash = function (attacktype) {\n        var totalAttribute = 1;\n        for (var i = 0; i < self.items().length; i++) {\n            var item = self.items()[i].item;\n            if (!self.items()[i].enabled()) continue;\n            for (var j = 0; j < my.prototype.itemData['item_' + item].attributes.length; j++) {\n                var attribute = my.prototype.itemData['item_' + item].attributes[j];\n                switch(attribute.name) {\n                    case 'bash_chance':\n                        totalAttribute *= (1 - parseInt(attribute.value[0]) / 100);\n                    break;\n                    case 'bash_chance_melee':\n                        if (attacktype == 'DOTA_UNIT_CAP_MELEE_ATTACK') { totalAttribute *= (1 - parseInt(attribute.value[0]) / 100); };\n                    break;\n                    case 'bash_chance_ranged':\n                        if (attacktype == 'DOTA_UNIT_CAP_RANGED_ATTACK') { totalAttribute *= (1 - parseInt(attribute.value[0]) / 100); };\n                    break;\n                }\n            }\n        }\n        return totalAttribute;\n    };\n    \n    self.getCritChance = function () {\n        var totalAttribute = 1;\n        for (var i = 0; i < self.items().length; i++) {\n            var item = self.items()[i].item;\n            var isActive = self.activeItems.indexOf(self.items()[i]) >= 0 ? true : false;\n            if (!self.items()[i].enabled()) continue;\n            for (var j = 0; j < my.prototype.itemData['item_' + item].attributes.length; j++) {\n                var attribute = my.prototype.itemData['item_' + item].attributes[j];\n                switch(attribute.name) {\n                    case 'crit_chance':\n                        totalAttribute *= (1 - parseInt(attribute.value[0]) / 100);\n                    break;\n                }\n            }\n        }\n        return totalAttribute;\n    };\n    \n    self.getCritSource = function () {\n        var sources = {};\n        for (var i = 0; i < self.items().length; i++) {\n            var item = self.items()[i].item;\n            var isActive = self.activeItems.indexOf(self.items()[i]) >= 0 ? true : false;\n            if (!self.items()[i].enabled()) continue;\n            switch (item) {\n                case 'lesser_crit':\n                case 'greater_crit':\n                case 'bloodthorn':\n                    if (sources[item] == undefined) {\n                        sources[item] = {\n                            'chance': self.getItemAttributeValue(my.prototype.itemData['item_' + item].attributes, 'crit_chance', 0) / 100,\n                            'multiplier': self.getItemAttributeValue(my.prototype.itemData['item_' + item].attributes, 'crit_multiplier', 0) / 100,\n                            'count': 1,\n                            'displayname': my.prototype.itemData['item_' + item].displayname\n                        }\n                    }\n                    else {\n                        sources[item].count += 1;\n                    }\n                break;\n            }\n            if (item === 'bloodthorn' && isActive) {\n                if (sources['soul_rend'] == undefined) {\n                    sources['soul_rend'] = {\n                        'chance': 1,\n                        'multiplier': self.getItemAttributeValue(my.prototype.itemData['item_' + item].attributes, 'target_crit_multiplier', 0) / 100,\n                        'count': 1,\n                        'displayname': 'Soul Rend'\n                    }\n                }\n                else {\n                    sources['soul_rend'].count += 1;\n                }\n            }\n        }\n        return sources;\n    };\n\n    self.getCleaveSource = function () {\n        var sources = {};\n        for (var i = 0; i < self.items().length; i++) {\n            var item = self.items()[i].item;\n            var isActive = self.activeItems.indexOf(self.items()[i]) >= 0 ? true : false;\n            if (!self.items()[i].enabled()) continue;\n            switch (item) {\n                case 'bfury':\n                    if (sources[item] == undefined) {\n                        sources[item] = {\n                            'radius': self.getItemAttributeValue(my.prototype.itemData['item_' + item].attributes, 'cleave_radius', 0),\n                            'magnitude': self.getItemAttributeValue(my.prototype.itemData['item_' + item].attributes, 'cleave_damage_percent', 0) / 100,\n                            'count': 1,\n                            'displayname': my.prototype.itemData['item_' + item].displayname\n                        }\n                    }\n                    else {\n                        sources[item].count += 1;\n                    }\n                break;\n            }\n\n        }\n        return sources;\n    };\n    \n    self.getBashSource = function (attacktype) {\n        var sources = {};\n        for (var i = 0; i < self.items().length; i++) {\n            var item = self.items()[i].item;\n            var isActive = self.activeItems.indexOf(self.items()[i]) >= 0 ? true : false;\n            if (!self.items()[i].enabled()) continue;\n            switch (item) {\n                case 'javelin':\n                    if (sources[item] == undefined) {\n                        sources[item] = {\n                            'damage': self.getItemAttributeValue(my.prototype.itemData['item_' + item].attributes, 'bonus_chance_damage', 1),\n                            'damageType': 'magic',\n                            'count': 1,\n                            'chance': self.getItemAttributeValue(my.prototype.itemData['item_' + item].attributes, 'bonus_chance', 1) / 100,\n                            'displayname': my.prototype.itemData['item_' + item].displayname + ' Pierce'\n                        }\n                    }\n                    else {\n                        sources[item].count += 1;\n                    }\n                break;\n                case 'monkey_king_bar':\n                    if (sources[item] == undefined) {\n                        sources[item] = {\n                            'item': item,\n                            'chance': self.getItemAttributeValue(my.prototype.itemData['item_' + item].attributes, 'bash_chance', 0) / 100,\n                            'damage': self.getItemAttributeValue(my.prototype.itemData['item_' + item].attributes, 'bash_damage', 0),\n                            'duration': self.getItemAttributeValue(my.prototype.itemData['item_' + item].attributes, 'bash_stun', 0),\n                            'count': 1,\n                            'damageType': 'magic',\n                            'displayname': 'Mini-Bash' //my.prototype.itemData['item_' + item].displayname\n                        }\n                    }\n                    else {\n                        sources[item].count += 1;\n                    }\n                break;\n                case 'abyssal_blade':\n                case 'basher':\n                    if (!sources.hasOwnProperty('bash')) {\n                        sources['bash'] = {\n                            'item': item,\n                            'chance': self.getItemAttributeValue(my.prototype.itemData['item_' + item].attributes, (attacktype == 'DOTA_UNIT_CAP_MELEE_ATTACK') ?'bash_chance_melee' : 'bash_chance_ranged', 0) / 100,\n                            'damage': self.getItemAttributeValue(my.prototype.itemData['item_' + item].attributes, 'bonus_chance_damage', 0),\n                            'duration': self.getItemAttributeValue(my.prototype.itemData['item_' + item].attributes, 'bash_duration', 0),\n                            'count': 1,\n                            'damageType': 'physical',\n                            'displayname': 'Bash' //my.prototype.itemData['item_' + item].displayname\n                        }\n                    }\n                    else {\n                        //sources[item].count += 1;\n                    }\n                break;\n            }\n\n        }\n        return sources;\n    };\n    \n    self.getOrbProcSource = function () {\n        var sources = {};\n        for (var i = 0; i < self.items().length; i++) {\n            var item = self.items()[i].item;\n            var isActive = self.activeItems.indexOf(self.items()[i]) >= 0 ? true : false;\n            if (!self.items()[i].enabled()) continue;\n            switch (item) {\n                case 'maelstrom':\n                case 'mjollnir':\n                    if (sources[item] == undefined) {\n                        sources[item] = {\n                            'chance': self.getItemAttributeValue(my.prototype.itemData['item_' + item].attributes, 'chain_chance', 0) / 100,\n                            'damage': self.getItemAttributeValue(my.prototype.itemData['item_' + item].attributes, 'chain_damage', 0),\n                            'count': 1,\n                            'damageType': 'magic',\n                            'displayname': my.prototype.itemData['item_' + item].displayname\n                        }\n                    }\n                    else {\n                        sources[item].count += 1;\n                    }\n                break;\n            }\n\n        }\n        return sources;\n    };\n\n    self.getOrbSource = function () {\n        var sources = {};\n        for (var i = 0; i < self.items().length; i++) {\n            var item = self.items()[i].item;\n            var isActive = self.activeItems.indexOf(self.items()[i]) >= 0 ? true : false;\n            if (!self.items()[i].enabled()) continue;\n            switch (item) {\n                case 'diffusal_blade':\n                    if (sources[item] == undefined) {\n                        sources[item] = {\n                            'chance': 1,\n                            'damage': self.getItemAttributeValue(my.prototype.itemData['item_' + item].attributes, 'feedback_mana_burn', self.items()[i].size),\n                            'count': 1,\n                            'damageType': 'physical',\n                            'displayname': my.prototype.itemData['item_' + item].displayname\n                        }\n                    }\n                    else {\n                        sources[item].count += 1;\n                    }\n                break;\n            }\n\n        }\n        return sources;\n    };\n    \n    self.getHealth = function () {\n        var totalAttribute = 0;\n        for (var i = 0; i < self.items().length; i++) {\n            var item = self.items()[i].item;\n            if (!self.items()[i].enabled()) continue;\n            for (var j = 0; j < my.prototype.itemData['item_' + item].attributes.length; j++) {\n                var attribute = my.prototype.itemData['item_' + item].attributes[j];\n                switch(attribute.name) {\n                    case 'bonus_health':\n                        totalAttribute += parseInt(attribute.value[0]);\n                    break;\n                }\n            }\n        }\n        return totalAttribute;\n    };\n    self.getHealthRegen = function () {\n        var totalAttribute = 0;\n        for (var i = 0; i < self.items().length; i++) {\n            var item = self.items()[i].item;\n            var isActive = self.activeItems.indexOf(self.items()[i]) >= 0 ? true : false;\n            if (!self.items()[i].enabled()) continue;\n            for (var j = 0; j < my.prototype.itemData['item_' + item].attributes.length; j++) {\n                var attribute = my.prototype.itemData['item_' + item].attributes[j];\n                switch(attribute.name) {\n                    case 'health_regen':\n                    case 'bonus_regen':\n                        totalAttribute += parseInt(attribute.value[0]);\n                    break;\n                    case 'bonus_health_regen':\n                        if (item == 'tranquil_boots' && !isActive) {\n                            totalAttribute += parseInt(attribute.value[0]);\n                        }\n                        else if (item != 'tranquil_boots') {\n                            totalAttribute += parseInt(attribute.value[0]);\n                        }\n                    break;\n                    case 'hp_regen':\n                        totalAttribute += parseInt(attribute.value[0]);\n                    break;\n                    case 'health_regen_rate':\n                        if (item == 'heart' && isActive) {\n                            totalAttribute += (parseInt(attribute.value[0]) / 100) * self.hero.health();\n                        }\n                    break;\n                }\n            }\n        }\n        return totalAttribute;\n    };\n    self.getHealthRegenAura = function (e) {\n        var totalAttribute = 0,\n            excludeList = e || [];\n        for (var i = 0; i < self.items().length; i++) {\n            var item = self.items()[i].item;\n            var isActive = self.activeItems.indexOf(self.items()[i]) >= 0 ? true : false;\n            if (!self.items()[i].enabled()) continue;\n            for (var j = 0; j < my.prototype.itemData['item_' + item].attributes.length; j++) {\n                var attribute = my.prototype.itemData['item_' + item].attributes[j];\n                if (excludeList.indexOf(item + attribute.name) > -1) continue;\n                switch(attribute.name) {\n                    case 'aura_health_regen':\n                        totalAttribute += parseInt(attribute.value[0]);\n                        excludeList.push(item + attribute.name);\n                    break;\n                }\n            }\n        }\n        return {value: totalAttribute, excludeList: excludeList};\n    };\n    \n    self.getMana = function () {\n        var totalAttribute = 0;\n        for (var i = 0; i < self.items().length; i++) {\n            var item = self.items()[i].item;\n            if (!self.items()[i].enabled()) continue;\n            for (var j = 0; j < my.prototype.itemData['item_' + item].attributes.length; j++) {\n                var attribute = my.prototype.itemData['item_' + item].attributes[j];\n                switch(attribute.name) {\n                    case 'bonus_mana':\n                        totalAttribute += parseInt(attribute.value[0]);\n                    break;\n                }\n            }\n        }\n        return totalAttribute;\n    };\n    \n    self.getManaRegen = function () {\n        var totalAttribute = 0;\n        for (var i = 0; i < self.items().length; i++) {\n            var item = self.items()[i].item;\n            if (!self.items()[i].enabled()) continue;\n            for (var j = 0; j < my.prototype.itemData['item_' + item].attributes.length; j++) {\n                var attribute = my.prototype.itemData['item_' + item].attributes[j];\n                switch(attribute.name) {\n                    case 'aura_mana_regen':\n                    case 'mana_regen_aura':\n                        totalAttribute += parseFloat(attribute.value[0]);\n                    break;\n                    case 'mana_regen':\n                        if (item == 'infused_raindrop') totalAttribute += parseFloat(attribute.value[0]);\n                    break;\n                }\n            }\n        }\n        return totalAttribute;    \n    };\n    self.getManaRegenPercent = function () {\n        var totalAttribute = 0;\n        for (var i = 0; i < self.items().length; i++) {\n            var item = self.items()[i].item;\n            if (!self.items()[i].enabled()) continue;\n            for (var j = 0; j < my.prototype.itemData['item_' + item].attributes.length; j++) {\n                var attribute = my.prototype.itemData['item_' + item].attributes[j];\n                switch(attribute.name) {\n                    case 'bonus_mana_regen':\n                    case 'mana_regen':\n                    case 'bonus_mana_regen_pct':\n                        if (item != 'infused_raindrop') totalAttribute += parseFloat(attribute.value[0]);\n                    break;\n                }\n            }\n        }\n        return totalAttribute / 100;    \n    };\n    self.getManaRegenBloodstone = function () {\n        for (var i = 0; i < self.items().length; i++) {\n            var item = self.items()[i].item;\n            if (!self.items()[i].enabled()) continue;\n            if (item.indexOf('bloodstone') != -1) {\n                return parseInt(self.items()[i].size);\n            }\n        }\n        return 0;\n    };\n    \n    self.getArmor = function () {\n        var totalAttribute = 0;\n        for (var i = 0; i < self.items().length; i++) {\n            var item = self.items()[i].item;\n            var isActive = self.activeItems.indexOf(self.items()[i]) >= 0 ? true : false;\n            if (!self.items()[i].enabled()) continue;\n            for (var j = 0; j < my.prototype.itemData['item_' + item].attributes.length; j++) {\n                var attribute = my.prototype.itemData['item_' + item].attributes[j];\n                switch(attribute.name) {\n                    case 'bonus_armor':\n                        if (!isActive || (item != 'medallion_of_courage' && item != 'solar_crest')) { totalAttribute += parseInt(attribute.value[0]); };\n                    break;\n                    case 'unholy_bonus_armor':\n                        if (isActive && item == 'armlet') { totalAttribute += parseInt(attribute.value[0]); };\n                    break;\n                }\n            }\n        }\n        return totalAttribute;\n    };\n    \n    self.getArmorAura = function (aList) {\n        var totalAttribute = 0,\n            attributeList = aList || [];\n        for (var i = 0; i < self.items().length; i++) {\n            var item = self.items()[i].item;\n            var isActive = self.activeItems.indexOf(self.items()[i]) >= 0 ? true : false;\n            if (!self.items()[i].enabled()) continue;\n            for (var j = 0;j < my.prototype.itemData['item_' + item].attributes.length; j++) {\n                var attribute = my.prototype.itemData['item_' + item].attributes[j];\n                if (attributeList.find(function (a) { return attribute.name == a.name; })) continue;\n                switch(attribute.name) {\n                    // buckler\n                    case 'bonus_aoe_armor':\n                        if (isActive) {\n                            attributeList.push({'name':attribute.name, 'value': parseInt(attribute.value[0])});\n                        }\n                    break;\n                    // assault\n                    case 'aura_positive_armor':\n                        attributeList.push({'name':attribute.name, 'value': parseInt(attribute.value[0])});\n                    break;\n                    // ring_of_aquila,ring_of_basilius\n                    case 'aura_bonus_armor':\n                        if (isActive) {\n                            attributeList.push({'name':attribute.name, 'value': parseInt(attribute.value[0])});\n                        }\n                    break;\n                    // vladmir\n                    case 'armor_aura':\n                        attributeList.push({'name':attribute.name, 'value': parseInt(attribute.value[0])});\n                    break;\n                    // mekansm\n                    case 'heal_bonus_armor':\n                        if (isActive) {\n                            attributeList.push({'name':attribute.name, 'value': parseInt(attribute.value[0])});\n                        }\n                    break;\n                }\n            }\n        }\n        // remove buckler if there is a mekansm\n        if (attributeList.find(function (attribute) { return attribute.name == 'heal_bonus_armor'; })) {\n            attributeList = attributeList.filter(function (attribute) {\n                return attribute.name !== 'bonus_aoe_armor';\n            });\n        }\n        // remove ring_of_aquila,ring_of_basilius if there is a vladmir\n        if (attributeList.find(function (attribute) { return attribute.name == 'armor_aura'; })) {\n            attributeList = attributeList.filter(function (attribute) {\n                return attribute.name !== 'aura_bonus_armor';\n            });\n        }\n        \n        totalAttribute = attributeList.reduce(function (memo, attribute) {\n            return memo += attribute.value;\n        }, 0);\n        return {value: totalAttribute, attributes: attributeList};\n    };\n    self.getArmorReduction = function (e) {\n        var totalAttribute = 0,\n            excludeList = e || [];\n        for (var i = 0; i < self.items().length; i++) {\n            var item = self.items()[i].item;\n            var isActive = self.activeItems.indexOf(self.items()[i]) >= 0 ? true : false;\n            if (!self.items()[i].enabled()) continue;\n            for (var j = 0; j < my.prototype.itemData['item_' + item].attributes.length; j++) {\n                var attribute = my.prototype.itemData['item_' + item].attributes[j];\n                if (excludeList.indexOf(attribute.name) > -1 || excludeList.indexOf(item + '_' + attribute.name) > -1) continue;\n                switch(attribute.name) {\n                    case 'armor_reduction':\n                        if (isActive || (item != 'medallion_of_courage' && item != 'solar_crest')) {\n                            totalAttribute += parseInt(attribute.value[0]);\n                            excludeList.push(item + '_' + attribute.name);\n                        }\n                    break;\n                    case 'aura_negative_armor':\n                        totalAttribute += parseInt(attribute.value[0]);\n                        excludeList.push(attribute.name);\n                    break;\n                    case 'corruption_armor':\n                        totalAttribute += parseInt(attribute.value[0]);\n                        excludeList.push(attribute.name);\n                    break;\n                }\n            }\n        }\n        return {value: totalAttribute, excludeList: excludeList};\n    };\n    self.getEvasion = function () {\n        var totalAttribute = 1;\n        for (var i = 0; i < self.items().length; i++) {\n            var item = self.items()[i].item;\n            var isActive = self.activeItems.indexOf(self.items()[i]) >= 0 ? true : false;\n            if (!self.items()[i].enabled()) continue;\n            for (var j = 0; j < my.prototype.itemData['item_' + item].attributes.length; j++) {\n                var attribute = my.prototype.itemData['item_' + item].attributes[j];\n                switch(attribute.name) {\n                    case 'bonus_evasion':\n                        if (!isActive || (item != 'butterfly' && item != 'solar_crest')) { totalAttribute *= (1 - parseInt(attribute.value[0]) / 100); }\n                    break;\n                }\n            }\n        }\n        return totalAttribute;\n    };\n    self.getMovementSpeedFlat = function () {\n        var totalAttribute = 0,\n        hasBoots = false,\n        hasEuls = false,\n        hasWindLace = false,\n        bootItems = ['boots','phase_boots','arcane_boots','travel_boots','power_treads','tranquil_boots','guardian_greaves'];\n        for (var i = 0; i < self.items().length; i++) {\n            var item = self.items()[i].item;\n            var isActive = self.activeItems.indexOf(self.items()[i]) >= 0 ? true : false;\n            if (!self.items()[i].enabled()) continue;\n            for (var j = 0; j < my.prototype.itemData['item_' + item].attributes.length; j++) {\n                var attribute = my.prototype.itemData['item_' + item].attributes[j];\n                switch(attribute.name) {\n                    case 'bonus_movement_speed':\n                        if (!hasBoots && bootItems.indexOf(item) >= 0) {\n                            if (item != 'tranquil_boots' || (item == 'tranquil_boots' && !isActive)) {\n                                totalAttribute += parseInt(attribute.value[0]);\n                                hasBoots = true;\n                            }\n                        }\n                        //else if (!hasEuls && item == 'cyclone') {\n                        else if (item == 'cyclone') {\n                            totalAttribute += parseInt(attribute.value[0]);\n                            hasEuls = true;\n                        }\n                    break;\n                    case 'broken_movement_speed':\n                        if (!hasBoots && bootItems.indexOf(item) >= 0) {\n                            if (item == 'tranquil_boots' && isActive) {\n                                totalAttribute += parseInt(attribute.value[0]);\n                                hasBoots = true;\n                            }\n                        }\n                    break;\n                    case 'bonus_movement':\n                        if (!hasBoots && bootItems.indexOf(item) >= 0) {\n                            totalAttribute += parseInt(attribute.value[0]);\n                            hasBoots = true;\n                        }\n                    break;\n                    case 'movement_speed':\n                        if (!hasWindLace && item == 'wind_lace') {\n                            totalAttribute += parseInt(attribute.value[0]);\n                            hasWindLace = true;\n                        }\n                    break;\n                }\n            }\n        }\n        return totalAttribute;\n    };\n    self.getMovementSpeedPercent = function (e) {\n        var totalAttribute = 0,\n            excludeList = e || [],\n            hasYasha = false,\n            hasDrums = false,\n            hasDrumsActive = false,\n            hasPhaseActive = false,\n            hasShadowBladeActive = false,\n            hasButterflyActive = false,\n            hasMoMActive = false,\n            yashaItems = ['manta','yasha','sange_and_yasha'];\n        for (var i = 0; i < self.items().length; i++) {\n            var item = self.items()[i].item;\n            var isActive = self.activeItems.indexOf(self.items()[i]) >= 0 ? true : false;\n            if (!self.items()[i].enabled()) continue;\n            for (var j = 0; j < my.prototype.itemData['item_' + item].attributes.length; j++) {\n                var attribute = my.prototype.itemData['item_' + item].attributes[j];\n                if (excludeList.indexOf(attribute.name) > -1) continue;\n                switch(attribute.name) {\n                    case 'movement_speed_percent_bonus':\n                        if (!hasYasha && yashaItems.indexOf(item) >= 0) {\n                            totalAttribute += parseInt(attribute.value[0]);\n                            hasYasha = true;\n                        }\n                    break;\n                    case 'bonus_aura_movement_speed_pct':\n                        if (!hasDrums && item == 'ancient_janggo') {\n                            totalAttribute += parseInt(attribute.value[0]);\n                            hasDrums = true;\n                            excludeList.push(attribute.name);\n                        }\n                    break;\n                    case 'phase_movement_speed':\n                        if (isActive && !hasPhaseActive) {\n                            totalAttribute += parseInt(attribute.value[0]);\n                            hasPhaseActive = true;\n                        }\n                    break;\n                    case 'bonus_movement_speed_pct':\n                        if (isActive && !hasDrumsActive && item == 'ancient_janggo') {\n                            totalAttribute += parseInt(attribute.value[0]);\n                            hasDrumsActive = true;\n                            excludeList.push(attribute.name);\n                        }\n                    break;\n                    case 'windwalk_movement_speed':\n                        if (isActive && !hasShadowBladeActive && (item == 'invis_sword' || item == 'silver_edge')) {\n                            totalAttribute += parseInt(attribute.value[0]);\n                            hasShadowBladeActive = true;\n                        }\n                    break;\n                    case 'berserk_bonus_movement_speed':\n                        if (isActive && !hasMoMActive && item == 'mask_of_madness') {\n                            totalAttribute += parseInt(attribute.value[0]);\n                            hasMoMActive = true;\n                        }\n                    break;\n                    case 'bonus_movement_speed': //manta\n                        if (!hasYasha && item == 'manta') {\n                            totalAttribute += parseInt(attribute.value[0]);\n                            hasYasha = true;\n                        }\n                        else if (item == 'smoke_of_deceit' && isActive) {\n                            totalAttribute += parseInt(attribute.value[0]);\n                        }\n                    break;\n                    case 'bonus_move_speed':\n                        if (isActive && !hasButterflyActive && item == 'butterfly') {\n                            totalAttribute += parseInt(attribute.value[0]);\n                            hasButterflyActive = true;\n                        }\n                    break;\n                }\n            }\n        }\n        return {value: totalAttribute/100, excludeList: excludeList};\n    };\n    \n    self.getMovementSpeedPercentReduction = function (e) {\n        var totalAttribute = 0,\n            excludeList = e || [];\n        for (var i = 0; i < self.items().length; i++) {\n            var item = self.items()[i].item;\n            var isActive = self.activeItems.indexOf(self.items()[i]) >= 0 ? true : false;\n            if (!self.items()[i].enabled()) continue;\n            for (var j = 0; j < my.prototype.itemData['item_' + item].attributes.length; j++) {\n                var attribute = my.prototype.itemData['item_' + item].attributes[j];\n                if (excludeList.indexOf(attribute.name) > -1) continue;\n                switch(attribute.name) {\n                    case 'movespeed':\n                        if (item == 'dust' && isActive) {\n                            totalAttribute += parseInt(attribute.value[0]);\n                        }\n                    case 'blast_movement_speed':\n                        if (item == 'shivas_guard' && isActive) {\n                            totalAttribute += parseInt(attribute.value[0]);\n                            excludeList.push(attribute.name);\n                        }\n                    case 'cold_movement_speed':\n                        if (item == 'skadi') {\n                            totalAttribute += parseInt(attribute.value[0]);\n                        }\n                    break;\n                    case 'maim_movement_speed':\n                        if (self.items()[i].debuff && self.items()[i].debuff == 'maim') {\n                            totalAttribute += parseInt(attribute.value[0]);\n                            excludeList.push(attribute.name);\n                        }\n                    break;\n                }\n            }\n        }\n        return {value: totalAttribute/100, excludeList: excludeList};\n    };\n    \n    self.getBonusDamage = function () {\n        var totalAttribute = 0;\n        var sources = {};\n        for (var i = 0; i < self.items().length; i++) {\n            var item = self.items()[i].item;\n            var isActive = self.activeItems.indexOf(self.items()[i]) >= 0 ? true : false;\n            if (!self.items()[i].enabled()) continue;\n            for (var j = 0; j < my.prototype.itemData['item_' + item].attributes.length; j++) {\n                var attribute = my.prototype.itemData['item_' + item].attributes[j];\n                switch(attribute.name) {\n                    case 'bonus_damage':\n                        totalAttribute += parseInt(attribute.value[0]);\n                        if (sources[item] == undefined) {\n                            sources[item] = {\n                                'damage': parseInt(attribute.value[0]),\n                                'damageType': 'physical',\n                                'count':1,\n                                'displayname': my.prototype.itemData['item_' + item].displayname\n                            }                            \n                        }\n                        else {\n                            sources[item].count += 1;\n                        }\n                    break;\n                    case 'unholy_bonus_damage':\n                        if (isActive) {\n                            totalAttribute += parseInt(attribute.value[0]);\n                            if (sources[item + '_active'] == undefined) {\n                                sources[item + '_active'] = {\n                                    'damage': parseInt(attribute.value[0]),\n                                    'damageType': 'physical',\n                                    'count':1,\n                                    'displayname': my.prototype.itemData['item_' + item].displayname + ' Unholy Strength'\n                                }                            \n                            }\n                            else {\n                                sources[item].count += 1;\n                            }\n                        }\n                    break;\n                }\n            }\n        }\n        return { sources: sources, total: totalAttribute };\n    };\n    self.getBonusDamagePercent = function (s) {\n        s = s || {sources:{},total:0};\n        var totalAttribute = s.total || 0;\n        var sources = s.sources || {};\n        for (var i = 0; i < self.items().length; i++) {\n            var item = self.items()[i].item;\n            var isActive = self.activeItems.indexOf(self.items()[i]) >= 0 ? true : false;\n            if (!self.items()[i].enabled()) continue;\n            for (var j = 0; j < my.prototype.itemData['item_' + item].attributes.length; j++) {\n                var attribute = my.prototype.itemData['item_' + item].attributes[j];\n                switch(attribute.name) {\n                    case 'damage_aura':\n                        if (sources[item] == undefined) {\n                            totalAttribute += parseInt(attribute.value[0]) / 100;\n                            sources[item] = {\n                                'damage': parseInt(attribute.value[0]) / 100,\n                                'damageType': 'physical',\n                                'count':1,\n                                'displayname': my.prototype.itemData['item_' + item].displayname\n                            }\n                        }\n                        // else {\n                            // sources[item].count += 1;\n                        // }\n                    break;\n                }\n            }\n        }\n        return { sources: sources, total: totalAttribute };\n    };\n    self.getAttackSpeed = function (e) {\n        var totalAttribute = 0,\n            hasPowerTreads = false,\n            excludeList = e || [];\n        for (var i = 0; i < self.items().length; i++) {\n            var item = self.items()[i].item;\n            var isActive = self.activeItems.indexOf(self.items()[i]) >= 0 ? true : false;\n            if (!self.items()[i].enabled()) continue;\n            for (var j = 0; j < my.prototype.itemData['item_' + item].attributes.length; j++) {\n                var attribute = my.prototype.itemData['item_' + item].attributes[j];\n                if (excludeList.indexOf(attribute.name) > -1) continue;\n                switch(attribute.name) {\n                    case 'bonus_attack_speed':\n                        if (item == 'power_treads') {\n                            if (!hasPowerTreads) {\n                                totalAttribute += parseInt(attribute.value[0]);\n                                hasPowerTreads = true;\n                            }\n                        }\n                        else if (item == 'moon_shard') {\n                            if (!isActive) {\n                                totalAttribute += parseInt(attribute.value[0]);\n                            }\n                        }\n                        else if (item == 'hurricane_pike') {\n                            if (isActive) {\n                                totalAttribute += parseInt(attribute.value[0]);\n                            }\n                        }\n                        else {\n                            totalAttribute += parseInt(attribute.value[0]);\n                        }\n                    break;\n                    case 'consumed_bonus':\n                        if (item == 'moon_shard' && isActive) {\n                            totalAttribute += parseInt(attribute.value[0]);\n                        }\n                    break;\n                    break;\n                    case 'bonus_speed':\n                        totalAttribute += parseInt(attribute.value[0]);\n                    break;\n                    case 'aura_attack_speed':\n                        if (item != 'shivas_guard') { totalAttribute += parseInt(attribute.value[0]); };\n                    break;\n                    // ancient_janggo\n                    case 'bonus_aura_attack_speed_pct':\n                        totalAttribute += parseInt(attribute.value[0]);\n                        excludeList.push(attribute.name);\n                    break;\n                    // ancient_janggo\n                    case 'bonus_attack_speed_pct':\n                        if (isActive) {\n                            totalAttribute += parseInt(attribute.value[0]);\n                            excludeList.push(attribute.name);\n                        }\n                    break;\n                    case 'unholy_bonus_attack_speed':\n                        if (isActive) { totalAttribute += parseInt(attribute.value[0]); };\n                    break;\n                    case 'berserk_bonus_attack_speed':\n                        if (isActive) { totalAttribute += parseInt(attribute.value[0]); };\n                    break;\n                }\n            }\n        }\n        return {value: totalAttribute, excludeList: excludeList};\n    };\n    self.getAttackSpeedReduction = function (e) {\n        var totalAttribute = 0,\n            excludeList = e || [];\n        for (var i = 0; i < self.items().length; i++) {\n            var item = self.items()[i].item;\n            var isActive = self.activeItems.indexOf(self.items()[i]) >= 0 ? true : false;\n            if (!self.items()[i].enabled()) continue;\n            for (var j = 0; j < my.prototype.itemData['item_' + item].attributes.length; j++) {\n                var attribute = my.prototype.itemData['item_' + item].attributes[j];\n                if (excludeList.indexOf(attribute.name) > -1) continue;\n                switch(attribute.name) {\n                    case 'aura_attack_speed':\n                        if (item == 'shivas_guard') {\n                            totalAttribute += parseInt(attribute.value[0]);\n                            excludeList.push(attribute.name);\n                        }\n                    break;\n                    case 'cold_attack_speed':\n                        if (item == 'skadi') {\n                            totalAttribute += parseInt(attribute.value[0]);\n                            excludeList.push(attribute.name);\n                        }\n                    break;\n                    case 'maim_attack_speed':\n                        if (self.items()[i].debuff && self.items()[i].debuff == 'maim') {\n                            totalAttribute += parseInt(attribute.value[0]);\n                            excludeList.push(attribute.name);\n                        }\n                    break;\n                }\n            }\n        }\n        return {value: totalAttribute, excludeList: excludeList};\n    };\n    self.getLifesteal = function () {\n        var totalAttribute = 0;\n        for (var i = 0; i < self.items().length; i++) {\n            var item = self.items()[i].item;\n            var isActive = self.activeItems.indexOf(self.items()[i]) >= 0 ? true : false;\n            if (!self.items()[i].enabled()) continue;\n            for (var j = 0; j < my.prototype.itemData['item_' + item].attributes.length; j++) {\n                var attribute = my.prototype.itemData['item_' + item].attributes[j];\n                switch(attribute.name) {\n                    case 'lifesteal_percent':\n                        if (item == 'satanic') {\n                            if (!isActive) { return parseInt(attribute.value[0]); };\n                        }\n                        else {\n                            return parseInt(attribute.value[0]);\n                        }\n                    break;\n                    case 'unholy_lifesteal_percent':\n                        if (isActive) { return parseInt(attribute.value[0]); };\n                    break;\n                }\n            }\n        }\n        return totalAttribute;\n    };\n    self.getLifestealAura = function (e) {\n        var totalAttribute = 0,\n            excludeList = e || [];\n        for (var i = 0; i < self.items().length; i++) {\n            var item = self.items()[i].item;\n            var isActive = self.activeItems.indexOf(self.items()[i]) >= 0 ? true : false;\n            if (!self.items()[i].enabled()) continue;\n            for (var j = 0; j < my.prototype.itemData['item_' + item].attributes.length; j++) {\n                var attribute = my.prototype.itemData['item_' + item].attributes[j];\n                if (excludeList.indexOf(attribute.name) > -1) continue;\n                switch(attribute.name) {\n                    case 'vampiric_aura':\n                        totalAttribute += parseInt(attribute.value[0]);\n                        excludeList.push(attribute.name);\n                    break;\n                }\n            }\n        }\n        return {value: totalAttribute, excludeList: excludeList};\n    };\n    self.getMagicResist = function () {\n        var totalAttribute = 1;\n        for (var i = 0; i < self.items().length; i++) {\n            var item = self.items()[i].item;\n            var isActive = self.activeItems.indexOf(self.items()[i]) >= 0 ? true : false;\n            if (!self.items()[i].enabled()) continue;\n            for (var j = 0; j < my.prototype.itemData['item_' + item].attributes.length; j++) {\n                var attribute = my.prototype.itemData['item_' + item].attributes[j];\n                switch(attribute.name) {\n                    case 'bonus_magical_armor':\n                        totalAttribute *= (1 - parseInt(attribute.value[0]) / 100);\n                    break;\n                    case 'bonus_spell_resist':\n                        totalAttribute *= (1 - parseInt(attribute.value[0]) / 100);\n                    break;\n                    case 'magic_resistance':\n                        totalAttribute *= (1 - parseInt(attribute.value[0]) / 100);\n                    break;\n                }\n            }\n        }\n        return totalAttribute;\n    };\n    self.getMagicResistReductionSelf = function () {\n        var totalAttribute = 1;\n        for (var i = 0; i < self.items().length; i++) {\n            var item = self.items()[i].item;\n            var isActive = self.activeItems.indexOf(self.items()[i]) >= 0 ? true : false;\n            if (!self.items()[i].enabled()) continue;\n            if (isActive) {\n                for (var j = 0; j < my.prototype.itemData['item_' + item].attributes.length; j++) {\n                    var attribute = my.prototype.itemData['item_' + item].attributes[j];\n                    switch(attribute.name) {\n                        case 'extra_spell_damage_percent':\n                        case 'ethereal_damage_bonus':\n                            return (1 - parseInt(attribute.value[0]) / 100);\n                        break;\n                    }\n                }\n            }\n        }\n        return totalAttribute;\n    };   \n    self.getMagicResistReduction = function () {\n        var totalAttribute = 1;\n        for (var i = 0; i < self.items().length; i++) {\n            var item = self.items()[i].item;\n            var isActive = self.activeItems.indexOf(self.items()[i]) >= 0 ? true : false;\n            if (!self.items()[i].enabled()) continue;\n            if (isActive) {\n                for (var j = 0; j < my.prototype.itemData['item_' + item].attributes.length; j++) {\n                    var attribute = my.prototype.itemData['item_' + item].attributes[j];\n                    switch(attribute.name) {\n                        case 'ethereal_damage_bonus':\n                            if (!self.isEthereal()) totalAttribute *= (1 - parseInt(attribute.value[0]) / 100);\n                        case 'resist_debuff':\n                            totalAttribute *= (1 - parseInt(attribute.value[0]) / 100);\n                        break;\n                    }\n                }\n            }\n        }\n        return totalAttribute;\n    };        \n\n    self.getVisionRangeNight = ko.computed(function () {\n        var totalAttribute = 0;\n        for (var i = 0; i < self.items().length; i++) {\n            var item = self.items()[i].item;\n            var isActive = self.activeItems.indexOf(self.items()[i]) >= 0 ? true : false;\n            if (!self.items()[i].enabled()) continue;\n            for (var j = 0; j < my.prototype.itemData['item_' + item].attributes.length; j++) {\n                var attribute = my.prototype.itemData['item_' + item].attributes[j];\n                switch(attribute.name) {\n                    case 'bonus_night_vision':\n                        if (item != 'moon_shard' || !isActive) {\n                            totalAttribute += parseInt(attribute.value[0]);\n                        }\n                    break;\n                }\n            }\n        }\n        return totalAttribute;\n    });\n    \n    self.getAttackRange = function (attacktype, aList) {\n        var totalAttribute = 0,\n            attributeList = aList || [];\n        for (var i = 0; i < self.items().length; i++) {\n            var item = self.items()[i].item;\n            var isActive = self.activeItems.indexOf(self.items()[i]) >= 0 ? true : false;\n            if (!self.items()[i].enabled()) continue;\n            for (var j = 0;j < my.prototype.itemData['item_' + item].attributes.length; j++) {\n                var attribute = my.prototype.itemData['item_' + item].attributes[j];\n                if (attributeList.find(function (a) { return attribute.name == a.name; })) continue;\n                switch(attribute.name) {\n                    // dragon_lance\n                    case 'base_attack_range':\n                        if (attacktype == 'DOTA_UNIT_CAP_RANGED_ATTACK') attributeList.push({'name':attribute.name, 'value': parseInt(attribute.value[0])});\n                    break;\n                }\n            }\n        }\n        \n        totalAttribute = attributeList.reduce(function (memo, attribute) {\n            return memo += attribute.value;\n        }, 0);\n        return {value: totalAttribute, attributes: attributeList};\n    };\n    \n    self.getMissChance = function (e) {\n        var totalAttribute = 1,\n            excludeList = e || [];\n        for (var i = 0; i < self.items().length; i++) {\n            var item = self.items()[i].item;\n            var isActive = self.activeItems.indexOf(self.items()[i]) >= 0 ? true : false;\n            if (!self.items()[i].enabled()) continue;\n            for (var j = 0; j < my.prototype.itemData['item_' + item].attributes.length; j++) {\n                var attribute = my.prototype.itemData['item_' + item].attributes[j];\n                if (excludeList.indexOf(attribute.name) > -1) continue;\n                switch(attribute.name) {\n                    case 'miss_chance':\n                        if (item === 'solar_crest' && isActive) {\n                            totalAttribute *= (1 - parseInt(attribute.value[0]) / 100);\n                            excludeList.push(attribute.name);\n                        }\n                    break;\n                    case 'blind_pct':\n                        totalAttribute *= (1 - parseInt(attribute.value[0]) / 100);\n                        excludeList.push(attribute.name);\n                    break;\n                }\n            }\n        }\n        return {value: totalAttribute, excludeList: excludeList};\n    };\n    \n    self.getBaseDamageReductionPct = function () {\n        var totalAttribute = 1;\n        for (var i = 0; i < self.items().length; i++) {\n            var item = self.items()[i].item;\n            var isActive = self.activeItems.indexOf(self.items()[i]) >= 0 ? true : false;\n            if (!self.items()[i].enabled()) continue;\n            for (var j = 0; j < my.prototype.itemData['item_' + item].attributes.length; j++) {\n                var attribute = my.prototype.itemData['item_' + item].attributes[j];\n                switch(attribute.name) {\n                    case 'backstab_reduction':\n                        if (self.items()[i].debuff && self.items()[i].debuff == 'shadow_walk') {\n                            totalAttribute *= (1 + parseInt(attribute.value[0]) / 100);\n                        }\n                    break;\n                }\n            }\n        }\n        return totalAttribute;\n    };    \n    self.getBonusDamageReductionPct = function () {\n        var totalAttribute = 1;\n        for (var i = 0; i < self.items().length; i++) {\n            var item = self.items()[i].item;\n            var isActive = self.activeItems.indexOf(self.items()[i]) >= 0 ? true : false;\n            if (!self.items()[i].enabled()) continue;\n            for (var j = 0; j < my.prototype.itemData['item_' + item].attributes.length; j++) {\n                var attribute = my.prototype.itemData['item_' + item].attributes[j];\n                switch(attribute.name) {\n                    case 'backstab_reduction':\n                        if (self.items()[i].debuff && self.items()[i].debuff == 'shadow_walk') {\n                            totalAttribute *= (1 + parseInt(attribute.value[0]) / 100);\n                        }\n                    break;\n                }\n            }\n        }\n        return totalAttribute;\n    };    \n    \n    self.itemOptions = ko.observableArray(my.prototype.itemOptionsArr);\n    \n    self.itemBuffOptions = ko.observableArray(my.prototype.itemBuffOptions);\n    self.selectedItemBuff = ko.observable('assault');\n\n    self.itemDebuffOptions = ko.observableArray(my.prototype.itemDebuffOptions);\n    self.selectedItemDebuff = ko.observable('assault');\n    \n    return self;\n};","'use strict';\nvar ko = (typeof window !== \"undefined\" ? window['ko'] : typeof global !== \"undefined\" ? global['ko'] : null);\n\nko.mapping = require('../lib/knockout.mapping');\nko.wrap = require('../lib/knockout.wrap');\n\nko.extenders.numeric = function(target, precision) {\n    //create a writeable computed observable to intercept writes to our observable\n    var result = ko.computed({\n        read: target,  //always return the original observables value\n        write: function(newValue) {\n            var current = target(),\n                roundingMultiplier = Math.pow(10, precision),\n                newValueAsNum = isNaN(newValue) ? 0 : parseFloat(+newValue),\n                valueToWrite = Math.round(newValueAsNum * roundingMultiplier) / roundingMultiplier;\n \n            //only write if it changed\n            if (valueToWrite !== current) {\n                target(valueToWrite);\n            } else {\n                //if the rounded value is the same, but a different value was written, force a notification for the current field\n                if (newValue !== current) {\n                    target.notifySubscribers(valueToWrite);\n                }\n            }\n        }\n    }).extend({ notify: 'always' });\n \n    //initialize with current value to make sure it is rounded appropriately\n    result(target());\n \n    //return the new computed observable\n    return result;\n};\n\nmodule.exports = ko;","'use strict';\nvar ko = require('./herocalc_knockout');\n    \nvar my = require(\"./herocalc_core\");\n\nmy.prototype.UnitOption = function (name, displayname, levels, image, level) {\n    this.heroName = ko.computed(function() {\n        return (levels > 0) ? name + (level() <= levels ? level() : 1) : name;\n    });\n    this.heroDisplayName = displayname;\n    this.image = image;\n    this.levels = levels;\n};\n\nmy.prototype.UnitViewModel = function (h,p) {\n    var self = new my.prototype.HeroModel(h);\n    self.parent = p;\n    self.selectedUnitLevel = ko.observable(1);\n    self.availableUnits = ko.observableArray([\n        new my.prototype.UnitOption('npc_dota_lone_druid_bear', 'Lone Druid Spirit Bear',4,'/media/images/units/spirit_bear.png', self.selectedUnitLevel),\n        new my.prototype.UnitOption('npc_dota_brewmaster_earth_','Brewmaster Earth Warrior',3,'/media/images/units/npc_dota_brewmaster_earth.png', self.selectedUnitLevel),\n        new my.prototype.UnitOption('npc_dota_brewmaster_fire_','Brewmaster Fire Warrior',3,'/media/images/units/npc_dota_brewmaster_fire.png', self.selectedUnitLevel),\n        new my.prototype.UnitOption('npc_dota_brewmaster_storm_','Brewmaster Storm Warrior',3,'/media/images/units/npc_dota_brewmaster_storm.png', self.selectedUnitLevel),\n        new my.prototype.UnitOption('npc_dota_necronomicon_archer_','Necronomicon Archer',3,'/media/images/units/npc_dota_necronomicon_archer.png', self.selectedUnitLevel),\n        new my.prototype.UnitOption('npc_dota_necronomicon_warrior_','Necronomicon Warrior',3,'/media/images/units/npc_dota_necronomicon_warrior.png', self.selectedUnitLevel),\n        new my.prototype.UnitOption('npc_dota_lycan_wolf','Lycan Wolf',4,'/media/images/units/npc_dota_lycan_wolf.png', self.selectedUnitLevel),\n        new my.prototype.UnitOption('npc_dota_visage_familiar','Visage Familiar',3,'/media/images/units/npc_dota_visage_familiar.png', self.selectedUnitLevel)\n    ]);\n    self.selectedUnit = ko.observable(self.availableUnits()[0]);\n    self.selectedUnit.subscribe(function(newValue) {\n        if (newValue.heroName().indexOf('npc_dota_lone_druid_bear') != -1) {\n            self.inventory.hasInventory(true);\n            self.inventory.items.removeAll();\n            self.inventory.activeItems.removeAll();\n        }\n        else {\n            self.inventory.hasInventory(false);\n            self.inventory.items.removeAll();\n            self.inventory.activeItems.removeAll();\n        }\n    });\n    self.hero = ko.computed(function() {\n        return ko.wrap.fromJS(my.prototype.unitData[self.selectedUnit().heroName()]);\n    });\n    self.heroData = ko.computed(function() {\n        return my.prototype.unitData[self.selectedUnit().heroName()];\n    });\n    self.getAbilityLevelMax = function(data) {\n        if (data.abilitytype == 'DOTA_ABILITY_TYPE_ATTRIBUTES') {\n            return 10;\n        }\n        else if (data.name == 'necronomicon_archer_mana_burn' || data.name == 'necronomicon_archer_aoe'\n            || data.name == 'necronomicon_warrior_mana_burn' || data.name == 'necronomicon_warrior_last_will') {\n            return 3;\n        }\n        else if (data.name == 'necronomicon_warrior_sight') {\n            return 1;\n        }\n        else {\n            return 4;\n        }\n    };\n    self.ability = ko.computed(function() {\n        var a = new my.prototype.AbilityModel(ko.mapping.fromJS(my.prototype.unitData[self.selectedUnit().heroName()].abilities));\n        a.hasScepter = self.inventory.hasScepter\n        switch (self.selectedUnit().heroName()) {\n            case 'npc_dota_necronomicon_archer_1':\n            case 'npc_dota_necronomicon_warrior_1':\n                a.abilities()[0].level(1);\n                a.abilities()[1].level(1);\n            break;\n            case 'npc_dota_necronomicon_archer_2':\n            case 'npc_dota_necronomicon_warrior_2':\n                a.abilities()[0].level(2);\n                a.abilities()[1].level(2);\n            break;\n            case 'npc_dota_necronomicon_archer_3':\n                a.abilities()[0].level(3);\n                a.abilities()[1].level(3);\n            break;\n            case 'npc_dota_necronomicon_warrior_3':\n                a.abilities()[0].level(3);\n                a.abilities()[1].level(3);\n                a.abilities()[2].level(1);\n            break;\n        }\n        a.levelUpAbility = function(index, data, event, hero) {\n            switch (a.abilities()[index()].name) {\n                case 'necronomicon_archer_mana_burn':\n                case 'necronomicon_archer_aoe':\n                case 'necronomicon_warrior_mana_burn':\n                case 'necronomicon_warrior_last_will':\n                case 'necronomicon_warrior_sight':\n                break;\n                default:\n                    if (a.abilities()[index()].level() < hero.getAbilityLevelMax(data)) {\n                        a.abilities()[index()].level(a.abilities()[index()].level()+1);\n                    }                    \n                break;\n            }\n\n        };\n        a.levelDownAbility = function(index, data, event, hero) {            \n            switch (a.abilities()[index()].name) {\n                case 'necronomicon_archer_mana_burn':\n                case 'necronomicon_archer_aoe':\n                case 'necronomicon_warrior_mana_burn':\n                case 'necronomicon_warrior_last_will':\n                case 'necronomicon_warrior_sight':\n                break;\n                default:\n                    if (a.abilities()[index()].level()>0) {\n                        a.abilities()[index()].level(a.abilities()[index()].level()-1);\n                    }\n                break;\n            }\n        };\n        return a;\n    });        \n    self.primaryAttribute = ko.computed(function() {\n        //var v = my.prototype.unitData[self.selectedUnit().heroName()].attributeprimary;\n        var v = 0;\n        if (v == 'DOTA_ATTRIBUTE_AGILITY') {\n            return 'agi'\n        }\n        else if (v == 'DOTA_ATTRIBUTE_INTELLECT') {\n            return 'int'\n        }\n        else if (v == 'DOTA_ATTRIBUTE_STRENGTH') {\n            return 'str'\n        }\n        else {\n            return ''\n        }\n    });\n    self.totalAttribute = function(a) {\n        if (a == 'agi') {\n            return parseFloat(self.totalAgi());\n        }\n        if (a == 'int') {\n            return parseFloat(self.totalInt());\n        }\n        if (a == 'str') {\n            return parseFloat(self.totalStr());\n        }\n        return 0;\n    };\n    self.totalAgi = ko.computed(function() {\n        return (my.prototype.unitData[self.selectedUnit().heroName()].attributebaseagility\n                + my.prototype.unitData[self.selectedUnit().heroName()].attributeagilitygain * (self.selectedHeroLevel() - 1) \n                //+ self.inventory.getAttributes('agi') \n                + self.ability().getAttributeBonusLevel()*2\n                + self.ability().getAgility()\n                + self.enemy().ability().getAllStatsReduction()\n                + self.debuffs.getAllStatsReduction()\n               ).toFixed(2);\n    });\n    self.totalInt = ko.computed(function() {\n        return (my.prototype.unitData[self.selectedUnit().heroName()].attributebaseintelligence \n                + my.prototype.unitData[self.selectedUnit().heroName()].attributeintelligencegain * (self.selectedHeroLevel() - 1) \n                //+ self.inventory.getAttributes('int') \n                + self.ability().getAttributeBonusLevel()*2\n                + self.ability().getIntelligence()\n                + self.enemy().ability().getAllStatsReduction()\n                + self.debuffs.getAllStatsReduction()\n               ).toFixed(2);\n    });\n    self.totalStr = ko.computed(function() {\n        return (my.prototype.unitData[self.selectedUnit().heroName()].attributebasestrength \n                + my.prototype.unitData[self.selectedUnit().heroName()].attributestrengthgain * (self.selectedHeroLevel() - 1) \n                //+ self.inventory.getAttributes('str') \n                + self.ability().getAttributeBonusLevel()*2\n                + self.ability().getStrength()\n                + self.enemy().ability().getAllStatsReduction()\n                + self.debuffs.getAllStatsReduction()\n               ).toFixed(2);\n    });\n    /*self.health = ko.computed(function() {\n        return (my.prototype.unitData[self.selectedUnit().heroName()].statushealth + self.totalStr()*19 \n                + self.inventory.getHealth()\n                + self.ability().getHealth()).toFixed(2);\n    });\n    self.healthregen = ko.computed(function() {\n        return (my.prototype.unitData[self.selectedUnit().heroName()].statushealthregen + self.totalStr()*.03 \n                + self.inventory.getHealthRegen() \n                + self.ability().getHealthRegen()\n                + self.buffs.getHealthRegen()).toFixed(2);\n    });\n    self.mana = ko.computed(function() {\n        return (my.prototype.unitData[self.selectedUnit().heroName()].statusmana + self.totalInt()*13 + self.inventory.getMana()).toFixed(2);\n    });\n    self.manaregen = ko.computed(function() {\n        return ((my.prototype.unitData[self.selectedUnit().heroName()].statusmanaregen \n                + self.totalInt()*.04 \n                + self.ability().getManaRegen()) \n                * (1 + self.inventory.getManaRegenPercent()) \n                + (self.selectedHero().heroName == 'crystal_maiden' ? self.ability().getManaRegenArcaneAura() * 2 : self.buffs.getManaRegenArcaneAura())\n                + self.inventory.getManaRegenBloodstone()\n                - self.enemy().ability().getManaRegenReduction()).toFixed(2);\n    });\n    self.totalArmorPhysical = ko.computed(function() {\n        return (self.enemy().ability().getArmorBaseReduction() * self.debuffs.getArmorBaseReduction() * (my.prototype.unitData[self.selectedUnit().heroName()].armorphysical + self.totalAgi()*.14)\n                + self.inventory.getArmor() + self.ability().getArmor() + self.enemy().ability().getArmorReduction() + self.buffs.getArmor() + self.debuffs.getArmorReduction()).toFixed(2);\n    });\n    self.totalArmorPhysicalReduction = ko.computed(function() {\n        return ((0.06 * self.totalArmorPhysical()) / (1 + 0.06 * self.totalArmorPhysical()) * 100).toFixed(2);\n    });\n    self.totalMovementSpeed = ko.computed(function() {\n        if (self.parent.ability().isShapeShiftActive()) {\n            return 522;\n        }\n        var ms = (self.ability().setMovementSpeed() > 0 ? self.ability().setMovementSpeed() : self.buffs.setMovementSpeed());\n        if (ms > 0) {\n            return ms;\n        }\n        else {\n            return ((my.prototype.unitData[self.selectedUnit().heroName()].movementspeed + self.inventory.getMovementSpeedFlat()+ self.ability().getMovementSpeedFlat()) * \n                    (1 + self.inventory.getMovementSpeedPercent() \n                       + self.ability().getMovementSpeedPercent() \n                       + self.enemy().inventory.getMovementSpeedPercentReduction() \n                       + self.enemy().ability().getMovementSpeedPercentReduction() \n                       + self.buffs.getMovementSpeedPercent() \n                       + self.debuffs.getMovementSpeedPercentReduction()\n                    )).toFixed(2);\n        }\n    });\n    self.totalTurnRate = ko.computed(function() {\n        return (my.prototype.unitData[self.selectedUnit().heroName()].movementturnrate \n                * (1 + self.enemy().ability().getTurnRateReduction()\n                     + self.debuffs.getTurnRateReduction())).toFixed(2);\n    });\n    */\n    self.baseDamage = ko.computed(function() {\n        return [Math.floor(my.prototype.unitData[self.selectedUnit().heroName()].attackdamagemin + self.totalAttribute(self.primaryAttribute()) + self.ability().getBaseDamage().total),\n                Math.floor(my.prototype.unitData[self.selectedUnit().heroName()].attackdamagemax + self.totalAttribute(self.primaryAttribute()) + self.ability().getBaseDamage().total)];\n    });\n    /*self.bonusDamage = ko.computed(function() {\n        return self.inventory.getBonusDamage().total\n                + self.ability().getBonusDamage().total\n                + self.buffs.getBonusDamage().total\n                + Math.floor((self.baseDamage()[0] + self.baseDamage()[1])/2 \n                              * (self.inventory.getBonusDamagePercent().total\n                                 + self.ability().getBonusDamagePercent().total\n                                 + self.buffs.getBonusDamagePercent().total\n                                )\n                            )\n                + Math.floor(\n                    (self.hero().attacktype() == 'DOTA_UNIT_CAP_RANGED_ATTACK' \n                        ? ((self.selectedHero().heroName == 'drow_ranger') ? self.ability().getBonusDamagePrecisionAura().total[0] * self.totalAgi() : self.buffs.getBonusDamagePrecisionAura().total[1])\n                        : 0)\n                  );\n    });*/\n    /*self.bonusDamageReduction = ko.computed(function() {\n        return Math.abs(self.enemy().ability().getBonusDamageReduction() + self.debuffs.getBonusDamageReduction());\n    });\n    self.damage = ko.computed(function() {\n        return [self.baseDamage()[0] + self.bonusDamage()[0],\n                self.baseDamage()[1] + self.bonusDamage()[1]];\n    });*/\n    self.totalMagicResistanceProduct = ko.computed(function() {\n        return (1 - my.prototype.unitData[self.selectedUnit().heroName()].magicalresistance / 100) \n                   * (1 - self.inventory.getMagicResist() / 100) \n                   * (1 - self.ability().getMagicResist() / 100) \n                   * (1 - self.buffs.getMagicResist() / 100) \n                   * self.enemy().inventory.getMagicResistReduction()\n                   * self.enemy().ability().getMagicResistReduction() \n                   * self.debuffs.getMagicResistReduction();\n    });\n    self.totalMagicResistance = ko.computed(function() {\n        return (1 - self.totalMagicResistanceProduct());\n    });\n    self.bat = ko.computed(function() {\n        var abilityBAT = self.ability().getBAT();\n        if (abilityBAT > 0) {\n            return abilityBAT;\n        }\n        return my.prototype.unitData[self.selectedUnit().heroName()].attackrate;\n    });\n    /*\n    self.ias = ko.computed(function() {\n        var val = parseFloat(self.totalAgi()) \n                + self.inventory.getAttackSpeed() \n                + self.ability().getAttackSpeed() \n                + self.enemy().ability().getAttackSpeedReduction() \n                + self.buffs.getAttackSpeed() \n                + self.debuffs.getAttackSpeedReduction();\n        if (val < -80) {\n            return -80;\n        }\n        else if (val > 400) {\n            return 400;\n        }\n        return (val).toFixed(2);\n    });*/\n    self.attackTime = ko.computed(function() {\n        return (self.bat() / (1 + self.ias() / 100)).toFixed(2);\n    });\n    self.attacksPerSecond = ko.computed(function() {\n        return (1 + self.ias() / 100) / self.bat();\n    });\n    self.evasion = ko.computed(function() {\n        var e = self.ability().setEvasion();\n        if (e) {\n            return (e * 100).toFixed(2) + '%';\n        }\n        else {\n            return ((1-(self.inventory.getEvasion() * self.ability().getEvasion())) * 100).toFixed(2) + '%';\n        }\n    });\n    self.ehpPhysical = ko.computed(function() {\n        return ((self.health() * (1 + .06 * self.totalArmorPhysical())) / (1-(1-(self.inventory.getEvasion() * self.ability().getEvasion())))).toFixed(2);\n    });\n    self.ehpMagical = ko.computed(function() {\n        return (self.health() / self.totalMagicResistanceProduct()).toFixed(2);\n    });\n    \n    return self;\n}","'use strict';\n\nvar core = require(\"./herocalc_core\");\nrequire(\"./herocalc_inventory\");\nrequire(\"./herocalc_abilitydata\");\nrequire(\"./herocalc_abilities\");\nrequire(\"./herocalc_buffs\");\nrequire(\"./herocalc_hero\");\nrequire(\"./herocalc_hero.illusion\");\nrequire(\"./herocalc_hero.meepo\");\nrequire(\"./herocalc_unit\");\n\nmodule.exports = core;","if (!Array.prototype.find) {\n  Array.prototype.find = function(predicate) {\n    'use strict';\n    if (this == null) {\n      throw new TypeError('Array.prototype.find called on null or undefined');\n    }\n    if (typeof predicate !== 'function') {\n      throw new TypeError('predicate must be a function');\n    }\n    var list = Object(this);\n    var length = list.length >>> 0;\n    var thisArg = arguments[1];\n    var value;\n\n    for (var i = 0; i < length; i++) {\n      value = list[i];\n      if (predicate.call(thisArg, value, i, list)) {\n        return value;\n      }\n    }\n    return undefined;\n  };\n}","(function (factory) {\n\t// Module systems magic dance.\n\n\tif (typeof require === \"function\" && typeof exports === \"object\" && typeof module === \"object\") {\n\t\t// CommonJS or Node: hard-coded dependency on \"knockout\"\n\t\tfactory((typeof window !== \"undefined\" ? window['ko'] : typeof global !== \"undefined\" ? global['ko'] : null), exports);\n\t} else if (typeof define === \"function\" && define[\"amd\"]) {\n\t\t// AMD anonymous module with hard-coded dependency on \"knockout\"\n\t\tdefine([\"knockout\", \"exports\"], factory);\n\t} else {\n\t\t// <script> tag: use the global `ko` object, attaching a `mapping` property\n\t\tfactory(ko, ko.mapping = {});\n\t}\n}(function (ko, exports) {\n\tvar DEBUG=true;\n\tvar mappingProperty = \"__ko_mapping__\";\n\tvar realKoDependentObservable = ko.dependentObservable;\n\tvar mappingNesting = 0;\n\tvar dependentObservables;\n\tvar visitedObjects;\n\tvar recognizedRootProperties = [\"create\", \"update\", \"key\", \"arrayChanged\"];\n\tvar emptyReturn = {};\n\n\tvar _defaultOptions = {\n\t\tinclude: [\"_destroy\"],\n\t\tignore: [],\n\t\tcopy: [],\n\t\tobserve: []\n\t};\n\tvar defaultOptions = _defaultOptions;\n\n\t// Author: KennyTM @ StackOverflow\n\tfunction unionArrays (x, y) {\n\t\tvar obj = {};\n\t\tfor (var i = x.length - 1; i >= 0; -- i) obj[x[i]] = x[i];\n\t\tfor (var i = y.length - 1; i >= 0; -- i) obj[y[i]] = y[i];\n\t\tvar res = [];\n\n\t\tfor (var k in obj) {\n\t\t\tres.push(obj[k]);\n\t\t};\n\n\t\treturn res;\n\t}\n\n\tfunction extendObject(destination, source) {\n\t\tvar destType;\n\n\t\tfor (var key in source) {\n\t\t\tif (source.hasOwnProperty(key) && source[key]) {\n\t\t\t\tdestType = exports.getType(destination[key]);\n\t\t\t\tif (key && destination[key] && destType !== \"array\" && destType !== \"string\") {\n\t\t\t\t\textendObject(destination[key], source[key]);\n\t\t\t\t} else {\n\t\t\t\t\tvar bothArrays = exports.getType(destination[key]) === \"array\" && exports.getType(source[key]) === \"array\";\n\t\t\t\t\tif (bothArrays) {\n\t\t\t\t\t\tdestination[key] = unionArrays(destination[key], source[key]);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tdestination[key] = source[key];\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tfunction merge(obj1, obj2) {\n\t\tvar merged = {};\n\t\textendObject(merged, obj1);\n\t\textendObject(merged, obj2);\n\n\t\treturn merged;\n\t}\n\n\texports.isMapped = function (viewModel) {\n\t\tvar unwrapped = ko.utils.unwrapObservable(viewModel);\n\t\treturn unwrapped && unwrapped[mappingProperty];\n\t}\n\n\texports.fromJS = function (jsObject /*, inputOptions, target*/ ) {\n\t\tif (arguments.length == 0) throw new Error(\"When calling ko.fromJS, pass the object you want to convert.\");\n\n\t\ttry {\n\t\t\tif (!mappingNesting++) {\n\t\t\t\tdependentObservables = [];\n\t\t\t\tvisitedObjects = new objectLookup();\n\t\t\t}\n\n\t\t\tvar options;\n\t\t\tvar target;\n\n\t\t\tif (arguments.length == 2) {\n\t\t\t\tif (arguments[1][mappingProperty]) {\n\t\t\t\t\ttarget = arguments[1];\n\t\t\t\t} else {\n\t\t\t\t\toptions = arguments[1];\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (arguments.length == 3) {\n\t\t\t\toptions = arguments[1];\n\t\t\t\ttarget = arguments[2];\n\t\t\t}\n\n\t\t\tif (target) {\n\t\t\t\toptions = merge(options, target[mappingProperty]);\n\t\t\t}\n\t\t\toptions = fillOptions(options);\n\n\t\t\tvar result = updateViewModel(target, jsObject, options);\n\t\t\tif (target) {\n\t\t\t\tresult = target;\n\t\t\t}\n\n\t\t\t// Evaluate any dependent observables that were proxied.\n\t\t\t// Do this after the model's observables have been created\n\t\t\tif (!--mappingNesting) {\n\t\t\t\twhile (dependentObservables.length) {\n\t\t\t\t\tvar DO = dependentObservables.pop();\n\t\t\t\t\tif (DO) {\n\t\t\t\t\t\tDO();\n\t\t\t\t\t\t\n\t\t\t\t\t\t// Move this magic property to the underlying dependent observable\n\t\t\t\t\t\tDO.__DO[\"throttleEvaluation\"] = DO[\"throttleEvaluation\"];\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Save any new mapping options in the view model, so that updateFromJS can use them later.\n\t\t\tresult[mappingProperty] = merge(result[mappingProperty], options);\n\n\t\t\treturn result;\n\t\t} catch(e) {\n\t\t\tmappingNesting = 0;\n\t\t\tthrow e;\n\t\t}\n\t};\n\n\texports.fromJSON = function (jsonString /*, options, target*/ ) {\n\t\tvar parsed = ko.utils.parseJson(jsonString);\n\t\targuments[0] = parsed;\n\t\treturn exports.fromJS.apply(this, arguments);\n\t};\n\n\texports.updateFromJS = function (viewModel) {\n\t\tthrow new Error(\"ko.mapping.updateFromJS, use ko.mapping.fromJS instead. Please note that the order of parameters is different!\");\n\t};\n\n\texports.updateFromJSON = function (viewModel) {\n\t\tthrow new Error(\"ko.mapping.updateFromJSON, use ko.mapping.fromJSON instead. Please note that the order of parameters is different!\");\n\t};\n\n\texports.toJS = function (rootObject, options) {\n\t\tif (!defaultOptions) exports.resetDefaultOptions();\n\n\t\tif (arguments.length == 0) throw new Error(\"When calling ko.mapping.toJS, pass the object you want to convert.\");\n\t\tif (exports.getType(defaultOptions.ignore) !== \"array\") throw new Error(\"ko.mapping.defaultOptions().ignore should be an array.\");\n\t\tif (exports.getType(defaultOptions.include) !== \"array\") throw new Error(\"ko.mapping.defaultOptions().include should be an array.\");\n\t\tif (exports.getType(defaultOptions.copy) !== \"array\") throw new Error(\"ko.mapping.defaultOptions().copy should be an array.\");\n\n\t\t// Merge in the options used in fromJS\n\t\toptions = fillOptions(options, rootObject[mappingProperty]);\n\n\t\t// We just unwrap everything at every level in the object graph\n\t\treturn exports.visitModel(rootObject, function (x) {\n\t\t\treturn ko.utils.unwrapObservable(x)\n\t\t}, options);\n\t};\n\n\texports.toJSON = function (rootObject, options) {\n\t\tvar plainJavaScriptObject = exports.toJS(rootObject, options);\n\t\treturn ko.utils.stringifyJson(plainJavaScriptObject);\n\t};\n\n\texports.defaultOptions = function () {\n\t\tif (arguments.length > 0) {\n\t\t\tdefaultOptions = arguments[0];\n\t\t} else {\n\t\t\treturn defaultOptions;\n\t\t}\n\t};\n\n\texports.resetDefaultOptions = function () {\n\t\tdefaultOptions = {\n\t\t\tinclude: _defaultOptions.include.slice(0),\n\t\t\tignore: _defaultOptions.ignore.slice(0),\n\t\t\tcopy: _defaultOptions.copy.slice(0)\n\t\t};\n\t};\n\n\texports.getType = function(x) {\n\t\tif ((x) && (typeof (x) === \"object\")) {\n\t\t\tif (x.constructor === Date) return \"date\";\n\t\t\tif (x.constructor === Array) return \"array\";\n\t\t}\n\t\treturn typeof x;\n\t}\n\n\tfunction fillOptions(rawOptions, otherOptions) {\n\t\tvar options = merge({}, rawOptions);\n\n\t\t// Move recognized root-level properties into a root namespace\n\t\tfor (var i = recognizedRootProperties.length - 1; i >= 0; i--) {\n\t\t\tvar property = recognizedRootProperties[i];\n\t\t\t\n\t\t\t// Carry on, unless this property is present\n\t\t\tif (!options[property]) continue;\n\t\t\t\n\t\t\t// Move the property into the root namespace\n\t\t\tif (!(options[\"\"] instanceof Object)) options[\"\"] = {};\n\t\t\toptions[\"\"][property] = options[property];\n\t\t\tdelete options[property];\n\t\t}\n\n\t\tif (otherOptions) {\n\t\t\toptions.ignore = mergeArrays(otherOptions.ignore, options.ignore);\n\t\t\toptions.include = mergeArrays(otherOptions.include, options.include);\n\t\t\toptions.copy = mergeArrays(otherOptions.copy, options.copy);\n\t\t\toptions.observe = mergeArrays(otherOptions.observe, options.observe);\n\t\t}\n\t\toptions.ignore = mergeArrays(options.ignore, defaultOptions.ignore);\n\t\toptions.include = mergeArrays(options.include, defaultOptions.include);\n\t\toptions.copy = mergeArrays(options.copy, defaultOptions.copy);\n\t\toptions.observe = mergeArrays(options.observe, defaultOptions.observe);\n\n\t\toptions.mappedProperties = options.mappedProperties || {};\n\t\toptions.copiedProperties = options.copiedProperties || {};\n\t\treturn options;\n\t}\n\n\tfunction mergeArrays(a, b) {\n\t\tif (exports.getType(a) !== \"array\") {\n\t\t\tif (exports.getType(a) === \"undefined\") a = [];\n\t\t\telse a = [a];\n\t\t}\n\t\tif (exports.getType(b) !== \"array\") {\n\t\t\tif (exports.getType(b) === \"undefined\") b = [];\n\t\t\telse b = [b];\n\t\t}\n\n\t\treturn ko.utils.arrayGetDistinctValues(a.concat(b));\n\t}\n\n\t// When using a 'create' callback, we proxy the dependent observable so that it doesn't immediately evaluate on creation.\n\t// The reason is that the dependent observables in the user-specified callback may contain references to properties that have not been mapped yet.\n\tfunction withProxyDependentObservable(dependentObservables, callback) {\n\t\tvar localDO = ko.dependentObservable;\n\t\tko.dependentObservable = function (read, owner, options) {\n\t\t\toptions = options || {};\n\n\t\t\tif (read && typeof read == \"object\") { // mirrors condition in knockout implementation of DO's\n\t\t\t\toptions = read;\n\t\t\t}\n\n\t\t\tvar realDeferEvaluation = options.deferEvaluation;\n\n\t\t\tvar isRemoved = false;\n\n\t\t\t// We wrap the original dependent observable so that we can remove it from the 'dependentObservables' list we need to evaluate after mapping has\n\t\t\t// completed if the user already evaluated the DO themselves in the meantime.\n\t\t\tvar wrap = function (DO) {\n\t\t\t\t// Temporarily revert ko.dependentObservable, since it is used in ko.isWriteableObservable\n\t\t\t\tvar tmp = ko.dependentObservable;\n\t\t\t\tko.dependentObservable = realKoDependentObservable;\n\t\t\t\tvar isWriteable = ko.isWriteableObservable(DO);\n\t\t\t\tko.dependentObservable = tmp;\n\n\t\t\t\tvar wrapped = realKoDependentObservable({\n\t\t\t\t\tread: function () {\n\t\t\t\t\t\tif (!isRemoved) {\n\t\t\t\t\t\t\tko.utils.arrayRemoveItem(dependentObservables, DO);\n\t\t\t\t\t\t\tisRemoved = true;\n\t\t\t\t\t\t}\n\t\t\t\t\t\treturn DO.apply(DO, arguments);\n\t\t\t\t\t},\n\t\t\t\t\twrite: isWriteable && function (val) {\n\t\t\t\t\t\treturn DO(val);\n\t\t\t\t\t},\n\t\t\t\t\tdeferEvaluation: true\n\t\t\t\t});\n\t\t\t\tif (DEBUG) wrapped._wrapper = true;\n\t\t\t\twrapped.__DO = DO;\n\t\t\t\treturn wrapped;\n\t\t\t};\n\t\t\t\n\t\t\toptions.deferEvaluation = true; // will either set for just options, or both read/options.\n\t\t\tvar realDependentObservable = new realKoDependentObservable(read, owner, options);\n\n\t\t\tif (!realDeferEvaluation) {\n\t\t\t\trealDependentObservable = wrap(realDependentObservable);\n\t\t\t\tdependentObservables.push(realDependentObservable);\n\t\t\t}\n\n\t\t\treturn realDependentObservable;\n\t\t}\n\t\tko.dependentObservable.fn = realKoDependentObservable.fn;\n\t\tko.computed = ko.dependentObservable;\n\t\tvar result = callback();\n\t\tko.dependentObservable = localDO;\n\t\tko.computed = ko.dependentObservable;\n\t\treturn result;\n\t}\n\n\tfunction updateViewModel(mappedRootObject, rootObject, options, parentName, parent, parentPropertyName, mappedParent) {\n\t\tvar isArray = exports.getType(ko.utils.unwrapObservable(rootObject)) === \"array\";\n\n\t\tparentPropertyName = parentPropertyName || \"\";\n\n\t\t// If this object was already mapped previously, take the options from there and merge them with our existing ones.\n\t\tif (exports.isMapped(mappedRootObject)) {\n\t\t\tvar previousMapping = ko.utils.unwrapObservable(mappedRootObject)[mappingProperty];\n\t\t\toptions = merge(previousMapping, options);\n\t\t}\n\n\t\tvar callbackParams = {\n\t\t\tdata: rootObject,\n\t\t\tparent: mappedParent || parent\n\t\t};\n\n\t\tvar hasCreateCallback = function () {\n\t\t\treturn options[parentName] && options[parentName].create instanceof Function;\n\t\t};\n\n\t\tvar createCallback = function (data) {\n\t\t\treturn withProxyDependentObservable(dependentObservables, function () {\n\t\t\t\t\n\t\t\t\tif (ko.utils.unwrapObservable(parent) instanceof Array) {\n\t\t\t\t\treturn options[parentName].create({\n\t\t\t\t\t\tdata: data || callbackParams.data,\n\t\t\t\t\t\tparent: callbackParams.parent,\n\t\t\t\t\t\tskip: emptyReturn\n\t\t\t\t\t});\n\t\t\t\t} else {\n\t\t\t\t\treturn options[parentName].create({\n\t\t\t\t\t\tdata: data || callbackParams.data,\n\t\t\t\t\t\tparent: callbackParams.parent\n\t\t\t\t\t});\n\t\t\t\t}\t\t\t\t\n\t\t\t});\n\t\t};\n\n\t\tvar hasUpdateCallback = function () {\n\t\t\treturn options[parentName] && options[parentName].update instanceof Function;\n\t\t};\n\n\t\tvar updateCallback = function (obj, data) {\n\t\t\tvar params = {\n\t\t\t\tdata: data || callbackParams.data,\n\t\t\t\tparent: callbackParams.parent,\n\t\t\t\ttarget: ko.utils.unwrapObservable(obj)\n\t\t\t};\n\n\t\t\tif (ko.isWriteableObservable(obj)) {\n\t\t\t\tparams.observable = obj;\n\t\t\t}\n\n\t\t\treturn options[parentName].update(params);\n\t\t}\n\n\t\tvar alreadyMapped = visitedObjects.get(rootObject);\n\t\tif (alreadyMapped) {\n\t\t\treturn alreadyMapped;\n\t\t}\n\n\t\tparentName = parentName || \"\";\n\n\t\tif (!isArray) {\n\t\t\t// For atomic types, do a direct update on the observable\n\t\t\tif (!canHaveProperties(rootObject)) {\n\t\t\t\tswitch (exports.getType(rootObject)) {\n\t\t\t\tcase \"function\":\n\t\t\t\t\tif (hasUpdateCallback()) {\n\t\t\t\t\t\tif (ko.isWriteableObservable(rootObject)) {\n\t\t\t\t\t\t\trootObject(updateCallback(rootObject));\n\t\t\t\t\t\t\tmappedRootObject = rootObject;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tmappedRootObject = updateCallback(rootObject);\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\tmappedRootObject = rootObject;\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\t\t\t\tdefault:\n\t\t\t\t\tif (ko.isWriteableObservable(mappedRootObject)) {\n\t\t\t\t\t\tif (hasUpdateCallback()) {\n\t\t\t\t\t\t\tvar valueToWrite = updateCallback(mappedRootObject);\n\t\t\t\t\t\t\tmappedRootObject(valueToWrite);\n\t\t\t\t\t\t\treturn valueToWrite;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tvar valueToWrite = ko.utils.unwrapObservable(rootObject);\n\t\t\t\t\t\t\tmappedRootObject(valueToWrite);\n\t\t\t\t\t\t\treturn valueToWrite;\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\tvar hasCreateOrUpdateCallback = hasCreateCallback() || hasUpdateCallback();\n\t\t\t\t\t\t\n\t\t\t\t\t\tif (hasCreateCallback()) {\n\t\t\t\t\t\t\tmappedRootObject = createCallback();\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tmappedRootObject = ko.observable(ko.utils.unwrapObservable(rootObject));\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (hasUpdateCallback()) {\n\t\t\t\t\t\t\tmappedRootObject(updateCallback(mappedRootObject));\n\t\t\t\t\t\t}\n\t\t\t\t\t\t\n\t\t\t\t\t\tif (hasCreateOrUpdateCallback) return mappedRootObject;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t} else {\n\t\t\t\tmappedRootObject = ko.utils.unwrapObservable(mappedRootObject);\n\t\t\t\tif (!mappedRootObject) {\n\t\t\t\t\tif (hasCreateCallback()) {\n\t\t\t\t\t\tvar result = createCallback();\n\n\t\t\t\t\t\tif (hasUpdateCallback()) {\n\t\t\t\t\t\t\tresult = updateCallback(result);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\treturn result;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tif (hasUpdateCallback()) {\n\t\t\t\t\t\t\treturn updateCallback(result);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tmappedRootObject = {};\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif (hasUpdateCallback()) {\n\t\t\t\t\tmappedRootObject = updateCallback(mappedRootObject);\n\t\t\t\t}\n\n\t\t\t\tvisitedObjects.save(rootObject, mappedRootObject);\n\t\t\t\tif (hasUpdateCallback()) return mappedRootObject;\n\n\t\t\t\t// For non-atomic types, visit all properties and update recursively\n\t\t\t\tvisitPropertiesOrArrayEntries(rootObject, function (indexer) {\n\t\t\t\t\tvar fullPropertyName = parentPropertyName.length ? parentPropertyName + \".\" + indexer : indexer;\n\n\t\t\t\t\tif (ko.utils.arrayIndexOf(options.ignore, fullPropertyName) != -1) {\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (ko.utils.arrayIndexOf(options.copy, fullPropertyName) != -1) {\n\t\t\t\t\t\tmappedRootObject[indexer] = rootObject[indexer];\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\tif(typeof rootObject[indexer] != \"object\" && typeof rootObject[indexer] != \"array\" && options.observe.length > 0 && ko.utils.arrayIndexOf(options.observe, fullPropertyName) == -1)\n\t\t\t\t\t{\n\t\t\t\t\t\tmappedRootObject[indexer] = rootObject[indexer];\n\t\t\t\t\t\toptions.copiedProperties[fullPropertyName] = true;\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\t// In case we are adding an already mapped property, fill it with the previously mapped property value to prevent recursion.\n\t\t\t\t\t// If this is a property that was generated by fromJS, we should use the options specified there\n\t\t\t\t\tvar prevMappedProperty = visitedObjects.get(rootObject[indexer]);\n\t\t\t\t\tvar retval = updateViewModel(mappedRootObject[indexer], rootObject[indexer], options, indexer, mappedRootObject, fullPropertyName, mappedRootObject);\n\t\t\t\t\tvar value = prevMappedProperty || retval;\n\t\t\t\t\t\n\t\t\t\t\tif(options.observe.length > 0 && ko.utils.arrayIndexOf(options.observe, fullPropertyName) == -1)\n\t\t\t\t\t{\n\t\t\t\t\t\tmappedRootObject[indexer] = value();\n\t\t\t\t\t\toptions.copiedProperties[fullPropertyName] = true;\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\tif (ko.isWriteableObservable(mappedRootObject[indexer])) {\n\t\t\t\t\t\tvalue = ko.utils.unwrapObservable(value);\n\t\t\t\t\t\tif (mappedRootObject[indexer]() !== value) {\n\t\t\t\t\t\t\tmappedRootObject[indexer](value);\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\tvalue = mappedRootObject[indexer] === undefined ? value : ko.utils.unwrapObservable(value);\n\t\t\t\t\t\tmappedRootObject[indexer] = value;\n\t\t\t\t\t}\n\n\t\t\t\t\toptions.mappedProperties[fullPropertyName] = true;\n\t\t\t\t});\n\t\t\t}\n\t\t} else { //mappedRootObject is an array\n\t\t\tvar changes = [];\n\n\t\t\tvar hasKeyCallback = false;\n\t\t\tvar keyCallback = function (x) {\n\t\t\t\treturn x;\n\t\t\t}\n\t\t\tif (options[parentName] && options[parentName].key) {\n\t\t\t\tkeyCallback = options[parentName].key;\n\t\t\t\thasKeyCallback = true;\n\t\t\t}\n\n\t\t\tif (!ko.isObservable(mappedRootObject)) {\n\t\t\t\t// When creating the new observable array, also add a bunch of utility functions that take the 'key' of the array items into account.\n\t\t\t\tmappedRootObject = ko.observableArray([]);\n\n\t\t\t\tmappedRootObject.mappedRemove = function (valueOrPredicate) {\n\t\t\t\t\tvar predicate = typeof valueOrPredicate == \"function\" ? valueOrPredicate : function (value) {\n\t\t\t\t\t\t\treturn value === keyCallback(valueOrPredicate);\n\t\t\t\t\t\t};\n\t\t\t\t\treturn mappedRootObject.remove(function (item) {\n\t\t\t\t\t\treturn predicate(keyCallback(item));\n\t\t\t\t\t});\n\t\t\t\t}\n\n\t\t\t\tmappedRootObject.mappedRemoveAll = function (arrayOfValues) {\n\t\t\t\t\tvar arrayOfKeys = filterArrayByKey(arrayOfValues, keyCallback);\n\t\t\t\t\treturn mappedRootObject.remove(function (item) {\n\t\t\t\t\t\treturn ko.utils.arrayIndexOf(arrayOfKeys, keyCallback(item)) != -1;\n\t\t\t\t\t});\n\t\t\t\t}\n\n\t\t\t\tmappedRootObject.mappedDestroy = function (valueOrPredicate) {\n\t\t\t\t\tvar predicate = typeof valueOrPredicate == \"function\" ? valueOrPredicate : function (value) {\n\t\t\t\t\t\t\treturn value === keyCallback(valueOrPredicate);\n\t\t\t\t\t\t};\n\t\t\t\t\treturn mappedRootObject.destroy(function (item) {\n\t\t\t\t\t\treturn predicate(keyCallback(item));\n\t\t\t\t\t});\n\t\t\t\t}\n\n\t\t\t\tmappedRootObject.mappedDestroyAll = function (arrayOfValues) {\n\t\t\t\t\tvar arrayOfKeys = filterArrayByKey(arrayOfValues, keyCallback);\n\t\t\t\t\treturn mappedRootObject.destroy(function (item) {\n\t\t\t\t\t\treturn ko.utils.arrayIndexOf(arrayOfKeys, keyCallback(item)) != -1;\n\t\t\t\t\t});\n\t\t\t\t}\n\n\t\t\t\tmappedRootObject.mappedIndexOf = function (item) {\n\t\t\t\t\tvar keys = filterArrayByKey(mappedRootObject(), keyCallback);\n\t\t\t\t\tvar key = keyCallback(item);\n\t\t\t\t\treturn ko.utils.arrayIndexOf(keys, key);\n\t\t\t\t}\n\n\t\t\t\tmappedRootObject.mappedGet = function (item) {\n\t\t\t\t\treturn mappedRootObject()[mappedRootObject.mappedIndexOf(item)];\n\t\t\t\t}\n\n\t\t\t\tmappedRootObject.mappedCreate = function (value) {\n\t\t\t\t\tif (mappedRootObject.mappedIndexOf(value) !== -1) {\n\t\t\t\t\t\tthrow new Error(\"There already is an object with the key that you specified.\");\n\t\t\t\t\t}\n\n\t\t\t\t\tvar item = hasCreateCallback() ? createCallback(value) : value;\n\t\t\t\t\tif (hasUpdateCallback()) {\n\t\t\t\t\t\tvar newValue = updateCallback(item, value);\n\t\t\t\t\t\tif (ko.isWriteableObservable(item)) {\n\t\t\t\t\t\t\titem(newValue);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\titem = newValue;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tmappedRootObject.push(item);\n\t\t\t\t\treturn item;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tvar currentArrayKeys = filterArrayByKey(ko.utils.unwrapObservable(mappedRootObject), keyCallback).sort();\n\t\t\tvar newArrayKeys = filterArrayByKey(rootObject, keyCallback);\n\t\t\tif (hasKeyCallback) newArrayKeys.sort();\n\t\t\tvar editScript = ko.utils.compareArrays(currentArrayKeys, newArrayKeys);\n\n\t\t\tvar ignoreIndexOf = {};\n\t\t\t\n\t\t\tvar i, j;\n\n\t\t\tvar unwrappedRootObject = ko.utils.unwrapObservable(rootObject);\n\t\t\tvar itemsByKey = {};\n\t\t\tvar optimizedKeys = true;\n\t\t\tfor (i = 0, j = unwrappedRootObject.length; i < j; i++) {\n\t\t\t\tvar key = keyCallback(unwrappedRootObject[i]);\n\t\t\t\tif (key === undefined || key instanceof Object) {\n\t\t\t\t\toptimizedKeys = false;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\titemsByKey[key] = unwrappedRootObject[i];\n\t\t\t}\n\n\t\t\tvar newContents = [];\n\t\t\tvar passedOver = 0;\n\t\t\tfor (i = 0, j = editScript.length; i < j; i++) {\n\t\t\t\tvar key = editScript[i];\n\t\t\t\tvar mappedItem;\n\t\t\t\tvar fullPropertyName = parentPropertyName + \"[\" + i + \"]\";\n\t\t\t\tswitch (key.status) {\n\t\t\t\tcase \"added\":\n\t\t\t\t\tvar item = optimizedKeys ? itemsByKey[key.value] : getItemByKey(ko.utils.unwrapObservable(rootObject), key.value, keyCallback);\n\t\t\t\t\tmappedItem = updateViewModel(undefined, item, options, parentName, mappedRootObject, fullPropertyName, parent);\n\t\t\t\t\tif(!hasCreateCallback()) {\n\t\t\t\t\t\tmappedItem = ko.utils.unwrapObservable(mappedItem);\n\t\t\t\t\t}\n\n\t\t\t\t\tvar index = ignorableIndexOf(ko.utils.unwrapObservable(rootObject), item, ignoreIndexOf);\n\t\t\t\t\t\n\t\t\t\t\tif (mappedItem === emptyReturn) {\n\t\t\t\t\t\tpassedOver++;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tnewContents[index - passedOver] = mappedItem;\n\t\t\t\t\t}\n\t\t\t\t\t\t\n\t\t\t\t\tignoreIndexOf[index] = true;\n\t\t\t\t\tbreak;\n\t\t\t\tcase \"retained\":\n\t\t\t\t\tvar item = optimizedKeys ? itemsByKey[key.value] : getItemByKey(ko.utils.unwrapObservable(rootObject), key.value, keyCallback);\n\t\t\t\t\tmappedItem = getItemByKey(mappedRootObject, key.value, keyCallback);\n\t\t\t\t\tupdateViewModel(mappedItem, item, options, parentName, mappedRootObject, fullPropertyName, parent);\n\n\t\t\t\t\tvar index = ignorableIndexOf(ko.utils.unwrapObservable(rootObject), item, ignoreIndexOf);\n\t\t\t\t\tnewContents[index] = mappedItem;\n\t\t\t\t\tignoreIndexOf[index] = true;\n\t\t\t\t\tbreak;\n\t\t\t\tcase \"deleted\":\n\t\t\t\t\tmappedItem = getItemByKey(mappedRootObject, key.value, keyCallback);\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\n\t\t\t\tchanges.push({\n\t\t\t\t\tevent: key.status,\n\t\t\t\t\titem: mappedItem\n\t\t\t\t});\n\t\t\t}\n\n\t\t\tmappedRootObject(newContents);\n\n\t\t\tif (options[parentName] && options[parentName].arrayChanged) {\n\t\t\t\tko.utils.arrayForEach(changes, function (change) {\n\t\t\t\t\toptions[parentName].arrayChanged(change.event, change.item);\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\n\t\treturn mappedRootObject;\n\t}\n\n\tfunction ignorableIndexOf(array, item, ignoreIndices) {\n\t\tfor (var i = 0, j = array.length; i < j; i++) {\n\t\t\tif (ignoreIndices[i] === true) continue;\n\t\t\tif (array[i] === item) return i;\n\t\t}\n\t\treturn null;\n\t}\n\n\tfunction mapKey(item, callback) {\n\t\tvar mappedItem;\n\t\tif (callback) mappedItem = callback(item);\n\t\tif (exports.getType(mappedItem) === \"undefined\") mappedItem = item;\n\n\t\treturn ko.utils.unwrapObservable(mappedItem);\n\t}\n\n\tfunction getItemByKey(array, key, callback) {\n\t\tarray = ko.utils.unwrapObservable(array);\n\t\tfor (var i = 0, j = array.length; i < j; i++) {\n\t\t\tvar item = array[i];\n\t\t\tif (mapKey(item, callback) === key) return item;\n\t\t}\n\n\t\tthrow new Error(\"When calling ko.update*, the key '\" + key + \"' was not found!\");\n\t}\n\n\tfunction filterArrayByKey(array, callback) {\n\t\treturn ko.utils.arrayMap(ko.utils.unwrapObservable(array), function (item) {\n\t\t\tif (callback) {\n\t\t\t\treturn mapKey(item, callback);\n\t\t\t} else {\n\t\t\t\treturn item;\n\t\t\t}\n\t\t});\n\t}\n\n\tfunction visitPropertiesOrArrayEntries(rootObject, visitorCallback) {\n\t\tif (exports.getType(rootObject) === \"array\") {\n\t\t\tfor (var i = 0; i < rootObject.length; i++)\n\t\t\tvisitorCallback(i);\n\t\t} else {\n\t\t\tfor (var propertyName in rootObject)\n\t\t\tvisitorCallback(propertyName);\n\t\t}\n\t};\n\n\tfunction canHaveProperties(object) {\n\t\tvar type = exports.getType(object);\n\t\treturn ((type === \"object\") || (type === \"array\")) && (object !== null);\n\t}\n\n\t// Based on the parentName, this creates a fully classified name of a property\n\n\tfunction getPropertyName(parentName, parent, indexer) {\n\t\tvar propertyName = parentName || \"\";\n\t\tif (exports.getType(parent) === \"array\") {\n\t\t\tif (parentName) {\n\t\t\t\tpropertyName += \"[\" + indexer + \"]\";\n\t\t\t}\n\t\t} else {\n\t\t\tif (parentName) {\n\t\t\t\tpropertyName += \".\";\n\t\t\t}\n\t\t\tpropertyName += indexer;\n\t\t}\n\t\treturn propertyName;\n\t}\n\n\texports.visitModel = function (rootObject, callback, options) {\n\t\toptions = options || {};\n\t\toptions.visitedObjects = options.visitedObjects || new objectLookup();\n\n\t\tvar mappedRootObject;\n\t\tvar unwrappedRootObject = ko.utils.unwrapObservable(rootObject);\n\n\t\tif (!canHaveProperties(unwrappedRootObject)) {\n\t\t\treturn callback(rootObject, options.parentName);\n\t\t} else {\n\t\t\toptions = fillOptions(options, unwrappedRootObject[mappingProperty]);\n\n\t\t\t// Only do a callback, but ignore the results\n\t\t\tcallback(rootObject, options.parentName);\n\t\t\tmappedRootObject = exports.getType(unwrappedRootObject) === \"array\" ? [] : {};\n\t\t}\n\n\t\toptions.visitedObjects.save(rootObject, mappedRootObject);\n\n\t\tvar parentName = options.parentName;\n\t\tvisitPropertiesOrArrayEntries(unwrappedRootObject, function (indexer) {\n\t\t\tif (options.ignore && ko.utils.arrayIndexOf(options.ignore, indexer) != -1) return;\n\n\t\t\tvar propertyValue = unwrappedRootObject[indexer];\n\t\t\toptions.parentName = getPropertyName(parentName, unwrappedRootObject, indexer);\n\n\t\t\t// If we don't want to explicitly copy the unmapped property...\n\t\t\tif (ko.utils.arrayIndexOf(options.copy, indexer) === -1) {\n\t\t\t\t// ...find out if it's a property we want to explicitly include\n\t\t\t\tif (ko.utils.arrayIndexOf(options.include, indexer) === -1) {\n\t\t\t\t\t// The mapped properties object contains all the properties that were part of the original object.\n\t\t\t\t\t// If a property does not exist, and it is not because it is part of an array (e.g. \"myProp[3]\"), then it should not be unmapped.\n\t\t\t\t    if (unwrappedRootObject[mappingProperty]\n\t\t\t\t        && unwrappedRootObject[mappingProperty].mappedProperties && !unwrappedRootObject[mappingProperty].mappedProperties[indexer]\n\t\t\t\t        && unwrappedRootObject[mappingProperty].copiedProperties && !unwrappedRootObject[mappingProperty].copiedProperties[indexer]\n\t\t\t\t        && !(exports.getType(unwrappedRootObject) === \"array\")) {\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tvar outputProperty;\n\t\t\tswitch (exports.getType(ko.utils.unwrapObservable(propertyValue))) {\n\t\t\tcase \"object\":\n\t\t\tcase \"array\":\n\t\t\tcase \"undefined\":\n\t\t\t\tvar previouslyMappedValue = options.visitedObjects.get(propertyValue);\n\t\t\t\tmappedRootObject[indexer] = (exports.getType(previouslyMappedValue) !== \"undefined\") ? previouslyMappedValue : exports.visitModel(propertyValue, callback, options);\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\tmappedRootObject[indexer] = callback(propertyValue, options.parentName);\n\t\t\t}\n\t\t});\n\n\t\treturn mappedRootObject;\n\t}\n\n\tfunction simpleObjectLookup() {\n\t\tvar keys = [];\n\t\tvar values = [];\n\t\tthis.save = function (key, value) {\n\t\t\tvar existingIndex = ko.utils.arrayIndexOf(keys, key);\n\t\t\tif (existingIndex >= 0) values[existingIndex] = value;\n\t\t\telse {\n\t\t\t\tkeys.push(key);\n\t\t\t\tvalues.push(value);\n\t\t\t}\n\t\t};\n\t\tthis.get = function (key) {\n\t\t\tvar existingIndex = ko.utils.arrayIndexOf(keys, key);\n\t\t\tvar value = (existingIndex >= 0) ? values[existingIndex] : undefined;\n\t\t\treturn value;\n\t\t};\n\t};\n\t\n\tfunction objectLookup() {\n\t\tvar buckets = {};\n\t\t\n\t\tvar findBucket = function(key) {\n\t\t\tvar bucketKey;\n\t\t\ttry {\n\t\t\t\tbucketKey = key;//JSON.stringify(key);\n\t\t\t}\n\t\t\tcatch (e) {\n\t\t\t\tbucketKey = \"$$$\";\n\t\t\t}\n\n\t\t\tvar bucket = buckets[bucketKey];\n\t\t\tif (bucket === undefined) {\n\t\t\t\tbucket = new simpleObjectLookup();\n\t\t\t\tbuckets[bucketKey] = bucket;\n\t\t\t}\n\t\t\treturn bucket;\n\t\t};\n\t\t\n\t\tthis.save = function (key, value) {\n\t\t\tfindBucket(key).save(key, value);\n\t\t};\n\t\tthis.get = function (key) {\n\t\t\treturn findBucket(key).get(key);\n\t\t};\n\t};\n}));","// Knockout Fast Mapping v0.1\n// License: MIT (http://www.opensource.org/licenses/mit-license.php)\n\n(function (factory) {\n\t// Module systems magic dance.\n\n\tif (typeof require === \"function\" && typeof exports === \"object\" && typeof module === \"object\") {\n\t\t// CommonJS or Node: hard-coded dependency on \"knockout\"\n\t\tfactory((typeof window !== \"undefined\" ? window['ko'] : typeof global !== \"undefined\" ? global['ko'] : null), exports);\n\t} else if (typeof define === \"function\" && define[\"amd\"]) {\n\t\t// AMD anonymous module with hard-coded dependency on \"knockout\"\n\t\tdefine([\"knockout\", \"exports\"], factory);\n\t} else {\n\t\t// <script> tag: use the global `ko` object, attaching a `wrap` property\n\t\tfactory(ko, ko.wrap = {});\n\t}\n}(function (ko, exports) {\n    \n    // this function mimics ko.mapping\n    exports.fromJS = function(jsObject, computedFunctions)\n    {\n        reset();\n\treturn wrap(jsObject, computedFunctions);\n    }\n\n    // this function unwraps the outer for assigning the result to an observable\n    // see https://github.com/SteveSanderson/knockout/issues/517\n    exports.updateFromJS = function(observable, jsObject, computedFunctions)\n    {\n        reset();\n\treturn observable(ko.utils.unwrapObservable(wrap(jsObject, computedFunctions)));\n    }\n\n    exports.fromJSON = function (jsonString, computedFunctions) {\n\tvar parsed = ko.utils.parseJson(jsonString);\n\targuments[0] = parsed;\n\treturn exports.fromJS.apply(this, computedFunctions);\n    };\n    \n    exports.toJS = function (observable) {\n\treturn unwrap(observable);\n    }\n\n    exports.toJSON = function (observable) {\n\tvar plainJavaScriptObject = exports.toJS(observable);\n\treturn ko.utils.stringifyJson(plainJavaScriptObject);\n    };\n\n    function typeOf(value) {\n\tvar s = typeof value;\n\tif (s === 'object') {\n            if (value) {\n                if (value.constructor == Date)\n                    s = 'date';\n\t\telse if (Object.prototype.toString.call(value) == '[object Array]')\n                    s = 'array';\n            } else {\n\t\ts = 'null';\n            }\n\t}\n\treturn s;\n    }\n\n    // unwrapping\n    function unwrapObject(o)\n    {\n\tvar t = {};\n\n\tfor (var k in o)\n\t{\n\t    var v = o[k];\n\n\t    if (ko.isComputed(v))\n\t\tcontinue;\n\n\t    t[k] = unwrap(v);\n\t}\n\n\treturn t;\n    }\n\n    function unwrapArray(a)\n    {\n\tvar r = [];\n\n\tif (!a || a.length == 0)\n\t    return r;\n\t\n\tfor (var i = 0, l = a.length; i < l; ++i)\n\t    r.push(unwrap(a[i]));\n\n\treturn r;\n    }\n\n    function unwrap(v)\n    {\n\tvar isObservable = ko.isObservable(v);\n\n\tif (isObservable)\n\t{\n\t    var val = v();\n\n\t    return unwrap(val);\n\t}\n\telse\n\t{\n\t    if (typeOf(v) == \"array\")\n\t    {\n\t\treturn unwrapArray(v);\n\t    }\n\t    else if (typeOf(v) == \"object\")\n\t    {\n\t\treturn unwrapObject(v);\n\t    }\n\t    else\n\t    {\n\t\treturn v;\n\t    }\n\t}\n    }\n\n    function reset()\n    {\n        parents = [{obj: null, wrapped: null, lvl: \"\"}];\n    }    \n    \n    // wrapping\n\n    function wrapObject(o, computedFunctions)\n    {\n        // check for infinite recursion\n        for (var i = 0; i < parents.length; ++i) {\n            if (parents[i].obj === o) {\n                return parents[i].wrapped;\n            }\n        }\n\n\tvar t = {};\n\n\tfor (var k in o)\n\t{\n\t    var v = o[k];\n\n            parents.push({obj: o, wrapped: t, lvl: currentLvl() + \"/\" + k});\n\n\t    t[k] = wrap(v, computedFunctions);\n\n            parents.pop();\n\t}\n\n\tif (computedFunctions && computedFunctions[currentLvl()])\n\t    t = computedFunctions[currentLvl()](t);\n\n        if (hasES5Plugin())\n            ko.track(t);\n\n\treturn t;\n    }\n\n    function wrapArray(a, computedFunctions)\n    {\n\tvar r = ko.observableArray();\n\n\tif (!a || a.length == 0)\n\t    return r;\n\n\tfor (var i = 0, l = a.length; i < l; ++i)\n\t    r.push(wrap(a[i], computedFunctions));\n\n\treturn r;\n    }\n\n    // a stack, used for two purposes:\n    //  - circular reference checking\n    //  - computed functions\n    var parents;\n\n    function currentLvl()\n    {\n\treturn parents[parents.length-1].lvl;\n    }\n\n    function wrap(v, computedFunctions)\n    {\n\tif (typeOf(v) == \"array\")\n\t{\n\t    return wrapArray(v, computedFunctions);\n\t}\n\telse if (typeOf(v) == \"object\")\n\t{\n\t    return wrapObject(v, computedFunctions);\n\t}\n\telse\n\t{\n            if (!hasES5Plugin() && typeof v !== 'function')\n            {\n\t        var t = ko.observable();\n\t        t(v);\n\t        return t;\n            } else\n                return v;\n\t}\n    }\n\n    function hasES5Plugin()\n    {\n        return ko.track != null;\n    }\n}));"]}